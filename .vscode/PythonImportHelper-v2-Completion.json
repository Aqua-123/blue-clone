[
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "execl",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "execl",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "TimeoutError",
        "importPath": "concurrent.futures",
        "description": "concurrent.futures",
        "isExtraImport": true,
        "detail": "concurrent.futures",
        "documentation": {}
    },
    {
        "label": "argv",
        "importPath": "sys",
        "description": "sys",
        "isExtraImport": true,
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "executable",
        "importPath": "sys",
        "description": "sys",
        "isExtraImport": true,
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "argv",
        "importPath": "sys",
        "description": "sys",
        "isExtraImport": true,
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "executable",
        "importPath": "sys",
        "description": "sys",
        "isExtraImport": true,
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Thread",
        "importPath": "threading",
        "description": "threading",
        "isExtraImport": true,
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "Thread",
        "importPath": "threading",
        "description": "threading",
        "isExtraImport": true,
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "Thread",
        "importPath": "threading",
        "description": "threading",
        "isExtraImport": true,
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "gmtime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "perf_counter",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "sleep",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "strftime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "gmtime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "perf_counter",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "sleep",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "strftime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "gmtime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "perf_counter",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "sleep",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "strftime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "sleep",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "strftime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "gmtime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "default_timer",
        "importPath": "timeit",
        "description": "timeit",
        "isExtraImport": true,
        "detail": "timeit",
        "documentation": {}
    },
    {
        "label": "default_timer",
        "importPath": "timeit",
        "description": "timeit",
        "isExtraImport": true,
        "detail": "timeit",
        "documentation": {}
    },
    {
        "label": "default_timer",
        "importPath": "timeit",
        "description": "timeit",
        "isExtraImport": true,
        "detail": "timeit",
        "documentation": {}
    },
    {
        "label": "cleverbotfree",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cleverbotfree",
        "description": "cleverbotfree",
        "detail": "cleverbotfree",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "websocket",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "websocket",
        "description": "websocket",
        "detail": "websocket",
        "documentation": {}
    },
    {
        "label": "create_connection",
        "importPath": "websocket",
        "description": "websocket",
        "isExtraImport": true,
        "detail": "websocket",
        "documentation": {}
    },
    {
        "label": "Github",
        "importPath": "github",
        "description": "github",
        "isExtraImport": true,
        "detail": "github",
        "documentation": {}
    },
    {
        "label": "Github",
        "importPath": "github",
        "description": "github",
        "isExtraImport": true,
        "detail": "github",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "vars",
        "description": "vars",
        "isExtraImport": true,
        "detail": "vars",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "ImgurClientError",
        "importPath": "imgurpython.helpers.error",
        "description": "imgurpython.helpers.error",
        "isExtraImport": true,
        "detail": "imgurpython.helpers.error",
        "documentation": {}
    },
    {
        "label": "ImgurClientRateLimitError",
        "importPath": "imgurpython.helpers.error",
        "description": "imgurpython.helpers.error",
        "isExtraImport": true,
        "detail": "imgurpython.helpers.error",
        "documentation": {}
    },
    {
        "label": "ImgurClientError",
        "importPath": "imgurpython.helpers.error",
        "description": "imgurpython.helpers.error",
        "isExtraImport": true,
        "detail": "imgurpython.helpers.error",
        "documentation": {}
    },
    {
        "label": "ImgurClientRateLimitError",
        "importPath": "imgurpython.helpers.error",
        "description": "imgurpython.helpers.error",
        "isExtraImport": true,
        "detail": "imgurpython.helpers.error",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "gc_logging",
        "description": "gc_logging",
        "isExtraImport": true,
        "detail": "gc_logging",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "gc_logging",
        "description": "gc_logging",
        "isExtraImport": true,
        "detail": "gc_logging",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "utils",
        "description": "utils",
        "isExtraImport": true,
        "detail": "utils",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "utils",
        "description": "utils",
        "isExtraImport": true,
        "detail": "utils",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "utils",
        "description": "utils",
        "isExtraImport": true,
        "detail": "utils",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "var",
        "description": "var",
        "isExtraImport": true,
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "var",
        "description": "var",
        "isExtraImport": true,
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "var",
        "description": "var",
        "isExtraImport": true,
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "var",
        "description": "var",
        "isExtraImport": true,
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "ImgurClient",
        "importPath": "imgurpython",
        "description": "imgurpython",
        "isExtraImport": true,
        "detail": "imgurpython",
        "documentation": {}
    },
    {
        "label": "simple_image_download",
        "importPath": "simple_image_download",
        "description": "simple_image_download",
        "isExtraImport": true,
        "detail": "simple_image_download",
        "documentation": {}
    },
    {
        "label": "restart_program",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def restart_program(): return execl(executable, executable, * argv)\nname = \" \"\nstarttime = t\nfile = open(chatlog_file, \"w\")\nfile.close()\ndef reconnect():\n    while connection:\n        websocket.enableTrace(False)\n        ws = websocket.WebSocket()\n        ws.connect(ws_url, cookie=main_cookie,",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "reconnect",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def reconnect():\n    while connection:\n        websocket.enableTrace(False)\n        ws = websocket.WebSocket()\n        ws.connect(ws_url, cookie=main_cookie,\n                   subprotocols=subprots, origin=origin)\n        if ws.connected:\n            ws.send(json.dumps(connect_json))\n            connection = False\n        if not ws.connected:",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "fix_name",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def fix_name(name):\n    for chars in forbiden_chars:\n        return name.replace(chars, \"\")\ndef send_message(content):\n    \"\"\"Function for sending messages\n    with the argument of content of text\"\"\"\n    if response_kill == False:\n        message = {\n            \"command\": \"message\",\n            \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":null}\",",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "send_message",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def send_message(content):\n    \"\"\"Function for sending messages\n    with the argument of content of text\"\"\"\n    if response_kill == False:\n        message = {\n            \"command\": \"message\",\n            \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":null}\",\n            \"data\": \"{\\\"message\\\":\\\"\" + content + \"\\\",\\\"id\\\":null,\\\"action\\\":\\\"speak\\\"}\"}\n        ws.send(json.dumps(message))\ndef greet_text(count, name):",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "greet_text",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def greet_text(count, name):\n    \"\"\"Control which message is to be\n    send with context to the greet control\"\"\"\n    if count == 1:\n        return Greet_1 % name\n    elif count == 2:\n        return Greet_2 % name\n    elif count == 3:\n        return Greet_general % name\ndef send_greet(name):",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "send_greet",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def send_greet(name):\n    \"\"\"Checks which greet is to be sent \n    with reference to the saved greet_timeout\n    stamps in the dictionary\"\"\"\n    if name in greet_timeout.keys():\n        if greet_timeout[name] == \"1\":\n            send_message(greet_text(1, name))\n            greet_timeout[name] = \"2\"\n        elif greet_timeout[name] == \"2\":\n            send_message(greet_text(2, name))",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "list_removal",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def list_removal(id):\n    if id in timeout_control.keys():\n        del timeout_control[id]\n    if id in list_main_dict.keys():\n        del list_main_dict[id]\n    if id in idle_main_dict.keys():\n        del idle_main_dict[id]\ndef greet(action, result, greet):\n    \"\"\"Function to do greetings and handling of \n    main, idle and stats lists\"\"\"",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "greet",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def greet(action, result, greet):\n    \"\"\"Function to do greetings and handling of \n    main, idle and stats lists\"\"\"\n    if (action in b.keys()) and (\"user\" in b.keys()):\n        user = b[\"user\"]\n        if \"display_name\" in user.keys():\n            name, id = fix_name(user[\"display_name\"]), user[\"id\"]\n            if result == \"add\":\n                list_main.add(name)\n                stats_list[id] = list_main_dict[id] = name",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "get_joke",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def get_joke():\n    \"\"\"Fetches jokes from API mentioned\n    and returns it as value of var joke\"\"\"\n    r = requests.get(\"https://icanhazdadjoke.com/slack\")\n    joke = json.loads(r.text)[\"attachments\"][0][\"text\"]\n    send_message(joke)\ndef get_quote():\n    \"\"\"Fetches quotes from the API mentioned \n    and returns it as value of var response3\"\"\"\n    r = requests.get('https://api.quotable.io/random')",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "get_quote",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def get_quote():\n    \"\"\"Fetches quotes from the API mentioned \n    and returns it as value of var response3\"\"\"\n    r = requests.get('https://api.quotable.io/random')\n    content = str(r.json()['content'])\n    author = \"~ by \" + str(r.json()['author'])\n    send_message(content)\n    time.sleep(0.2)\n    send_message(author)\ndef threaded_adding(id):",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "threaded_adding",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def threaded_adding(id):\n    global whos_here_r, whos_here_res\n    r = requests.get(profile_url % id, cookies=cookies)\n    r = json.loads(r.text)\n    whos_here_r.append(r[\"user\"][\"display_name\"])\n    print(whos_here_r)\ndef reply_whos_here():\n    global whos_here_r\n    for i in list_main_dict.keys():\n        threads.append(Thread(target=threaded_adding, args=(i,)))",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "reply_whos_here",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def reply_whos_here():\n    global whos_here_r\n    for i in list_main_dict.keys():\n        threads.append(Thread(target=threaded_adding, args=(i,)))\n    for t in threads:\n        t.start()\n    for t in threads:\n        t.join()\n    threads.clear()\n    idle_len = len(idle_main_dict.keys())",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "replying_whos_idle",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def replying_whos_idle():\n    for i in idle_main_dict.keys():\n        threads.append(Thread(target=threaded_adding, args=(i,)))\n    for t in threads:\n        t.start()\n    for t in threads:\n        t.join()\n    threads.clear()\n    if len(idle_main_dict.keys()) == 0:\n        response = whos_lurking_none",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "matching",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def matching(dictname, message):\n    global whos_here_r, whos_here_res\n    keys = list(dictname.keys())\n    for i in range(0, len(keys)):\n        re_m = keys[i]\n        result = re_m.match(message)\n        if bool(result) == True:\n            if dictname == whos_here_res and re_m == whos_here:\n                reply_whos_here()\n            elif dictname == whos_here_res and re_m == whos_idle:",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "fix_message",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def fix_message(messages):\n    \"\"\"Fixes syntactical problems with incomming \n    messages and removes any unwanted chars\"\"\"\n    chars = ('\"[]‘')\n    for c in chars:\n        messages = messages.replace(c, \"\")\n    return (messages.replace(\"'\", '').replace(\"\\n\", \"\").strip())\ndef idle_function():\n    \"\"\"Function for moving people \n    between idle and main list with reference",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "idle_function",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def idle_function():\n    \"\"\"Function for moving people \n    between idle and main list with reference\n    to time stamps in timeout_control\"\"\"\n    idle_check_list = list(timeout_control.values())\n    for i in range(0, len(idle_check_list)):\n        x = idle_check_list[i]\n        if (t_start - x) >= 240:\n            val = list(timeout_control.keys())[i]\n            if val in list_main_dict:",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "remove_blue",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def remove_blue():\n    \"\"\"Removes blue from all lists \n    to avoid confusion with people\"\"\"\n    if \"Blue\" in list_main_dict:\n        del list_main_dict[\"21550262\"]\n    if \"Blue\" in idle_main_dict:\n        del idle_main_dict[\"21550262\"]\n    if \"Blue\" in list(timeout_control.keys()):\n        del timeout_control[\"21550262\"]\ndef update_git(mute_list):",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "update_git",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def update_git(mute_list):\n    new_mute = str(mute_list)\n    chars = \"[]'\\n\"\n    for c in chars:\n        new_mute.replace(c, \"\")\n    muted_contents = repo.get_contents(\"muted.txt\")\n    repo.update_file(muted_contents.path, \"mute update\", str(\n        new_mute), muted_contents.sha, branch=\"main\")\ndef mute_func(result, index):\n    id = result.group(1)",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "mute_func",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def mute_func(result, index):\n    id = result.group(1)\n    if index == 12:\n        if id in mute_list:\n            responses = already_ignoring\n        else:\n            mute_list.append(id)\n            update_git(mute_list)\n            response = start_ignoring % id\n    elif index == 13:",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "downvote",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def downvote(user_id, remem, id): requests.get(karma_url %\n                                               id, cookies={'remember_token': remem, 'user_id': user_id})\ndef ban_log(banned_id, admin_id):\n    r = requests.get(profile_url % id, cookies=cookies)\n    admin_name = json.loads(r.text)[\"user\"][\"display_name\"]\n    banned_logs = repo.get_contents(\"logs.txt\")\n    log = admin_name + \"(\" + str(admin_id) + \\\n        \")\"  \" banned \" + str(banned_id) + \"\\n\"\n    repo.update_file(banned_logs.path, \"ban-log\",\n                     banned_logs.decoded_content.decode() + log, banned_logs.sha, branch=\"main\")",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "ban_log",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def ban_log(banned_id, admin_id):\n    r = requests.get(profile_url % id, cookies=cookies)\n    admin_name = json.loads(r.text)[\"user\"][\"display_name\"]\n    banned_logs = repo.get_contents(\"logs.txt\")\n    log = admin_name + \"(\" + str(admin_id) + \\\n        \")\"  \" banned \" + str(banned_id) + \"\\n\"\n    repo.update_file(banned_logs.path, \"ban-log\",\n                     banned_logs.decoded_content.decode() + log, banned_logs.sha, branch=\"main\")\ndef thread(id):\n    banned.add(id)",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "thread",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def thread(id):\n    banned.add(id)\n    for c in cookiejar:\n        c = c.split(\",\")\n        Thread(target=downvote, args=(c[1], c[0], id,)).start()\ndef stalker(id, time_now):\n    filename = str(id) + \".txt\"\n    all_files = []\n    contents = repo.get_contents(\"\")\n    while contents:",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "stalker",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def stalker(id, time_now):\n    filename = str(id) + \".txt\"\n    all_files = []\n    contents = repo.get_contents(\"\")\n    while contents:\n        file_content = contents.pop(0)\n        if file_content.type == \"dir\":\n            contents.extend(repo.get_contents(file_content.path))\n        else:\n            all_files.append(str(file_content).replace(",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "clear_lists",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def clear_lists():\n    send_message(clear_list)\n    timeout_control.clear()\n    list_main_dict.clear()\n    idle_main_dict.clear()\ndef respond_uptime():\n    sr = str(datetime.now() - starttime).split(\":\")\n    if sr[0] == \"0\":\n        if str(int(sr[1])+0) == \"0\":\n            send_message(just_joined)",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "respond_uptime",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def respond_uptime():\n    sr = str(datetime.now() - starttime).split(\":\")\n    if sr[0] == \"0\":\n        if str(int(sr[1])+0) == \"0\":\n            send_message(just_joined)\n        elif (int(sr[1])+0) == 1:\n            send_message(here_for_one_min)\n        else:\n            send_message(here_for_x_mins % int(sr[1])+0)\n    else:",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "send_stats",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def send_stats():\n    sr, r = str(datetime.now(\n    ) - starttime).split(\":\"), strftime(\"%a, %d %b %Y %I:%M:%S %p %Z\", gmtime())\n    response = stats_response % (len(stats), len(\n        stats_list.keys()), sr[0], sr[1], str(r))\n    send_message(response)\ndef start_stalking(id):\n    if id.isdigit():\n        if id not in stalking_log.keys():\n            t = Thread(target=stalker, args=(id, timer(),))",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "start_stalking",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def start_stalking(id):\n    if id.isdigit():\n        if id not in stalking_log.keys():\n            t = Thread(target=stalker, args=(id, timer(),))\n            stalking_log[id] = [t, True]\n            t.start()\n            send_message(waking_stalking)\n        else:\n            send_message(already_stalking % id)\n    else:",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "stop_stalking",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def stop_stalking(id):\n    if id in stalking_log.keys():\n        stalking_log[id][1] = False\n        del stalking_log[id]\n        send_message(stopping_stalking % id)\n    else:\n        send_message(already_not_stalking % id)\ndef admin_func_init(i, id, isadmin, result,admin_id):\n    global greet_status, running, name, starttime, aichatstate\n    if i == 0:",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "admin_func_init",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def admin_func_init(i, id, isadmin, result,admin_id):\n    global greet_status, running, name, starttime, aichatstate\n    if i == 0:\n        greet_status = True\n        send_message(done)\n    elif i == 1:\n        if greet_status == True:\n            greet_status = False\n            send_message(done)\n        elif greet_status == False:",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "admin_func",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def admin_func(message, id, isadmin):\n    \"\"\"Function to handle all the admin \n    and mod commands\"\"\"\n    for i in range(0, len(admin_commands)):\n        result = admin_commands[i].match(message)\n        global greet_status, running, name, starttime, aichatstate\n        if bool(result) == True:\n            admin_func_init(i, id, isadmin, result)\n            break\ndef coin_handling(result):",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "coin_handling",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def coin_handling(result):\n    \"\"\"Just as the name suggests,\n    handles coins and responses to them\"\"\"\n    num = result.group(1)\n    if num.isdigit():\n        coin_add = int(num)\n        coins_contents = repo.get_contents(\"coins.txt\")\n        if (coin_add < 101) and (coin_add > -1):\n            coin_new = coin_add + int(coins_contents.decoded_content.decode())\n            repo.update_file(coins_contents.path, \"coins update\", str(",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "send_feelings",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def send_feelings(index, id, result):\n    \"\"\"Handles sending and recieving feelings \n    like hugs and love and what not I will be adding\n    because yay feelings\"\"\"\n    response = \"\"\n    name = result.group(1)\n    if index == 1:\n        response = sending_love % name\n    elif index == 2:\n        response = sending_pats % name",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "chat",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def chat(user_input):\n    with cleverbotfree.sync_playwright() as p_w:\n        c_b = cleverbotfree.Cleverbot(p_w)\n        bot = c_b.single_exchange(user_input)\n        send_message(bot)\n        c_b.close()\ndef dis_en_greets(id):\n    global greet_status\n    if id == \"16008266\" and greet_status == True:\n        send_message(disabling_greet)",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "dis_en_greets",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def dis_en_greets(id):\n    global greet_status\n    if id == \"16008266\" and greet_status == True:\n        send_message(disabling_greet)\n        greet_status = False\n    elif id == \"20909261\" and greet_status == False:\n        send_message(re_enabling_greet)\n        greet_status = True\ndef check_greeters(message, id):\n    global greet_status",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "check_greeters",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def check_greeters(message, id):\n    global greet_status\n    if id in fallback_check:\n        for reg_m in greet_check:\n            result = reg_m.search(message)\n            if message in custom_greet_id.values() or result or message == blue_greet:\n                dis_en_greets(id)\n        for reg_m in custom_greet_id.values():\n            reg = re.compile(r\"\" + reg_m + r\"\", re.I)\n            pattern = reg_m + \"\\s*\"",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "coins_feelings",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def coins_feelings(message, id):\n    for reg_m in coinsandfeelings:\n        result = reg_m.match(message)\n        if bool(result) == True:\n            index = coinsandfeelings.index(reg_m)\n            if index == 0:\n                coin_handling(result)\n            else:\n                send_feelings(index, id, result)\n            break",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "log_chats",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def log_chats(message, user_id):\n    name = fix_name(user[\"display_name\"])\n    log = fix_message(message_log_text % (name, user_id, message)) + \"\\n\"\n    file = open(\"chatlogs.txt\", \"a\")\n    file.write(log)\n    file.close()\ndef singing():\n    send_message(\"*Sings ~*\")\n    sleep(2)\n    send_message(\"la la lalla ~*\")",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "singing",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def singing():\n    send_message(\"*Sings ~*\")\n    sleep(2)\n    send_message(\"la la lalla ~*\")\ndef push_logs():\n    file = open(chatlog_file, \"r\")\n    contents1 = file.readlines()\n    file.close()\n    file = open(chatlog_file, \"w\")\n    file.close()",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "push_logs",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def push_logs():\n    file = open(chatlog_file, \"r\")\n    contents1 = file.readlines()\n    file.close()\n    file = open(chatlog_file, \"w\")\n    file.close()\n    date = datetime.today().strftime('%d-%m-%Y')\n    filename = \"log (%s).txt\" % date\n    all_files = []\n    contents = repo.get_contents(\"\")",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "check_singing",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def check_singing():\n    len_main = len(list_main_dict.keys())\n    len_idle = len(idle_main_dict.keys())\n    if (len_main + len_idle) <= 4 and random.randint(0, 1000000) % 9387 == 0:\n        Thread(target=singing).start()\ndef clocking():\n    global reset_clock, greet_timeout, start\n    if reset_clock == 500:\n        greet_timeout, reset_clock = {}, 0\n    if timer() - start >= 20 and os.stat(\"chatlogs.txt\").st_size != 0:",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "clocking",
        "kind": 2,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "def clocking():\n    global reset_clock, greet_timeout, start\n    if reset_clock == 500:\n        greet_timeout, reset_clock = {}, 0\n    if timer() - start >= 20 and os.stat(\"chatlogs.txt\").st_size != 0:\n        push_logs()\n        start = timer()\n\"\"\"Connect blue to whatever\"\"\"\nwebsocket.enableTrace(False)\nws = websocket.WebSocket()",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "name",
        "kind": 5,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "name = \" \"\nstarttime = t\nfile = open(chatlog_file, \"w\")\nfile.close()\ndef reconnect():\n    while connection:\n        websocket.enableTrace(False)\n        ws = websocket.WebSocket()\n        ws.connect(ws_url, cookie=main_cookie,\n                   subprotocols=subprots, origin=origin)",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "starttime",
        "kind": 5,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "starttime = t\nfile = open(chatlog_file, \"w\")\nfile.close()\ndef reconnect():\n    while connection:\n        websocket.enableTrace(False)\n        ws = websocket.WebSocket()\n        ws.connect(ws_url, cookie=main_cookie,\n                   subprotocols=subprots, origin=origin)\n        if ws.connected:",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "file",
        "kind": 5,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "file = open(chatlog_file, \"w\")\nfile.close()\ndef reconnect():\n    while connection:\n        websocket.enableTrace(False)\n        ws = websocket.WebSocket()\n        ws.connect(ws_url, cookie=main_cookie,\n                   subprotocols=subprots, origin=origin)\n        if ws.connected:\n            ws.send(json.dumps(connect_json))",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "ws",
        "kind": 5,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "ws = websocket.WebSocket()\nws.connect(ws_url, cookie=main_cookie, subprotocols=subprots, origin=origin)\nws.send(json.dumps(connect_json))\nstart = timer()\nwhile running == True:\n    try:\n        remove_blue()\n        idle_function()\n        t_start = perf_counter()\n        reset_clock = reset_clock + 1",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "start",
        "kind": 5,
        "importPath": "Old files.Blue",
        "description": "Old files.Blue",
        "peekOfCode": "start = timer()\nwhile running == True:\n    try:\n        remove_blue()\n        idle_function()\n        t_start = perf_counter()\n        reset_clock = reset_clock + 1\n        clocking()\n        check_singing()\n        server_reply = (ws.recv())",
        "detail": "Old files.Blue",
        "documentation": {}
    },
    {
        "label": "main_cookie",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "main_cookie = \"user_id=MjE1NTAyNjI%3D--53715d8c0d5a37453895fbf751e8bc4f9056f2fe\"\n#Getting info from github shiz \nuser = \"Aqua-123\"\npassw = \"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\"\ng = Github(passw)\nrepo = g.get_user().get_repo(\"blue-clone\")\ncoins_contents = repo.get_contents(\"coins.txt\")\nmuted_contents = repo.get_contents(\"muted.txt\")\nmute_list = muted_contents.decoded_content.decode().strip().split(\",\")\n# main connecting request json",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "user",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "user = \"Aqua-123\"\npassw = \"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\"\ng = Github(passw)\nrepo = g.get_user().get_repo(\"blue-clone\")\ncoins_contents = repo.get_contents(\"coins.txt\")\nmuted_contents = repo.get_contents(\"muted.txt\")\nmute_list = muted_contents.decoded_content.decode().strip().split(\",\")\n# main connecting request json\nconnect_json = {\n  \"command\": \"subscribe\",  # Main connecting request json",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "passw",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "passw = \"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\"\ng = Github(passw)\nrepo = g.get_user().get_repo(\"blue-clone\")\ncoins_contents = repo.get_contents(\"coins.txt\")\nmuted_contents = repo.get_contents(\"muted.txt\")\nmute_list = muted_contents.decoded_content.decode().strip().split(\",\")\n# main connecting request json\nconnect_json = {\n  \"command\": \"subscribe\",  # Main connecting request json\n  \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":null}\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "g",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "g = Github(passw)\nrepo = g.get_user().get_repo(\"blue-clone\")\ncoins_contents = repo.get_contents(\"coins.txt\")\nmuted_contents = repo.get_contents(\"muted.txt\")\nmute_list = muted_contents.decoded_content.decode().strip().split(\",\")\n# main connecting request json\nconnect_json = {\n  \"command\": \"subscribe\",  # Main connecting request json\n  \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":null}\"\n}",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "repo",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "repo = g.get_user().get_repo(\"blue-clone\")\ncoins_contents = repo.get_contents(\"coins.txt\")\nmuted_contents = repo.get_contents(\"muted.txt\")\nmute_list = muted_contents.decoded_content.decode().strip().split(\",\")\n# main connecting request json\nconnect_json = {\n  \"command\": \"subscribe\",  # Main connecting request json\n  \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":null}\"\n}\nthreads = [] # List of threads ",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "coins_contents",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "coins_contents = repo.get_contents(\"coins.txt\")\nmuted_contents = repo.get_contents(\"muted.txt\")\nmute_list = muted_contents.decoded_content.decode().strip().split(\",\")\n# main connecting request json\nconnect_json = {\n  \"command\": \"subscribe\",  # Main connecting request json\n  \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":null}\"\n}\nthreads = [] # List of threads \nrunning = True  # Main while loop control variable",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "muted_contents",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "muted_contents = repo.get_contents(\"muted.txt\")\nmute_list = muted_contents.decoded_content.decode().strip().split(\",\")\n# main connecting request json\nconnect_json = {\n  \"command\": \"subscribe\",  # Main connecting request json\n  \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":null}\"\n}\nthreads = [] # List of threads \nrunning = True  # Main while loop control variable\nresponse_kill = False  # Handles response enabling and disabling",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "mute_list",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "mute_list = muted_contents.decoded_content.decode().strip().split(\",\")\n# main connecting request json\nconnect_json = {\n  \"command\": \"subscribe\",  # Main connecting request json\n  \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":null}\"\n}\nthreads = [] # List of threads \nrunning = True  # Main while loop control variable\nresponse_kill = False  # Handles response enabling and disabling\ngreet_status = True  # Handles enabling and disabling greetings",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "connect_json",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "connect_json = {\n  \"command\": \"subscribe\",  # Main connecting request json\n  \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":null}\"\n}\nthreads = [] # List of threads \nrunning = True  # Main while loop control variable\nresponse_kill = False  # Handles response enabling and disabling\ngreet_status = True  # Handles enabling and disabling greetings\nconnection = True  # Control checking of connection timeout\nadmin = [",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "threads",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "threads = [] # List of threads \nrunning = True  # Main while loop control variable\nresponse_kill = False  # Handles response enabling and disabling\ngreet_status = True  # Handles enabling and disabling greetings\nconnection = True  # Control checking of connection timeout\nadmin = [\n  \"18695559\",\n  \"16986137\",\n  \"16521287\",  # Admin ids\n  \"22466125\",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "running",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "running = True  # Main while loop control variable\nresponse_kill = False  # Handles response enabling and disabling\ngreet_status = True  # Handles enabling and disabling greetings\nconnection = True  # Control checking of connection timeout\nadmin = [\n  \"18695559\",\n  \"16986137\",\n  \"16521287\",  # Admin ids\n  \"22466125\",\n  \"22716229\",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "response_kill",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "response_kill = False  # Handles response enabling and disabling\ngreet_status = True  # Handles enabling and disabling greetings\nconnection = True  # Control checking of connection timeout\nadmin = [\n  \"18695559\",\n  \"16986137\",\n  \"16521287\",  # Admin ids\n  \"22466125\",\n  \"22716229\",\n  \"22783061\",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "greet_status",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "greet_status = True  # Handles enabling and disabling greetings\nconnection = True  # Control checking of connection timeout\nadmin = [\n  \"18695559\",\n  \"16986137\",\n  \"16521287\",  # Admin ids\n  \"22466125\",\n  \"22716229\",\n  \"22783061\",\n  \"11427049\",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "connection",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "connection = True  # Control checking of connection timeout\nadmin = [\n  \"18695559\",\n  \"16986137\",\n  \"16521287\",  # Admin ids\n  \"22466125\",\n  \"22716229\",\n  \"22783061\",\n  \"11427049\",\n  \"21550262\",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "admin",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "admin = [\n  \"18695559\",\n  \"16986137\",\n  \"16521287\",  # Admin ids\n  \"22466125\",\n  \"22716229\",\n  \"22783061\",\n  \"11427049\",\n  \"21550262\",\n  \"14267520\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "mod",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "mod = [\n  \"14496406\",\n  \"21847694\",\n  \"20327398\",  # Mod ids\n  \"20909209\",\n  \"21964175\"\n]\nforbiden_chars = [\n  \"\\u202e\",\n  \"'\",     #Forbidden chars to be removed ",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "forbiden_chars",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "forbiden_chars = [\n  \"\\u202e\",\n  \"'\",     #Forbidden chars to be removed \n  '\"',\n  \"’\",\n  \"'\"\n]\nbracs = [\n  \"{\",    #Curly brackets to be removed\n  \"}\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "bracs",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "bracs = [\n  \"{\",    #Curly brackets to be removed\n  \"}\"\n]\nfallback_check = [\n\t\"20909261\",\n\t\"16008266\"\n]\ngreet_exempt = [\n\t\"20909261\",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "fallback_check",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "fallback_check = [\n\t\"20909261\",\n\t\"16008266\"\n]\ngreet_exempt = [\n\t\"20909261\",\n\t\"20909232\"\n]\nlist_main = set()  # Main list\nlist_main_dict = {} # Main list dictionary ",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "greet_exempt",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "greet_exempt = [\n\t\"20909261\",\n\t\"20909232\"\n]\nlist_main = set()  # Main list\nlist_main_dict = {} # Main list dictionary \nidle_main = set()  # Idle list\nidle_main_dict = {} # Idle list dictionary\nstats_list = {}  # Unique number of people joined stats\nid_list = set() #ID list ",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "list_main",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "list_main = set()  # Main list\nlist_main_dict = {} # Main list dictionary \nidle_main = set()  # Idle list\nidle_main_dict = {} # Idle list dictionary\nstats_list = {}  # Unique number of people joined stats\nid_list = set() #ID list \nwhos_here_r = [] #whos here blank list\nstats = []  # Total people joined stats\ngreet_timeout = {}  # Control number of greets and timeout\ntimeout_control = {}  # Control dict for list switch timeout",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "list_main_dict",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "list_main_dict = {} # Main list dictionary \nidle_main = set()  # Idle list\nidle_main_dict = {} # Idle list dictionary\nstats_list = {}  # Unique number of people joined stats\nid_list = set() #ID list \nwhos_here_r = [] #whos here blank list\nstats = []  # Total people joined stats\ngreet_timeout = {}  # Control number of greets and timeout\ntimeout_control = {}  # Control dict for list switch timeout\nbanned = set() #banned list",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "idle_main",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "idle_main = set()  # Idle list\nidle_main_dict = {} # Idle list dictionary\nstats_list = {}  # Unique number of people joined stats\nid_list = set() #ID list \nwhos_here_r = [] #whos here blank list\nstats = []  # Total people joined stats\ngreet_timeout = {}  # Control number of greets and timeout\ntimeout_control = {}  # Control dict for list switch timeout\nbanned = set() #banned list\nstalking_log = {} #the name suggests",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "idle_main_dict",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "idle_main_dict = {} # Idle list dictionary\nstats_list = {}  # Unique number of people joined stats\nid_list = set() #ID list \nwhos_here_r = [] #whos here blank list\nstats = []  # Total people joined stats\ngreet_timeout = {}  # Control number of greets and timeout\ntimeout_control = {}  # Control dict for list switch timeout\nbanned = set() #banned list\nstalking_log = {} #the name suggests\nwhohere_t = 0  # timestamp for whos here",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "stats_list",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "stats_list = {}  # Unique number of people joined stats\nid_list = set() #ID list \nwhos_here_r = [] #whos here blank list\nstats = []  # Total people joined stats\ngreet_timeout = {}  # Control number of greets and timeout\ntimeout_control = {}  # Control dict for list switch timeout\nbanned = set() #banned list\nstalking_log = {} #the name suggests\nwhohere_t = 0  # timestamp for whos here\nreset_clock = 0  # reset greet timeout",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "id_list",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "id_list = set() #ID list \nwhos_here_r = [] #whos here blank list\nstats = []  # Total people joined stats\ngreet_timeout = {}  # Control number of greets and timeout\ntimeout_control = {}  # Control dict for list switch timeout\nbanned = set() #banned list\nstalking_log = {} #the name suggests\nwhohere_t = 0  # timestamp for whos here\nreset_clock = 0  # reset greet timeout\nstarttime = time.time()  # Script start timestamp",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "whos_here_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "whos_here_r = [] #whos here blank list\nstats = []  # Total people joined stats\ngreet_timeout = {}  # Control number of greets and timeout\ntimeout_control = {}  # Control dict for list switch timeout\nbanned = set() #banned list\nstalking_log = {} #the name suggests\nwhohere_t = 0  # timestamp for whos here\nreset_clock = 0  # reset greet timeout\nstarttime = time.time()  # Script start timestamp\nt = datetime.now()  # Current date time",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "stats",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "stats = []  # Total people joined stats\ngreet_timeout = {}  # Control number of greets and timeout\ntimeout_control = {}  # Control dict for list switch timeout\nbanned = set() #banned list\nstalking_log = {} #the name suggests\nwhohere_t = 0  # timestamp for whos here\nreset_clock = 0  # reset greet timeout\nstarttime = time.time()  # Script start timestamp\nt = datetime.now()  # Current date time\ntoday = date.today()",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "greet_timeout",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "greet_timeout = {}  # Control number of greets and timeout\ntimeout_control = {}  # Control dict for list switch timeout\nbanned = set() #banned list\nstalking_log = {} #the name suggests\nwhohere_t = 0  # timestamp for whos here\nreset_clock = 0  # reset greet timeout\nstarttime = time.time()  # Script start timestamp\nt = datetime.now()  # Current date time\ntoday = date.today()\ngreet_status = True",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "timeout_control",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "timeout_control = {}  # Control dict for list switch timeout\nbanned = set() #banned list\nstalking_log = {} #the name suggests\nwhohere_t = 0  # timestamp for whos here\nreset_clock = 0  # reset greet timeout\nstarttime = time.time()  # Script start timestamp\nt = datetime.now()  # Current date time\ntoday = date.today()\ngreet_status = True\naichatstate = False",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "banned",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "banned = set() #banned list\nstalking_log = {} #the name suggests\nwhohere_t = 0  # timestamp for whos here\nreset_clock = 0  # reset greet timeout\nstarttime = time.time()  # Script start timestamp\nt = datetime.now()  # Current date time\ntoday = date.today()\ngreet_status = True\naichatstate = False\ncookies = {\"_prototype_app_session\": \"OHVTZXhlYmpOUStPbU1KNTFaVUVlM1c0cktnYnN1MWN4eFN1akxwMElZWjRiZVNSSGVOUWZwajJ1V1NFMytrbm9tL3NFTE9rQk9HZnJLWUJsNTlXM0JOWG9hZE9yZjNmamkyM29Pd0JqU01YZVlpWkd2WlhBR3hVZGJHbGRtRG5HemtvL29xZm9kVExlODJSKzNiV1YxcHV2TUY1c0RPQXRUbkluelhJbmdPekZXcWUzZzNldnFPK1ZjRkhMN0xLa3A2WDkxemtvaTlDemZmTkJvT0RlUzJhczBkYnJBR3dVbEQyTWtIN3l4TT0tLUxQeW9UcHZtdUJWbEVjQXMwRmYxUnc9PQ%3D%3D--83ddb608f55747654feca4873dff6895e55b263e\"}",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "stalking_log",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "stalking_log = {} #the name suggests\nwhohere_t = 0  # timestamp for whos here\nreset_clock = 0  # reset greet timeout\nstarttime = time.time()  # Script start timestamp\nt = datetime.now()  # Current date time\ntoday = date.today()\ngreet_status = True\naichatstate = False\ncookies = {\"_prototype_app_session\": \"OHVTZXhlYmpOUStPbU1KNTFaVUVlM1c0cktnYnN1MWN4eFN1akxwMElZWjRiZVNSSGVOUWZwajJ1V1NFMytrbm9tL3NFTE9rQk9HZnJLWUJsNTlXM0JOWG9hZE9yZjNmamkyM29Pd0JqU01YZVlpWkd2WlhBR3hVZGJHbGRtRG5HemtvL29xZm9kVExlODJSKzNiV1YxcHV2TUY1c0RPQXRUbkluelhJbmdPekZXcWUzZzNldnFPK1ZjRkhMN0xLa3A2WDkxemtvaTlDemZmTkJvT0RlUzJhczBkYnJBR3dVbEQyTWtIN3l4TT0tLUxQeW9UcHZtdUJWbEVjQXMwRmYxUnc9PQ%3D%3D--83ddb608f55747654feca4873dff6895e55b263e\"}\n# Custom greets",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "whohere_t",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "whohere_t = 0  # timestamp for whos here\nreset_clock = 0  # reset greet timeout\nstarttime = time.time()  # Script start timestamp\nt = datetime.now()  # Current date time\ntoday = date.today()\ngreet_status = True\naichatstate = False\ncookies = {\"_prototype_app_session\": \"OHVTZXhlYmpOUStPbU1KNTFaVUVlM1c0cktnYnN1MWN4eFN1akxwMElZWjRiZVNSSGVOUWZwajJ1V1NFMytrbm9tL3NFTE9rQk9HZnJLWUJsNTlXM0JOWG9hZE9yZjNmamkyM29Pd0JqU01YZVlpWkd2WlhBR3hVZGJHbGRtRG5HemtvL29xZm9kVExlODJSKzNiV1YxcHV2TUY1c0RPQXRUbkluelhJbmdPekZXcWUzZzNldnFPK1ZjRkhMN0xLa3A2WDkxemtvaTlDemZmTkJvT0RlUzJhczBkYnJBR3dVbEQyTWtIN3l4TT0tLUxQeW9UcHZtdUJWbEVjQXMwRmYxUnc9PQ%3D%3D--83ddb608f55747654feca4873dff6895e55b263e\"}\n# Custom greets\ncustom_greet_id = {",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "reset_clock",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "reset_clock = 0  # reset greet timeout\nstarttime = time.time()  # Script start timestamp\nt = datetime.now()  # Current date time\ntoday = date.today()\ngreet_status = True\naichatstate = False\ncookies = {\"_prototype_app_session\": \"OHVTZXhlYmpOUStPbU1KNTFaVUVlM1c0cktnYnN1MWN4eFN1akxwMElZWjRiZVNSSGVOUWZwajJ1V1NFMytrbm9tL3NFTE9rQk9HZnJLWUJsNTlXM0JOWG9hZE9yZjNmamkyM29Pd0JqU01YZVlpWkd2WlhBR3hVZGJHbGRtRG5HemtvL29xZm9kVExlODJSKzNiV1YxcHV2TUY1c0RPQXRUbkluelhJbmdPekZXcWUzZzNldnFPK1ZjRkhMN0xLa3A2WDkxemtvaTlDemZmTkJvT0RlUzJhczBkYnJBR3dVbEQyTWtIN3l4TT0tLUxQeW9UcHZtdUJWbEVjQXMwRmYxUnc9PQ%3D%3D--83ddb608f55747654feca4873dff6895e55b263e\"}\n# Custom greets\ncustom_greet_id = {\n  \"16986137\": \"The river of life bubbles when Aqua comes near~ \",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "starttime",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "starttime = time.time()  # Script start timestamp\nt = datetime.now()  # Current date time\ntoday = date.today()\ngreet_status = True\naichatstate = False\ncookies = {\"_prototype_app_session\": \"OHVTZXhlYmpOUStPbU1KNTFaVUVlM1c0cktnYnN1MWN4eFN1akxwMElZWjRiZVNSSGVOUWZwajJ1V1NFMytrbm9tL3NFTE9rQk9HZnJLWUJsNTlXM0JOWG9hZE9yZjNmamkyM29Pd0JqU01YZVlpWkd2WlhBR3hVZGJHbGRtRG5HemtvL29xZm9kVExlODJSKzNiV1YxcHV2TUY1c0RPQXRUbkluelhJbmdPekZXcWUzZzNldnFPK1ZjRkhMN0xLa3A2WDkxemtvaTlDemZmTkJvT0RlUzJhczBkYnJBR3dVbEQyTWtIN3l4TT0tLUxQeW9UcHZtdUJWbEVjQXMwRmYxUnc9PQ%3D%3D--83ddb608f55747654feca4873dff6895e55b263e\"}\n# Custom greets\ncustom_greet_id = {\n  \"16986137\": \"The river of life bubbles when Aqua comes near~ \",\n  \"21550262\": \"Hi, its Blue ^-^\",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "t",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "t = datetime.now()  # Current date time\ntoday = date.today()\ngreet_status = True\naichatstate = False\ncookies = {\"_prototype_app_session\": \"OHVTZXhlYmpOUStPbU1KNTFaVUVlM1c0cktnYnN1MWN4eFN1akxwMElZWjRiZVNSSGVOUWZwajJ1V1NFMytrbm9tL3NFTE9rQk9HZnJLWUJsNTlXM0JOWG9hZE9yZjNmamkyM29Pd0JqU01YZVlpWkd2WlhBR3hVZGJHbGRtRG5HemtvL29xZm9kVExlODJSKzNiV1YxcHV2TUY1c0RPQXRUbkluelhJbmdPekZXcWUzZzNldnFPK1ZjRkhMN0xLa3A2WDkxemtvaTlDemZmTkJvT0RlUzJhczBkYnJBR3dVbEQyTWtIN3l4TT0tLUxQeW9UcHZtdUJWbEVjQXMwRmYxUnc9PQ%3D%3D--83ddb608f55747654feca4873dff6895e55b263e\"}\n# Custom greets\ncustom_greet_id = {\n  \"16986137\": \"The river of life bubbles when Aqua comes near~ \",\n  \"21550262\": \"Hi, its Blue ^-^\",\n  \"21388579\": \"Sir This recruit tactically acquired the fig bars sir~\",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "today",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "today = date.today()\ngreet_status = True\naichatstate = False\ncookies = {\"_prototype_app_session\": \"OHVTZXhlYmpOUStPbU1KNTFaVUVlM1c0cktnYnN1MWN4eFN1akxwMElZWjRiZVNSSGVOUWZwajJ1V1NFMytrbm9tL3NFTE9rQk9HZnJLWUJsNTlXM0JOWG9hZE9yZjNmamkyM29Pd0JqU01YZVlpWkd2WlhBR3hVZGJHbGRtRG5HemtvL29xZm9kVExlODJSKzNiV1YxcHV2TUY1c0RPQXRUbkluelhJbmdPekZXcWUzZzNldnFPK1ZjRkhMN0xLa3A2WDkxemtvaTlDemZmTkJvT0RlUzJhczBkYnJBR3dVbEQyTWtIN3l4TT0tLUxQeW9UcHZtdUJWbEVjQXMwRmYxUnc9PQ%3D%3D--83ddb608f55747654feca4873dff6895e55b263e\"}\n# Custom greets\ncustom_greet_id = {\n  \"16986137\": \"The river of life bubbles when Aqua comes near~ \",\n  \"21550262\": \"Hi, its Blue ^-^\",\n  \"21388579\": \"Sir This recruit tactically acquired the fig bars sir~\",\n  \"20835136\": \"Testing, testing, Wan, two, three! \",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "greet_status",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "greet_status = True\naichatstate = False\ncookies = {\"_prototype_app_session\": \"OHVTZXhlYmpOUStPbU1KNTFaVUVlM1c0cktnYnN1MWN4eFN1akxwMElZWjRiZVNSSGVOUWZwajJ1V1NFMytrbm9tL3NFTE9rQk9HZnJLWUJsNTlXM0JOWG9hZE9yZjNmamkyM29Pd0JqU01YZVlpWkd2WlhBR3hVZGJHbGRtRG5HemtvL29xZm9kVExlODJSKzNiV1YxcHV2TUY1c0RPQXRUbkluelhJbmdPekZXcWUzZzNldnFPK1ZjRkhMN0xLa3A2WDkxemtvaTlDemZmTkJvT0RlUzJhczBkYnJBR3dVbEQyTWtIN3l4TT0tLUxQeW9UcHZtdUJWbEVjQXMwRmYxUnc9PQ%3D%3D--83ddb608f55747654feca4873dff6895e55b263e\"}\n# Custom greets\ncustom_greet_id = {\n  \"16986137\": \"The river of life bubbles when Aqua comes near~ \",\n  \"21550262\": \"Hi, its Blue ^-^\",\n  \"21388579\": \"Sir This recruit tactically acquired the fig bars sir~\",\n  \"20835136\": \"Testing, testing, Wan, two, three! \",\n  \"291734\": \"Here comes our favorite magical frog! 🐸 ~~.*~\",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "aichatstate",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "aichatstate = False\ncookies = {\"_prototype_app_session\": \"OHVTZXhlYmpOUStPbU1KNTFaVUVlM1c0cktnYnN1MWN4eFN1akxwMElZWjRiZVNSSGVOUWZwajJ1V1NFMytrbm9tL3NFTE9rQk9HZnJLWUJsNTlXM0JOWG9hZE9yZjNmamkyM29Pd0JqU01YZVlpWkd2WlhBR3hVZGJHbGRtRG5HemtvL29xZm9kVExlODJSKzNiV1YxcHV2TUY1c0RPQXRUbkluelhJbmdPekZXcWUzZzNldnFPK1ZjRkhMN0xLa3A2WDkxemtvaTlDemZmTkJvT0RlUzJhczBkYnJBR3dVbEQyTWtIN3l4TT0tLUxQeW9UcHZtdUJWbEVjQXMwRmYxUnc9PQ%3D%3D--83ddb608f55747654feca4873dff6895e55b263e\"}\n# Custom greets\ncustom_greet_id = {\n  \"16986137\": \"The river of life bubbles when Aqua comes near~ \",\n  \"21550262\": \"Hi, its Blue ^-^\",\n  \"21388579\": \"Sir This recruit tactically acquired the fig bars sir~\",\n  \"20835136\": \"Testing, testing, Wan, two, three! \",\n  \"291734\": \"Here comes our favorite magical frog! 🐸 ~~.*~\",\n  \"14751444\": \"Hamtaro, the karmic wonder, has arrived ·ᴗ·\",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "cookies",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "cookies = {\"_prototype_app_session\": \"OHVTZXhlYmpOUStPbU1KNTFaVUVlM1c0cktnYnN1MWN4eFN1akxwMElZWjRiZVNSSGVOUWZwajJ1V1NFMytrbm9tL3NFTE9rQk9HZnJLWUJsNTlXM0JOWG9hZE9yZjNmamkyM29Pd0JqU01YZVlpWkd2WlhBR3hVZGJHbGRtRG5HemtvL29xZm9kVExlODJSKzNiV1YxcHV2TUY1c0RPQXRUbkluelhJbmdPekZXcWUzZzNldnFPK1ZjRkhMN0xLa3A2WDkxemtvaTlDemZmTkJvT0RlUzJhczBkYnJBR3dVbEQyTWtIN3l4TT0tLUxQeW9UcHZtdUJWbEVjQXMwRmYxUnc9PQ%3D%3D--83ddb608f55747654feca4873dff6895e55b263e\"}\n# Custom greets\ncustom_greet_id = {\n  \"16986137\": \"The river of life bubbles when Aqua comes near~ \",\n  \"21550262\": \"Hi, its Blue ^-^\",\n  \"21388579\": \"Sir This recruit tactically acquired the fig bars sir~\",\n  \"20835136\": \"Testing, testing, Wan, two, three! \",\n  \"291734\": \"Here comes our favorite magical frog! 🐸 ~~.*~\",\n  \"14751444\": \"Hamtaro, the karmic wonder, has arrived ·ᴗ·\",\n  \"18695559\": \"Your friendly neighbourhood Saturn is here! *~~.\",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "custom_greet_id",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "custom_greet_id = {\n  \"16986137\": \"The river of life bubbles when Aqua comes near~ \",\n  \"21550262\": \"Hi, its Blue ^-^\",\n  \"21388579\": \"Sir This recruit tactically acquired the fig bars sir~\",\n  \"20835136\": \"Testing, testing, Wan, two, three! \",\n  \"291734\": \"Here comes our favorite magical frog! 🐸 ~~.*~\",\n  \"14751444\": \"Hamtaro, the karmic wonder, has arrived ·ᴗ·\",\n  \"18695559\": \"Your friendly neighbourhood Saturn is here! *~~.\",\n  \"18274541\": \"A buzzy Bee enters the hive! 🐝 ~~.*~\",\n  \"18491422\": \"Shhhh... The one and only drama queen cat is here *meow* \",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "im_bored_list",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "im_bored_list = [\n  \"How about, dance :D\",\n  \"Hmmm maybe sing a song?\",\n  \"Study... maybe... instead of procrastinating heh\",\n  \"Well.... have you been outside lately? How about go for a walk? (if its not an unreasonable time)\",\n  \"Youtube dot com hehe, best place to cure boredom\",\n  \"How about watching a movie? or binging a tv series? (dont ask for suggestions :> I just stare at binary numbers 24/7)\",\n  \"Sleep\",\n  \"You could go to 1v1 and find someone to talk to? (this is one of the worst advices ive given but yea its a viable option)\",\n  \"Same :)\",",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "hey1",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "hey1 = re.compile(r\"\"\"hi blue(\\\\n)*\\s*$\"\"\", re.I)\nhowdy = re.compile(r\"\"\"howdy Blue\\??\\s*$\"\"\", re.I)\nwhos_here = re.compile(\n  r\"\"\"(blue who'?’?s here\\??)|(blue das crazy\\??|(yzarc sad eubl)|(blue who is all here)|(blue who all are there here\\??)|(blue where the hoes at\\??)(\\\\n)*\\s*$)\"\"\", re.I)\nwhos_here = whos_here\nwhos_idle = re.compile(\n  r\"\"\"(blue who'?’?s idle\\??\\s*)|(blue who is all idle\\s*)|(blue who is all lurking\\s*)|(blue who'?’?s lurking\\??(\\\\n)*\\s*$)\"\"\", re.I)\nwhos_idle = whos_idle\ntldr = re.compile(r\"\"\"(blue (wfaf|tldr)|(where are we))|(what is wfaf)(\\\\n)*\\s*$\"\"\", re.I)\nhigh_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "howdy",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "howdy = re.compile(r\"\"\"howdy Blue\\??\\s*$\"\"\", re.I)\nwhos_here = re.compile(\n  r\"\"\"(blue who'?’?s here\\??)|(blue das crazy\\??|(yzarc sad eubl)|(blue who is all here)|(blue who all are there here\\??)|(blue where the hoes at\\??)(\\\\n)*\\s*$)\"\"\", re.I)\nwhos_here = whos_here\nwhos_idle = re.compile(\n  r\"\"\"(blue who'?’?s idle\\??\\s*)|(blue who is all idle\\s*)|(blue who is all lurking\\s*)|(blue who'?’?s lurking\\??(\\\\n)*\\s*$)\"\"\", re.I)\nwhos_idle = whos_idle\ntldr = re.compile(r\"\"\"(blue (wfaf|tldr)|(where are we))|(what is wfaf)(\\\\n)*\\s*$\"\"\", re.I)\nhigh_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "whos_here",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "whos_here = re.compile(\n  r\"\"\"(blue who'?’?s here\\??)|(blue das crazy\\??|(yzarc sad eubl)|(blue who is all here)|(blue who all are there here\\??)|(blue where the hoes at\\??)(\\\\n)*\\s*$)\"\"\", re.I)\nwhos_here = whos_here\nwhos_idle = re.compile(\n  r\"\"\"(blue who'?’?s idle\\??\\s*)|(blue who is all idle\\s*)|(blue who is all lurking\\s*)|(blue who'?’?s lurking\\??(\\\\n)*\\s*$)\"\"\", re.I)\nwhos_idle = whos_idle\ntldr = re.compile(r\"\"\"(blue (wfaf|tldr)|(where are we))|(what is wfaf)(\\\\n)*\\s*$\"\"\", re.I)\nhigh_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "whos_here",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "whos_here = whos_here\nwhos_idle = re.compile(\n  r\"\"\"(blue who'?’?s idle\\??\\s*)|(blue who is all idle\\s*)|(blue who is all lurking\\s*)|(blue who'?’?s lurking\\??(\\\\n)*\\s*$)\"\"\", re.I)\nwhos_idle = whos_idle\ntldr = re.compile(r\"\"\"(blue (wfaf|tldr)|(where are we))|(what is wfaf)(\\\\n)*\\s*$\"\"\", re.I)\nhigh_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "whos_idle",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "whos_idle = re.compile(\n  r\"\"\"(blue who'?’?s idle\\??\\s*)|(blue who is all idle\\s*)|(blue who is all lurking\\s*)|(blue who'?’?s lurking\\??(\\\\n)*\\s*$)\"\"\", re.I)\nwhos_idle = whos_idle\ntldr = re.compile(r\"\"\"(blue (wfaf|tldr)|(where are we))|(what is wfaf)(\\\\n)*\\s*$\"\"\", re.I)\nhigh_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "whos_idle",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "whos_idle = whos_idle\ntldr = re.compile(r\"\"\"(blue (wfaf|tldr)|(where are we))|(what is wfaf)(\\\\n)*\\s*$\"\"\", re.I)\nhigh_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "tldr",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "tldr = re.compile(r\"\"\"(blue (wfaf|tldr)|(where are we))|(what is wfaf)(\\\\n)*\\s*$\"\"\", re.I)\nhigh_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "high_five",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "high_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "low_five",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "low_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "dab",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "dab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "hate_myself1",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "hate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "thanks",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "thanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "smile",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "smile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "smile_rev",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "smile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "kill",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "kill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "pats",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "pats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "hugs2",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "hugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.o(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "party",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "party = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.o(\\\\n)*\\s*$\"\"\", re.I)\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "menu",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "menu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.o(\\\\n)*\\s*$\"\"\", re.I)\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "magic_menu",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "magic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.o(\\\\n)*\\s*$\"\"\", re.I)\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "heart",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "heart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.o(\\\\n)*\\s*$\"\"\", re.I)\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue enable greets(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "quote",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "quote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.o(\\\\n)*\\s*$\"\"\", re.I)\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue enable greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "uwu",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "uwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.o(\\\\n)*\\s*$\"\"\", re.I)\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue enable greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "jok",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "jok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.o(\\\\n)*\\s*$\"\"\", re.I)\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue enable greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "no",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "no = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.o(\\\\n)*\\s*$\"\"\", re.I)\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue enable greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "eyes",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "eyes = re.compile(r\"\"\"o.o(\\\\n)*\\s*$\"\"\", re.I)\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue enable greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "dni",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "dni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue enable greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "bored",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "bored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue enable greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "dying",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "dying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue enable greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) timeout_control(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "enable_greets",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "enable_greets = re.compile(r\"\"\"blue enable greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) timeout_control(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "disable_greets",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "disable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) timeout_control(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "self_destruct",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "self_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) timeout_control(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhide = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "clear_userlist",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "clear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) timeout_control(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhide = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "uptime1",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "uptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) timeout_control(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhide = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "clear_memory",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "clear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) timeout_control(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhide = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "stats1",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "stats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) timeout_control(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhide = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "get_mute",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "get_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) timeout_control(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhide = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute [^\"\"]+(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "get_timeout_control",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "get_timeout_control = re.compile(r\"\"\"blue (get|fetch) timeout_control(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhide = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute [^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "get_admin_list",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "get_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhide = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute [^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "restart_s",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "restart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhide = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute [^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "hide",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "hide = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute [^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "ily",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "ily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute [^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "love",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "love = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute [^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "dice",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "dice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute [^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "mutereg",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "mutereg = re.compile(r\"\"\"blue mute ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute [^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "unmutereg",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "unmutereg = re.compile(r\"\"\"blue unmute [^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[^\"\"]+(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "enableai",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "enableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "disableai",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "disableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "refresh_data",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "refresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "refresh_messages",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "refresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "stalk",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "stalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "stop_stalk",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "stop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "get_stalk",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "get_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "ban",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "ban = re.compile(r\"\"\"blue ban ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)( [^\"\"]+)? coins(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "ai",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "ai = re.compile(r\"\"\">[^\"\"]+(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)( [^\"\"]+)? coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue send hug(s)? to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "coffee",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "coffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)( [^\"\"]+)? coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue send hug(s)? to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "milk",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "milk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)( [^\"\"]+)? coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue send hug(s)? to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "water",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "water = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)( [^\"\"]+)? coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue send hug(s)? to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "cookiess",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "cookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)( [^\"\"]+)? coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue send hug(s)? to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "ppizza",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "ppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)( [^\"\"]+)? coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue send hug(s)? to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\n# Mene replies",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "coins",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "coins = re.compile(r\"\"\"blue add ([0-9]+)( [^\"\"]+)? coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue send hug(s)? to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "hug",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "hug = re.compile(r\"\"\"blue send hug(s)? to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "pat",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "pat = re.compile(r\"\"\"blue send pats to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "loves",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "loves = re.compile(r\"\"\"blue send love to ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "bonk",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "bonk = re.compile(r\"\"\"blue bonk ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "get_id",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "get_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "get_karma",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "get_karma = re.compile(r\"\"\"blue (fetch|get) details of ([^\"\"]+)(\\\\n)*\\s*\"\"\", re.I)\n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "coffee_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "coffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"\n  \" We call this chat WFAF,\"\n  \" Waiting For A Friend.\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "milk_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "milk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"\n  \" We call this chat WFAF,\"\n  \" Waiting For A Friend.\"\n  \" Let's keep it family-friendly!\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "water_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "water_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"\n  \" We call this chat WFAF,\"\n  \" Waiting For A Friend.\"\n  \" Let's keep it family-friendly!\"\n  \" Enjoy your stay uwu\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "cookies_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "cookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"\n  \" We call this chat WFAF,\"\n  \" Waiting For A Friend.\"\n  \" Let's keep it family-friendly!\"\n  \" Enjoy your stay uwu\"\n)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "pineapple_pizza_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "pineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"\n  \" We call this chat WFAF,\"\n  \" Waiting For A Friend.\"\n  \" Let's keep it family-friendly!\"\n  \" Enjoy your stay uwu\"\n)\nhigh_five_r = \"High five ~*\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "tldr_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "tldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"\n  \" We call this chat WFAF,\"\n  \" Waiting For A Friend.\"\n  \" Let's keep it family-friendly!\"\n  \" Enjoy your stay uwu\"\n)\nhigh_five_r = \"High five ~*\"\ndab_r = \"ヽ( •_)ᕗ\"\nhate_myself_r = \"I like you, have a cupcake 🧁 ^-^\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "high_five_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "high_five_r = \"High five ~*\"\ndab_r = \"ヽ( •_)ᕗ\"\nhate_myself_r = \"I like you, have a cupcake 🧁 ^-^\"\nthanks_r = \"You're welcome :D\"\nhi_r = \"Hellosss :D\"\nsmile_r = \"<:\"\n#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "dab_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "dab_r = \"ヽ( •_)ᕗ\"\nhate_myself_r = \"I like you, have a cupcake 🧁 ^-^\"\nthanks_r = \"You're welcome :D\"\nhi_r = \"Hellosss :D\"\nsmile_r = \"<:\"\n#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "hate_myself_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "hate_myself_r = \"I like you, have a cupcake 🧁 ^-^\"\nthanks_r = \"You're welcome :D\"\nhi_r = \"Hellosss :D\"\nsmile_r = \"<:\"\n#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "thanks_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "thanks_r = \"You're welcome :D\"\nhi_r = \"Hellosss :D\"\nsmile_r = \"<:\"\n#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "hi_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "hi_r = \"Hellosss :D\"\nsmile_r = \"<:\"\n#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "smile_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "smile_r = \"<:\"\n#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "#kill_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "kill_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "kill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "pats_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "pats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "hug_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "hug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "party_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "party_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "menu_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "menu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "magic_menu_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "magic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "smile_rev_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "smile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)\neyes_r = \"0.0\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "heart_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "heart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)\neyes_r = \"0.0\"\ndni_r = \"We are not interested, thanks no thanks\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "dying_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "dying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)\neyes_r = \"0.0\"\ndni_r = \"We are not interested, thanks no thanks\"\nily_r = \"I love you even moreeee\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "uwu_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "uwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)\neyes_r = \"0.0\"\ndni_r = \"We are not interested, thanks no thanks\"\nily_r = \"I love you even moreeee\"\nlow_five_r = \"Even lower five ~*\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "howdy_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "howdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)\neyes_r = \"0.0\"\ndni_r = \"We are not interested, thanks no thanks\"\nily_r = \"I love you even moreeee\"\nlow_five_r = \"Even lower five ~*\"\nlove_r = (",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "no_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "no_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)\neyes_r = \"0.0\"\ndni_r = \"We are not interested, thanks no thanks\"\nily_r = \"I love you even moreeee\"\nlow_five_r = \"Even lower five ~*\"\nlove_r = (\n  \"Hey wonderful person, \"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "eyes_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "eyes_r = \"0.0\"\ndni_r = \"We are not interested, thanks no thanks\"\nily_r = \"I love you even moreeee\"\nlow_five_r = \"Even lower five ~*\"\nlove_r = (\n  \"Hey wonderful person, \"\n  \"you are amazing and deserve everything you desire and love.\"\n  \" Hope the best for you.\"\n  \" You have all my love and wishes.\"\n  \" Much love ~ Blue :>\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "dni_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "dni_r = \"We are not interested, thanks no thanks\"\nily_r = \"I love you even moreeee\"\nlow_five_r = \"Even lower five ~*\"\nlove_r = (\n  \"Hey wonderful person, \"\n  \"you are amazing and deserve everything you desire and love.\"\n  \" Hope the best for you.\"\n  \" You have all my love and wishes.\"\n  \" Much love ~ Blue :>\"\n)",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "ily_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "ily_r = \"I love you even moreeee\"\nlow_five_r = \"Even lower five ~*\"\nlove_r = (\n  \"Hey wonderful person, \"\n  \"you are amazing and deserve everything you desire and love.\"\n  \" Hope the best for you.\"\n  \" You have all my love and wishes.\"\n  \" Much love ~ Blue :>\"\n)\njok_r = \"placeholder\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "low_five_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "low_five_r = \"Even lower five ~*\"\nlove_r = (\n  \"Hey wonderful person, \"\n  \"you are amazing and deserve everything you desire and love.\"\n  \" Hope the best for you.\"\n  \" You have all my love and wishes.\"\n  \" Much love ~ Blue :>\"\n)\njok_r = \"placeholder\"\n#response and string match dictionary",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "love_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "love_r = (\n  \"Hey wonderful person, \"\n  \"you are amazing and deserve everything you desire and love.\"\n  \" Hope the best for you.\"\n  \" You have all my love and wishes.\"\n  \" Much love ~ Blue :>\"\n)\njok_r = \"placeholder\"\n#response and string match dictionary\nresponse_dict = {",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "jok_r",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "jok_r = \"placeholder\"\n#response and string match dictionary\nresponse_dict = {\n  tldr: tldr_r,\n  high_five: high_five_r,\n  dab: dab_r,\n  hate_myself1: hate_myself_r,\n  thanks: thanks_r,\n  smile: smile_r,\n  hey1: hi_r,",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "response_dict",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "response_dict = {\n  tldr: tldr_r,\n  high_five: high_five_r,\n  dab: dab_r,\n  hate_myself1: hate_myself_r,\n  thanks: thanks_r,\n  smile: smile_r,\n  hey1: hi_r,\n  kill: kill_r,\n  pats: pats_r,",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "admin_commands",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "admin_commands = [\n  enable_greets,\n  disable_greets,\n  self_destruct,\n  clear_userlist,\n  uptime1,\n  clear_memory,\n  stats1,\n  get_mute,\n  get_timeout_control,",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "dict_serve",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "dict_serve = {\n  \"coffee\": \"Image: [aW1hZ2UvOTc4NDI1NC9jb2ZmZWUuanBn]\",\n  \"milk\": \"Image: [aW1hZ2UvOTc4NDI1Mi9taWxrLmpwZWc=]\",\n  \"water\": \"Image: [aW1hZ2UvOTc4NDI1My93YXRlci5qcGc=]\",\n  \"doritos\": \"Image: [aW1hZ2UvOTc4NDI2OC9pbWFnZXMuanBlZw==]\",\n  \"pineapple pizza\": \"Image: [aW1hZ2UvOTc4NDI3Ni9pc3RvY2stNTM3NjQwNzEwLmpwZw==]\"\n}\ncoinsandfeelings = [\n  coins,\n  loves,",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "coinsandfeelings",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "coinsandfeelings = [\n  coins,\n  loves,\n  pat,\n  hug,\n  bonk,\n  get_id,\n  get_karma\n]\ncookiejar= [",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "check1",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "check1 = re.compile(r\"\"\"Welcome, [^\"\"]+, to WFAF - Waiting For A Friend. This is a family-friendly group chat you get sent to when you try to message someone who you've sent a friend request to and they haven't accepted your request.\\s*\"\"\")\ncheck2 = re.compile(r\"\"\"Hi, [^\"\"]+, retrying won't help, you can try asking 'what is wfaf' for more info :D\\s*\"\"\")\ncheck3 = re.compile(r\"\"\"Hi again, [^\"\"]+, try asking 'what is wfaf' for more info :D\\s*\"\"\")\ncheck4 = re.compile(r\"\"\"Hello, [^\"\"]+! Welcome to WFAF! - Waiting for a Friend! The place where your dreams used to come true~\\s*\"\"\")\ncheck5 = re.compile(r\"\"\"Hi, [^\"\"]+! I'm afraid they aren't your friend yet, you can always try again!\\s*\"\"\")\ncheck6 = re.compile(r\"\"\"Hi again, [^\"\"]+, don't feel bad, they'll accept one day... hopefully!\\s*\"\"\")\ngreet_check= [\n  check1,\n  check2,\n  check3,",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "check2",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "check2 = re.compile(r\"\"\"Hi, [^\"\"]+, retrying won't help, you can try asking 'what is wfaf' for more info :D\\s*\"\"\")\ncheck3 = re.compile(r\"\"\"Hi again, [^\"\"]+, try asking 'what is wfaf' for more info :D\\s*\"\"\")\ncheck4 = re.compile(r\"\"\"Hello, [^\"\"]+! Welcome to WFAF! - Waiting for a Friend! The place where your dreams used to come true~\\s*\"\"\")\ncheck5 = re.compile(r\"\"\"Hi, [^\"\"]+! I'm afraid they aren't your friend yet, you can always try again!\\s*\"\"\")\ncheck6 = re.compile(r\"\"\"Hi again, [^\"\"]+, don't feel bad, they'll accept one day... hopefully!\\s*\"\"\")\ngreet_check= [\n  check1,\n  check2,\n  check3,\n  check4,",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "check3",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "check3 = re.compile(r\"\"\"Hi again, [^\"\"]+, try asking 'what is wfaf' for more info :D\\s*\"\"\")\ncheck4 = re.compile(r\"\"\"Hello, [^\"\"]+! Welcome to WFAF! - Waiting for a Friend! The place where your dreams used to come true~\\s*\"\"\")\ncheck5 = re.compile(r\"\"\"Hi, [^\"\"]+! I'm afraid they aren't your friend yet, you can always try again!\\s*\"\"\")\ncheck6 = re.compile(r\"\"\"Hi again, [^\"\"]+, don't feel bad, they'll accept one day... hopefully!\\s*\"\"\")\ngreet_check= [\n  check1,\n  check2,\n  check3,\n  check4,\n  check5,",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "check4",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "check4 = re.compile(r\"\"\"Hello, [^\"\"]+! Welcome to WFAF! - Waiting for a Friend! The place where your dreams used to come true~\\s*\"\"\")\ncheck5 = re.compile(r\"\"\"Hi, [^\"\"]+! I'm afraid they aren't your friend yet, you can always try again!\\s*\"\"\")\ncheck6 = re.compile(r\"\"\"Hi again, [^\"\"]+, don't feel bad, they'll accept one day... hopefully!\\s*\"\"\")\ngreet_check= [\n  check1,\n  check2,\n  check3,\n  check4,\n  check5,\n  check6",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "check5",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "check5 = re.compile(r\"\"\"Hi, [^\"\"]+! I'm afraid they aren't your friend yet, you can always try again!\\s*\"\"\")\ncheck6 = re.compile(r\"\"\"Hi again, [^\"\"]+, don't feel bad, they'll accept one day... hopefully!\\s*\"\"\")\ngreet_check= [\n  check1,\n  check2,\n  check3,\n  check4,\n  check5,\n  check6\n]",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "check6",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "check6 = re.compile(r\"\"\"Hi again, [^\"\"]+, don't feel bad, they'll accept one day... hopefully!\\s*\"\"\")\ngreet_check= [\n  check1,\n  check2,\n  check3,\n  check4,\n  check5,\n  check6\n]\n#Some Strings",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "karma_url",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "karma_url = \"https://www.emeraldchat.com/karma_give?id=%s&polarity=-1=HTTP/2\"\nprofile_url = \"https://emeraldchat.com/profile_json?id=%d\" \njokes_url = \"https://icanhazdadjoke.com/slack\"\n#ws-connection shit\nws_url = \"wss://www.emeraldchat.com/cable\"\norigin = \"https://www.emeraldchat.com\"\nsubprots = [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n#Responses\nstart_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "profile_url",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "profile_url = \"https://emeraldchat.com/profile_json?id=%d\" \njokes_url = \"https://icanhazdadjoke.com/slack\"\n#ws-connection shit\nws_url = \"wss://www.emeraldchat.com/cable\"\norigin = \"https://www.emeraldchat.com\"\nsubprots = [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n#Responses\nstart_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "jokes_url",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "jokes_url = \"https://icanhazdadjoke.com/slack\"\n#ws-connection shit\nws_url = \"wss://www.emeraldchat.com/cable\"\norigin = \"https://www.emeraldchat.com\"\nsubprots = [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n#Responses\nstart_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "ws_url",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "ws_url = \"wss://www.emeraldchat.com/cable\"\norigin = \"https://www.emeraldchat.com\"\nsubprots = [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n#Responses\nstart_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "origin",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "origin = \"https://www.emeraldchat.com\"\nsubprots = [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n#Responses\nstart_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "subprots",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "subprots = [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n#Responses\nstart_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "start_ignoring",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "start_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "stop_ignoring",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "stop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "already_ignoring",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "already_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "already_not_ignoring",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "already_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "stopping_logging",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "stopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "logging_text",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "logging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "done",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "done = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "already_not_greeting",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "already_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "leaving",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "leaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "clear_list",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "clear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "just_joined",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "just_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "here_for_one_min",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "here_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "here_for_x_mins",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "here_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "here_for_hours_and_mins",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "here_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "memory_loss",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "memory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "restarting",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "restarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "aye_aye",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "aye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "banning_response",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "banning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "waking_stalking",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "waking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "already_stalking",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "already_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "already_not_stalking",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "already_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "give_valid_id",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "give_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "stopping_stalking",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "stopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "stalking_no_one",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "stalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "stalking_following",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "stalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "adding_one_coin",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "adding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "adding_coins",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "adding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "too_many_coins",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "too_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "sending_love",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "sending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "sending_pats",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "sending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "sending_hugs",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "sending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "sending_bonks",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "sending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "message_log_text",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "message_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "blue_greet",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "blue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "disabling_greet",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "disabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "re_enabling_greet",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "re_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "details_response",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "details_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "details_response_null_gender",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "details_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "account_deleted",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "account_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, Welcome to WFAF, which stands for Waiting For A Friend, to which you were sent when you tried texting someone who hasn't accepted/declined your friend request, Enjoy your stay :D \"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "timeout_error",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "timeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, Welcome to WFAF, which stands for Waiting For A Friend, to which you were sent when you tried texting someone who hasn't accepted/declined your friend request, Enjoy your stay :D \"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "not_seen",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "not_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, Welcome to WFAF, which stands for Waiting For A Friend, to which you were sent when you tried texting someone who hasn't accepted/declined your friend request, Enjoy your stay :D \"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "stats_response",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "stats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, Welcome to WFAF, which stands for Waiting For A Friend, to which you were sent when you tried texting someone who hasn't accepted/declined your friend request, Enjoy your stay :D \"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "dice_statement",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "dice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, Welcome to WFAF, which stands for Waiting For A Friend, to which you were sent when you tried texting someone who hasn't accepted/declined your friend request, Enjoy your stay :D \"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "unknown_error",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "unknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, Welcome to WFAF, which stands for Waiting For A Friend, to which you were sent when you tried texting someone who hasn't accepted/declined your friend request, Enjoy your stay :D \"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "chatlog_file",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "chatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, Welcome to WFAF, which stands for Waiting For A Friend, to which you were sent when you tried texting someone who hasn't accepted/declined your friend request, Enjoy your stay :D \"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "Greet_1",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "Greet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, Welcome to WFAF, which stands for Waiting For A Friend, to which you were sent when you tried texting someone who hasn't accepted/declined your friend request, Enjoy your stay :D \"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "Greet_2",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "Greet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, Welcome to WFAF, which stands for Waiting For A Friend, to which you were sent when you tried texting someone who hasn't accepted/declined your friend request, Enjoy your stay :D \"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "Greet_general",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "Greet_general = \"Hi, %s, Welcome to WFAF, which stands for Waiting For A Friend, to which you were sent when you tried texting someone who hasn't accepted/declined your friend request, Enjoy your stay :D \"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "whos_here_response_no_lurkers",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "whos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "whos_here_response_gen1",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "whos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "whos_here_response_gen2",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "whos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "whos_lurking_none",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "whos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "whos_lurking_gen",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "whos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "id_response",
        "kind": 5,
        "importPath": "Old files.vars",
        "description": "Old files.vars",
        "peekOfCode": "id_response = \"ID of %s is %s\"",
        "detail": "Old files.vars",
        "documentation": {}
    },
    {
        "label": "send_message",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def send_message(content):\n    jsonmessage = {\n        \"command\": \"message\",\n        \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":null}\",\n        \"data\": \"{\\\"message\\\":\\\"\" + fix_message(content) + \"\\\",\\\"id\\\":null,\\\"action\\\":\\\"speak\\\"}\"}\n    jsonmessage_alt = {\"command\": \"message\", \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":\\\"blueyblue\\\"}\",\n                       \"data\": \"{\\\"message\\\":\\\"\"+fix_message(content) + \"\\\",\\\"id\\\":\\\"blueyblue\\\",\\\"action\\\":\\\"speak\\\"}\"}\n    if ALT_UNIVERSE_TOGGLE:\n        ws.send(json.dumps(jsonmessage_alt))\n    else:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "return_id",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def return_id(string):\n    try:\n        refresh_seen()\n        if string.isnumeric():\n            inputid = string\n            if inputid in seen_data:\n                return inputid\n            return False\n        string = string.replace(\"#\", \"\")\n        count = 0",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "remove_blue",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def remove_blue():\n    global MAIN_DICT, IDLE_DICT, TIMEOUT_CONTROL\n    if 21550262 in MAIN_DICT:\n        del MAIN_DICT[21550262]\n    if 21550262 in IDLE_DICT:\n        del IDLE_DICT[21550262]\n    if 21550262 in TIMEOUT_CONTROL:\n        del TIMEOUT_CONTROL[21550262]\ndef idle_function():\n    idle_check = list(TIMEOUT_CONTROL.values())",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "idle_function",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def idle_function():\n    idle_check = list(TIMEOUT_CONTROL.values())\n    for i, time_stamp in enumerate(idle_check):\n        if perf_counter() - time_stamp >= 240:\n            val = list(TIMEOUT_CONTROL.keys())[i]\n            if val in MAIN_DICT:\n                IDLE_DICT[val] = MAIN_DICT[val]\n                del MAIN_DICT[val]\n        elif perf_counter() - time_stamp < 240:\n            val = list(TIMEOUT_CONTROL.keys())[i]",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "clocking",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def clocking():\n    global RESET_CLOCK, GREET_TIMEOUT\n    if RESET_CLOCK == 500:\n        GREET_TIMEOUT, RESET_CLOCK = {}, 0\ndef refreshdata():\n    global DATA\n    with open('data.json', 'r') as file:\n        DATA = json.loads(file.read())\ndef update_data_json():\n    global DATA",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "refreshdata",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def refreshdata():\n    global DATA\n    with open('data.json', 'r') as file:\n        DATA = json.loads(file.read())\ndef update_data_json():\n    global DATA\n    with open('data.json', 'w') as file:\n        json.dump(DATA, file)\n    refreshdata()\ndef refreshmessages():",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "update_data_json",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def update_data_json():\n    global DATA\n    with open('data.json', 'w') as file:\n        json.dump(DATA, file)\n    refreshdata()\ndef refreshmessages():\n    global saved_messages\n    with open('messages.json', 'r') as file:\n        saved_messages = json.loads(file.read())\ndef update_messages_json():",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "refreshmessages",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def refreshmessages():\n    global saved_messages\n    with open('messages.json', 'r') as file:\n        saved_messages = json.loads(file.read())\ndef update_messages_json():\n    global saved_messages\n    with open('messages.json', 'w') as file:\n        json.dump(saved_messages, file)\n    refreshmessages()\ndef refresh_seen():",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "update_messages_json",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def update_messages_json():\n    global saved_messages\n    with open('messages.json', 'w') as file:\n        json.dump(saved_messages, file)\n    refreshmessages()\ndef refresh_seen():\n    global seen_data\n    with open('seen.json', 'r') as file:\n        seen_data = json.load(file)\ndef update_seen_json():",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "refresh_seen",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def refresh_seen():\n    global seen_data\n    with open('seen.json', 'r') as file:\n        seen_data = json.load(file)\ndef update_seen_json():\n    global seen_data\n    with open('seen.json', 'w') as file:\n        json.dump(seen_data, file)\ndef update_seen(inputname, inputid, inputusername):\n    time_stamp = strftime(\"%Y-%m-%d %H:%M:%S\", gmtime())",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "update_seen_json",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def update_seen_json():\n    global seen_data\n    with open('seen.json', 'w') as file:\n        json.dump(seen_data, file)\ndef update_seen(inputname, inputid, inputusername):\n    time_stamp = strftime(\"%Y-%m-%d %H:%M:%S\", gmtime())\n    inputid = str(inputid)\n    if inputid not in seen_data:\n        seen_data[inputid] = {}\n    seen_data[inputid][\"name\"] = inputname",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "update_seen",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def update_seen(inputname, inputid, inputusername):\n    time_stamp = strftime(\"%Y-%m-%d %H:%M:%S\", gmtime())\n    inputid = str(inputid)\n    if inputid not in seen_data:\n        seen_data[inputid] = {}\n    seen_data[inputid][\"name\"] = inputname\n    seen_data[inputid][\"username\"] = inputusername\n    seen_data[inputid][\"channel_name\"] = {\"WFAF\": time_stamp}\n    update_seen_json()\ndef update_image_cache():",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "update_image_cache",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def update_image_cache():\n    global IMAGE_CACHE\n    with open('image_cache.json', 'w') as file:\n        json.dump(IMAGE_CACHE, file)\ndef refresh_image_cache():\n    global IMAGE_CACHE\n    with open('image_cache.json', 'r') as file:\n        IMAGE_CACHE = json.loads(file.read())\ndef saved_message_handler(inputid, inputname):\n    if inputid in saved_messages:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "refresh_image_cache",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def refresh_image_cache():\n    global IMAGE_CACHE\n    with open('image_cache.json', 'r') as file:\n        IMAGE_CACHE = json.loads(file.read())\ndef saved_message_handler(inputid, inputname):\n    if inputid in saved_messages:\n        if len(saved_messages[inputid]) == 1:\n            output_message = \"Hello %s I have a message for you: %s\" % (\n                inputname, saved_messages[inputid][0])\n            sleep(0.9)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "saved_message_handler",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def saved_message_handler(inputid, inputname):\n    if inputid in saved_messages:\n        if len(saved_messages[inputid]) == 1:\n            output_message = \"Hello %s I have a message for you: %s\" % (\n                inputname, saved_messages[inputid][0])\n            sleep(0.9)\n            send_message(output_message)\n            del saved_messages[inputid]\n        else:\n            sleep(1)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "greet_text",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def greet_text(count, inputname):\n    if not SHORTEN_GREET_TOGGLE:\n        match count:\n            case 1: return Greet_1 % inputname\n            case 2: return Greet_2 % inputname\n            case 3: return Greet_general % inputname\n    else:\n        match count:\n            case 1: return Greet_1_short % inputname\n            case 2: return Greet_2_short % inputname",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "send_greet",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def send_greet(inputname, inputusername):\n    if len(inputname) > 3:\n        inputusername = \"\"\n    else:\n        inputusername = \" (#%s)\" % inputusername\n    if inputname in GREET_TIMEOUT:\n        match GREET_TIMEOUT[inputname]:\n            case \"1\":\n                send_message(greet_text(1, \"%s%s\" %\n                             (inputname, inputusername)))",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "greet",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def greet(action, result, greet, b):\n    global DATA, saved_messages, MAIN_DICT, IDLE_DICT, TIMEOUT_CONTROL, stats_list\n    if (action in b) and (\"user\" in b) and \"display_name\" in b[\"user\"]:\n        inputname = fix_name(b[\"user\"][\"display_name\"])\n        username = b[\"user\"][\"username\"]\n        inputid = b[\"user\"][\"id\"]\n        if result == \"add\":\n            MAIN_DICT[inputid] = inputname\n            stats_list[inputid] = inputname\n            TIMEOUT_CONTROL[inputid] = perf_counter()",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "dis_en_greets",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def dis_en_greets(inputid):\n    global greet_status\n    if inputid == \"16008266\" and greet_status:\n        send_message(disabling_greet)\n        greet_status = False\n    elif inputid == \"20909261\" and not greet_status:\n        send_message(re_enabling_greet)\n        greet_status = True\ndef check_greeters(message, id):\n    global greet_status, DATA",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "check_greeters",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def check_greeters(message, id):\n    global greet_status, DATA\n    found = False\n    if id in DATA[\"greeter_fallback\"]:\n        for reg_m in greet_check:\n            result = reg_m.match(message)\n            if message in DATA[\"custom_greet\"].values() or result or message == blue_greet:\n                dis_en_greets(id)\n                found = True\n                break",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "saving_messages",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def saving_messages(name, result):\n    global saved_messages\n    String = result.group(1).rstrip()\n    if String.isnumeric():\n        inputid = String\n    else:\n        inputid = return_id(String)\n    if inputid:\n        if type(inputid) is not dict:\n            if inputid in saved_messages:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "downvote",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def downvote(cookie, inputid):\n    requests.get(karma_url % inputid, cookies=cookie)\ndef ban_log(banned_id, admin_id):\n    if admin_id != 0:\n        r = requests.get(profile_url % int(admin_id), cookies=cookies)\n        admin_name = json.loads(r.text)[\"user\"][\"display_name\"]\n    else:\n        admin_name = \"Console Admin\"\n    log = \"Banned %s by %s \\n\" % (banned_id, admin_name)\n    with open(\"log.txt\", \"a\") as f:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "ban_log",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def ban_log(banned_id, admin_id):\n    if admin_id != 0:\n        r = requests.get(profile_url % int(admin_id), cookies=cookies)\n        admin_name = json.loads(r.text)[\"user\"][\"display_name\"]\n    else:\n        admin_name = \"Console Admin\"\n    log = \"Banned %s by %s \\n\" % (banned_id, admin_name)\n    with open(\"log.txt\", \"a\") as f:\n        f.write(log)\ndef thread(id):",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "thread",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def thread(id):\n    banned.add(id)\n    for c in cookiejar:\n        cookie = {'_prototype_app_session': c}\n        Thread(target=downvote, args=(cookie, id)).start()\ndef mute_func(result, index):\n    global DATA\n    inputid = result.group(1)\n    match index:\n        case 11:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "mute_func",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def mute_func(result, index):\n    global DATA\n    inputid = result.group(1)\n    match index:\n        case 11:\n            if inputid in DATA[\"mutelist\"]:\n                return already_ignoring\n            DATA[\"mutelist\"].append(inputid)\n            update_data_json()\n            response = start_ignoring % inputid",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "stalker",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def stalker(id, time_now):\n    global stalking_log\n    filename = str(id) + \".txt\"\n    git_prefix = \"stalker-logs/\"\n    file = git_prefix + filename\n    myfile = Path(file)\n    if not myfile.is_file():\n        file = open(filename, \"w\")\n        file.close()\n    while stalking_log[id][1]:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "respond_uptime",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def respond_uptime():\n    sr = str(datetime.now() - starttime).split(\":\")\n    if sr[0] == \"0\":\n        match int(sr[1])+0:\n            case 0: return just_joined\n            case 1: return here_for_one_min\n            case _: return here_for_x_mins % str(int(sr[1])+0)\n    return here_for_hours_and_mins % (str(sr[0]), str(int(sr[1]) + 0))\ndef send_stats():\n    sr = str(datetime.now() - starttime).split(\":\")",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "send_stats",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def send_stats():\n    sr = str(datetime.now() - starttime).split(\":\")\n    r = strftime(\"%a, %d %b %Y %I:%M:%S %p %Z\", gmtime())\n    return stats_response % (len(stats), len(stats_list), sr[0], sr[1], str(r))\ndef start_stalking(id):\n    if id not in stalking_log:\n        t = Thread(target=stalker, args=(id, timer()))\n        stalking_log[id] = [t, True]\n        t.start()\n        return waking_stalking",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "start_stalking",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def start_stalking(id):\n    if id not in stalking_log:\n        t = Thread(target=stalker, args=(id, timer()))\n        stalking_log[id] = [t, True]\n        t.start()\n        return waking_stalking\n    return already_stalking % id\ndef stop_stalking(id):\n    global stalking_log\n    if id in stalking_log:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "stop_stalking",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def stop_stalking(id):\n    global stalking_log\n    if id in stalking_log:\n        stalking_log[id][1] = False\n        return stopping_stalking % id\n    return already_not_stalking % id\ndef mod_demod(result):\n    global DATA\n    mod_id = result.group(2)\n    if result.group(1) == \"mod\":",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "mod_demod",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def mod_demod(result):\n    global DATA\n    mod_id = result.group(2)\n    if result.group(1) == \"mod\":\n        if mod_id in DATA[\"mod\"] or mod_id in DATA[\"admin\"]:\n            return already_mod % mod_id\n        DATA[\"mod\"].append(mod_id)\n        update_data_json()\n        return mod_response % mod_id\n    if result.group(1) == \"demod\":",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "clear_lists",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def clear_lists():\n    global MAIN_DICT, IDLE_DICT, TIMEOUT_CONTROL\n    TIMEOUT_CONTROL.clear()\n    MAIN_DICT.clear()\n    IDLE_DICT.clear()\n    return clear_list\ndef set_greet(result):\n    inputid = result.group(1)\n    greet = result.group(3)\n    if inputid not in DATA[\"custom_greet\"]:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "set_greet",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def set_greet(result):\n    inputid = result.group(1)\n    greet = result.group(3)\n    if inputid not in DATA[\"custom_greet\"]:\n        DATA[\"custom_greet\"][inputid] = greet\n        update_data_json()\n        return greet_set % (inputid, greet)\n    DATA[\"custom_greet\"][inputid] = greet\n    update_data_json()\n    return greet_updated % (inputid, greet)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "get_greet",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def get_greet(result):\n    inputid = result.group(1)\n    if inputid in DATA[\"custom_greet\"]:\n        return greet_response % (inputid, DATA[\"custom_greet\"][inputid])\n    return greet_not_set % inputid\ndef remove_greet(result):\n    inputid = result.group(1)\n    if inputid in DATA[\"custom_greet\"]:\n        del DATA[\"custom_greet\"][inputid]\n        update_data_json()",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "remove_greet",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def remove_greet(result):\n    inputid = result.group(1)\n    if inputid in DATA[\"custom_greet\"]:\n        del DATA[\"custom_greet\"][inputid]\n        update_data_json()\n        return greet_removed % inputid\n    return greet_not_set % inputid\ndef get_landmine():\n    landmine_list = DATA[\"landmine_words\"]\n    return fix_message(landmine_list)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "get_landmine",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def get_landmine():\n    landmine_list = DATA[\"landmine_words\"]\n    return fix_message(landmine_list)\ndef add_landmine(result):\n    word = result.group(1)\n    if word not in DATA[\"landmine_words\"]:\n        DATA[\"landmine_words\"].append(word)\n        update_data_json()\n        return landmine_added % word\n    return landmine_already_added % word",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "add_landmine",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def add_landmine(result):\n    word = result.group(1)\n    if word not in DATA[\"landmine_words\"]:\n        DATA[\"landmine_words\"].append(word)\n        update_data_json()\n        return landmine_added % word\n    return landmine_already_added % word\ndef remove_landmine(result):\n    word = result.group(1)\n    if word in DATA[\"landmine_words\"]:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "remove_landmine",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def remove_landmine(result):\n    word = result.group(1)\n    if word in DATA[\"landmine_words\"]:\n        DATA[\"landmine_words\"].remove(word)\n        update_data_json()\n        return landmine_removed % word\n    return landmine_not_present % word\ndef toggle_alt_universe():\n    global ALT_UNIVERSE_TOGGLE\n    if ALT_UNIVERSE_TOGGLE:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "toggle_alt_universe",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def toggle_alt_universe():\n    global ALT_UNIVERSE_TOGGLE\n    if ALT_UNIVERSE_TOGGLE:\n        ALT_UNIVERSE_TOGGLE = False\n    else:\n        ALT_UNIVERSE_TOGGLE = True\ndef toggle_spam_check():\n    global SPAM_CHECK_TOGGLE\n    if SPAM_CHECK_TOGGLE:\n        SPAM_CHECK_TOGGLE = False",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "toggle_spam_check",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def toggle_spam_check():\n    global SPAM_CHECK_TOGGLE\n    if SPAM_CHECK_TOGGLE:\n        SPAM_CHECK_TOGGLE = False\n        return spam_check_off\n    SPAM_CHECK_TOGGLE = True\n    return spam_check_on\ndef get_spam_check_status():\n    if SPAM_CHECK_TOGGLE:\n        return spam_check_on",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "get_spam_check_status",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def get_spam_check_status():\n    if SPAM_CHECK_TOGGLE:\n        return spam_check_on\n    return spam_check_off\ndef make_knight(result):\n    inputname = result.group(1)\n    if inputname.isnumeric():\n        inputid = inputname\n        if inputid not in DATA[\"knight\"]:\n            DATA[\"knight\"].append(inputid)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "make_knight",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def make_knight(result):\n    inputname = result.group(1)\n    if inputname.isnumeric():\n        inputid = inputname\n        if inputid not in DATA[\"knight\"]:\n            DATA[\"knight\"].append(inputid)\n            update_data_json()\n            return knight_added % inputname\n        return knight_already_added % inputname\n    inputid = return_id(inputname)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "remove_knight",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def remove_knight(result):\n    inputname = result.group(1)\n    if inputname.isnumeric():\n        inputid = inputname\n        if inputid in DATA[\"knight\"]:\n            DATA[\"knight\"].remove(inputid)\n            update_data_json()\n            return knight_removed % inputname\n        return knight_not_added % inputname\n    inputid = return_id(inputname)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "toggle_shortened_greet",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def toggle_shortened_greet():\n    global SHORTEN_GREET_TOGGLE\n    if SHORTEN_GREET_TOGGLE:\n        SHORTEN_GREET_TOGGLE = False\n        return shortened_greet_off\n    SHORTEN_GREET_TOGGLE = True\n    return shortened_greet_on\ndef save_nickname(inputresult):\n    inputname = inputresult.group(1)\n    nickname = inputresult.group(2)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "save_nickname",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def save_nickname(inputresult):\n    inputname = inputresult.group(1)\n    nickname = inputresult.group(2)\n    if inputname.isnumeric():\n        inputid = inputname\n        if inputid not in DATA[\"nickname\"]:\n            DATA[\"nickname\"][inputid] = [nickname]\n            update_data_json()\n            return nickname_added % (nickname, inputname)\n        DATA[\"nickname\"][inputid].append(nickname)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "toggle_greets",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def toggle_greets(result):\n    global greet_status\n    action = result.group(1)\n    if action == \"enable\":\n        greet_status = True\n        return done\n    if action == \"disable\":\n        if greet_status:\n            greet_status = False\n            return done",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "hide",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def hide(id):\n    global TIMEOUT_CONTROL, MAIN_DICT, IDLE_DICT\n    id = int(id)\n    del TIMEOUT_CONTROL[int(id)]\n    if id in MAIN_DICT:\n        del MAIN_DICT[id]\n    if id in IDLE_DICT:\n        del IDLE_DICT[id]\n    return aye_aye\ndef banfunc(result):",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "banfunc",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def banfunc(result):\n    id_ban = result.group(1)\n    thread(id_ban)\n    Thread(target=ban_log, args=(id_ban, id,)).start()\n    return banning_response % id_ban\ndef returnstalk():\n    if stalking_log:\n        return stalking_following % fix_message(str(stalking_log.keys()))\n    return stalking_no_one\ndef admin_function_init(i, id, isadmin, result):",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "returnstalk",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def returnstalk():\n    if stalking_log:\n        return stalking_following % fix_message(str(stalking_log.keys()))\n    return stalking_no_one\ndef admin_function_init(i, id, isadmin, result):\n    global greet_status, running, name, starttime, aichatstate, GREET_TIMEOUT, DATA\n    match i:\n        case 0: response = toggle_greets(result)\n        case 1: response, running = leaving, False\n        case 2 if isadmin: response = clear_lists()",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "admin_function_init",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def admin_function_init(i, id, isadmin, result):\n    global greet_status, running, name, starttime, aichatstate, GREET_TIMEOUT, DATA\n    match i:\n        case 0: response = toggle_greets(result)\n        case 1: response, running = leaving, False\n        case 2 if isadmin: response = clear_lists()\n        case 3: response = respond_uptime()\n        case 4: GREET_TIMEOUT, response = {}, done\n        case 5: response = send_stats()\n        case 6: response = \"Mutelist is: %s\" % fix_message(str(DATA[\"mutelist\"]))",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "admin_func",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def admin_func(message, id, isadmin):\n    for i in range(len(admin_commands)):\n        result = admin_commands[i].match(message)\n        if result:\n            admin_function_init(i, id, isadmin, result)\n            break\ndef landmine_checker(message, id):\n    for word in DATA[\"landmine_words\"]:\n        regex1 = re.compile(r\"%s\" % word, re.I)\n        if regex1.search(message):",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "landmine_checker",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def landmine_checker(message, id):\n    for word in DATA[\"landmine_words\"]:\n        regex1 = re.compile(r\"%s\" % word, re.I)\n        if regex1.search(message):\n            thread(id)\n            break\ndef spam_controlling(id):\n    global spam_timeout\n    if id in spam_timeout:\n        spam_timeout[id].append(perf_counter())",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "spam_controlling",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def spam_controlling(id):\n    global spam_timeout\n    if id in spam_timeout:\n        spam_timeout[id].append(perf_counter())\n    else:\n        spam_timeout[id] = [perf_counter()]\ndef spam_checker():\n    for id in spam_timeout:\n        if id not in banned:\n            if len(spam_timeout[id]) >= 3 and spam_timeout[id][-1] - spam_timeout[id][-3] < 1.3:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "spam_checker",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def spam_checker():\n    for id in spam_timeout:\n        if id not in banned:\n            if len(spam_timeout[id]) >= 3 and spam_timeout[id][-1] - spam_timeout[id][-3] < 1.3:\n                thread(id)\n                break\n            elif len(spam_timeout[id]) >= 5 and spam_timeout[id][-1] - spam_timeout[id][-5] < 3:\n                thread(id)\n                break\ndef image_upload(query, urly):",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "image_upload",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def image_upload(query, urly):\n    global client\n    found = False\n    if query in IMAGE_CACHE:\n        return IMAGE_CACHE[query][1]\n    for i in IMAGE_CACHE:\n        if IMAGE_CACHE[i][0] == urly:\n            found = True\n            return IMAGE_CACHE[i][1]\n    if not found:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "get_image_link",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def get_image_link(query):\n    url = response().urls(query, 6)\n    try:\n        return image_upload(query, url[-1])\n    except ImgurClientError:\n        send_message(\"Sorry I couldn't find %s\" % query)\n        pass\n    except ImgurClientRateLimitError:\n        send_message(\n            \"Sorry the rate limit of 50 pics per hour has been exceeded, please wait for a couple of mins before retrying\")",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "send_pic",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def send_pic(query):\n    send_message(get_image_link(query))\ndef get_meme():\n    r = requests.get(\"https://meme-api.herokuapp.com/gimme\")\n    r = json.loads(r.text)\n    link = r[\"url\"]\n    image = client.upload_from_url(link)\n    link = image[\"link\"].replace(\"https://\", \"\")\n    formattedlink = \"Image: \" + link\n    return formattedlink",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "get_meme",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def get_meme():\n    r = requests.get(\"https://meme-api.herokuapp.com/gimme\")\n    r = json.loads(r.text)\n    link = r[\"url\"]\n    image = client.upload_from_url(link)\n    link = image[\"link\"].replace(\"https://\", \"\")\n    formattedlink = \"Image: \" + link\n    return formattedlink\ndef get_meme_link():\n    try:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "get_meme_link",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def get_meme_link():\n    try:\n        send_message(get_meme())\n    except ImgurClientError:\n        send_message(\"Sorry I couldn't find a meme\")\n        pass\n    except ImgurClientRateLimitError:\n        send_message(\n            \"Sorry the rate limit of 50 pics per hour has been exceeded, please wait for a couple of mins before retrying\")\n        pass",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "send_seen",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def send_seen(id):\n    refresh_seen()\n    r = strftime(\"%a, %d %b %Y %I:%M:%S %p %Z\", gmtime())\n    name = seen_data[id][\"name\"]\n    username = seen_data[id][\"username\"]\n    lastseen_list = {}\n    for key in seen_data[id][\"channel_name\"]:\n        date = seen_data[id][\"channel_name\"][key]\n        lastseen_list[date] = key\n    date = max(lastseen_list)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "log_chats",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def log_chats(message, user_id, user):\n    date = datetime.today().strftime('%d-%m-%Y')\n    filename = \"wfaf-logs/log (%s).txt\" % date\n    myfile = Path(filename)\n    if myfile.is_file():\n        name = fix_name(user[\"display_name\"])\n        log = fix_message(message_log_text % (name, user_id, message)) + \"\\n\"\n        with open(filename, \"a\") as f:\n            f.write(log)\n    else:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "list_removal",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def list_removal(id):\n    global MAIN_DICT, TIMEOUT_CONTROL, IDLE_DICT\n    if id in TIMEOUT_CONTROL:\n        del TIMEOUT_CONTROL[id]\n    if id in MAIN_DICT:\n        del MAIN_DICT[id]\n    if id in IDLE_DICT:\n        del IDLE_DICT[id]\ndef whos_here_appending(id):\n    global whos_here_r",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "whos_here_appending",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def whos_here_appending(id):\n    global whos_here_r\n    try:\n        r = requests.get(profile_url % id, cookies=cookies, timeout=1)\n        r = json.loads(r.text)\n        if len(r[\"user\"][\"display_name\"]) > 3:\n            whos_here_r.append(r[\"user\"][\"display_name\"])\n        else:\n            whos_here_r.append(\"%s (#%s)\" % (\n                r[\"user\"][\"display_name\"], r[\"user\"][\"username\"]))",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "reply_whos_here",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def reply_whos_here():\n    global whos_here_r\n    for i in MAIN_DICT:\n        threads.append(Thread(target=whos_here_appending, args=(i,)))\n    for t in threads:\n        t.start()\n    for t in threads:\n        t.join()\n    threads.clear()\n    idle_len = len(IDLE_DICT)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "reply_whos_idle",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def reply_whos_idle():\n    global whos_here_r\n    for i in IDLE_DICT.keys():\n        threads.append(Thread(target=whos_here_appending, args=(i,)))\n    for t in threads:\n        t.start()\n    for t in threads:\n        t.join()\n    threads.clear()\n    whos_idle_r = \",\".join(whos_here_r)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "get_seen",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def get_seen(result):\n    try:\n        refresh_seen()\n        string = result.group(1)\n        if string.isnumeric():\n            id = string\n            if id in seen_data:\n                return send_seen(id)\n            return fix_message(\"I dont remember seeing user with ID %s\" % str(id))\n        string = string.replace(\"#\", \"\")",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "image_upload",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def image_upload(query, urly):\n    global client\n    found = False\n    if query in IMAGE_CACHE:\n        return IMAGE_CACHE[query][1]\n    for i in IMAGE_CACHE:\n        if IMAGE_CACHE[i][0] == urly:\n            found = True\n            return IMAGE_CACHE[i][1]\n    if not found:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "coin_handling",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def coin_handling(result):\n    global DATA\n    num = result.group(1)\n    coin_add = int(num)\n    if coin_add <= 100 and coin_add >= 1:\n        DATA[\"coins\"] = coin_add + DATA[\"coins\"]\n        update_data_json()\n        if num == \"1\":\n            return adding_one_coin % (coin_add + 0, DATA[\"coins\"])\n        return adding_coins % (coin_add + 0, DATA[\"coins\"])",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "get_id",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def get_id(result):\n    String = result.group(4)\n    id = return_id(String)\n    if id is False:\n        return not_seen % String\n    else:\n        if type(id) is not dict:\n            return id_response % (String, id)\n        match len(id):\n            case 0: return not_seen % String",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "get_jokes",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def get_jokes():\n    r = requests.get(jokes_url)\n    if r.status_code == 200:\n        joke = json.loads(r.text)[\"attachments\"][0][\"text\"]\n        return joke\n    return \"Error: \" + str(r.status_code)\ndef get_quote(console):\n    r = requests.get('https://api.quotable.io/random')\n    content = str(r.json()['content'])\n    author = \"~ by \" + str(r.json()['author'])",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "get_quote",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def get_quote(console):\n    r = requests.get('https://api.quotable.io/random')\n    content = str(r.json()['content'])\n    author = \"~ by \" + str(r.json()['author'])\n    if not console:\n        send_message(content)\n        sleep(0.2)\n        send_message(author)\n    else:\n        print(\"Console:- %s\" % content)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "singing",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def singing():\n    send_message(\"*Sings ~*\")\n    sleep(2)\n    send_message(\"la la lalla ~*\")\ndef check_singing():\n    l = len(TIMEOUT_CONTROL)\n    if l <= 4 and random.randint(0, 100000) % 93870 == 0:\n        Thread(target=singing).start()\ndef get_details(result):\n    id = int(result.group(2))",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "check_singing",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def check_singing():\n    l = len(TIMEOUT_CONTROL)\n    if l <= 4 and random.randint(0, 100000) % 93870 == 0:\n        Thread(target=singing).start()\ndef get_details(result):\n    id = int(result.group(2))\n    r = requests.get(profile_url % id, cookies=cookies)\n    match r.status_code:\n        case 200:\n            r = json.loads(r.text)[\"user\"]",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "get_details",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def get_details(result):\n    id = int(result.group(2))\n    r = requests.get(profile_url % id, cookies=cookies)\n    match r.status_code:\n        case 200:\n            r = json.loads(r.text)[\"user\"]\n            name = r[\"display_name\"]\n            karma = r[\"karma\"]\n            username = r[\"username\"]\n            gender = r[\"gender\"]",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "send_feelings",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def send_feelings(index, id, result, console):\n    global DATA\n    name = result.group(1)\n    response = \"\"\n    match index:\n        case 1: response = sending_love % name\n        case 2: response = sending_pats % name\n        case 3: response = sending_hugs % result.group(4)\n        case 4: response = sending_bonks % name\n        case 5 if id in DATA[\"admin\"] or console: response = get_id(result)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "coins_feelings",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def coins_feelings(message, id, console):\n    for reg_m in coinsandfeelings:\n        result = reg_m.match(message)\n        if result:\n            index = coinsandfeelings.index(reg_m)\n            if index == 0:\n                response = coin_handling(result)\n            else:\n                response = send_feelings(index, id, result, True)\n            if response and response != \"\":",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "console_input",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def console_input():\n    while True:\n        try:\n            text = input()\n            name = \"Console Admin\"\n            result = consoleinput.match(text)\n            if result:\n                content = result.group(1)\n                send_message(content)\n            else:",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "matching",
        "kind": 2,
        "importPath": ".blue.py@neomake_126526_3",
        "description": ".blue.py@neomake_126526_3",
        "peekOfCode": "def matching(name, dictname, message, console, dict):\n    keys = list(dictname.keys())\n    def consolecheck(content):\n        if console:\n            print(\"Console:- %s\" % content)\n        else:\n            send_message(content)\n    for i in range(len(keys)):\n        re_m = keys[i]\n        result = re_m.match(message)",
        "detail": ".blue.py@neomake_126526_3",
        "documentation": {}
    },
    {
        "label": "send_message",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def send_message(content):\n    jsonmessage = {\n        \"command\": \"message\",\n        \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":null}\",\n        \"data\": \"{\\\"message\\\":\\\"\" + fix_message(content) + \"\\\",\\\"id\\\":null,\\\"action\\\":\\\"speak\\\"}\"}\n    jsonmessage_alt = {\"command\": \"message\", \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":\\\"blueyblue\\\"}\",\n                       \"data\": \"{\\\"message\\\":\\\"\"+fix_message(content) + \"\\\",\\\"id\\\":\\\"blueyblue\\\",\\\"action\\\":\\\"speak\\\"}\"}\n    if ALT_UNIVERSE_TOGGLE:\n        ws.send(json.dumps(jsonmessage_alt))\n    else:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "return_id",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def return_id(string):\n    try:\n        refresh_seen()\n        if string.isnumeric():\n            inputid = string\n            if inputid in SEEN_DATA:\n                return inputid\n            return False\n        string = string.replace(\"#\", \"\")\n        count = 0",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "remove_blue",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def remove_blue():\n    global MAIN_DICT, IDLE_DICT, TIMEOUT_CONTROL\n    if 21550262 in MAIN_DICT:\n        del MAIN_DICT[21550262]\n    if 21550262 in IDLE_DICT:\n        del IDLE_DICT[21550262]\n    if 21550262 in TIMEOUT_CONTROL:\n        del TIMEOUT_CONTROL[21550262]\ndef idle_function():\n    idle_check = list(TIMEOUT_CONTROL.values())",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "idle_function",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def idle_function():\n    idle_check = list(TIMEOUT_CONTROL.values())\n    for i, time_stamp in enumerate(idle_check):\n        if perf_counter() - time_stamp >= 240:\n            val = list(TIMEOUT_CONTROL.keys())[i]\n            if val in MAIN_DICT:\n                IDLE_DICT[val] = MAIN_DICT[val]\n                del MAIN_DICT[val]\n        elif perf_counter() - time_stamp < 240:\n            val = list(TIMEOUT_CONTROL.keys())[i]",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "clocking",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def clocking():\n    global RESET_CLOCK, GREET_TIMEOUT\n    if RESET_CLOCK == 500:\n        GREET_TIMEOUT, RESET_CLOCK = {}, 0\ndef refreshdata():\n    global DATA\n    with open('data.json', 'r') as file:\n        DATA = json.loads(file.read())\ndef update_data_json():\n    global DATA",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "refreshdata",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def refreshdata():\n    global DATA\n    with open('data.json', 'r') as file:\n        DATA = json.loads(file.read())\ndef update_data_json():\n    global DATA\n    with open('data.json', 'w') as file:\n        json.dump(DATA, file)\n    refreshdata()\ndef refreshmessages():",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "update_data_json",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def update_data_json():\n    global DATA\n    with open('data.json', 'w') as file:\n        json.dump(DATA, file)\n    refreshdata()\ndef refreshmessages():\n    global SAVED_MESSAGES\n    with open('messages.json', 'r') as file:\n        SAVED_MESSAGES = json.loads(file.read())\ndef update_messages_json():",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "refreshmessages",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def refreshmessages():\n    global SAVED_MESSAGES\n    with open('messages.json', 'r') as file:\n        SAVED_MESSAGES = json.loads(file.read())\ndef update_messages_json():\n    global SAVED_MESSAGES\n    with open('messages.json', 'w') as file:\n        json.dump(SAVED_MESSAGES, file)\n    refreshmessages()\ndef refresh_seen():",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "update_messages_json",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def update_messages_json():\n    global SAVED_MESSAGES\n    with open('messages.json', 'w') as file:\n        json.dump(SAVED_MESSAGES, file)\n    refreshmessages()\ndef refresh_seen():\n    global SEEN_DATA\n    with open('seen.json', 'r') as file:\n        SEEN_DATA = json.load(file)\ndef update_seen_json():",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "refresh_seen",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def refresh_seen():\n    global SEEN_DATA\n    with open('seen.json', 'r') as file:\n        SEEN_DATA = json.load(file)\ndef update_seen_json():\n    global SEEN_DATA\n    with open('seen.json', 'w') as file:\n        json.dump(SEEN_DATA, file)\ndef update_seen(inputname, inputid, inputusername):\n    time_stamp = strftime(\"%Y-%m-%d %H:%M:%S\", gmtime())",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "update_seen_json",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def update_seen_json():\n    global SEEN_DATA\n    with open('seen.json', 'w') as file:\n        json.dump(SEEN_DATA, file)\ndef update_seen(inputname, inputid, inputusername):\n    time_stamp = strftime(\"%Y-%m-%d %H:%M:%S\", gmtime())\n    inputid = str(inputid)\n    if inputid not in SEEN_DATA:\n        SEEN_DATA[inputid] = {}\n    SEEN_DATA[inputid][\"name\"] = inputname",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "update_seen",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def update_seen(inputname, inputid, inputusername):\n    time_stamp = strftime(\"%Y-%m-%d %H:%M:%S\", gmtime())\n    inputid = str(inputid)\n    if inputid not in SEEN_DATA:\n        SEEN_DATA[inputid] = {}\n    SEEN_DATA[inputid][\"name\"] = inputname\n    SEEN_DATA[inputid][\"username\"] = inputusername\n    SEEN_DATA[inputid][\"channel_name\"] = {\"WFAF\": time_stamp}\n    update_seen_json()\ndef update_image_cache():",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "update_image_cache",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def update_image_cache():\n    global IMAGE_CACHE\n    with open('image_cache.json', 'w') as file:\n        json.dump(IMAGE_CACHE, file)\ndef refresh_image_cache():\n    global IMAGE_CACHE\n    with open('image_cache.json', 'r') as file:\n        IMAGE_CACHE = json.loads(file.read())\ndef saved_message_handler(inputid, inputname):\n    if inputid in SAVED_MESSAGES:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "refresh_image_cache",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def refresh_image_cache():\n    global IMAGE_CACHE\n    with open('image_cache.json', 'r') as file:\n        IMAGE_CACHE = json.loads(file.read())\ndef saved_message_handler(inputid, inputname):\n    if inputid in SAVED_MESSAGES:\n        if len(SAVED_MESSAGES[inputid]) == 1:\n            output_message = \"Hello %s I have a message for you: %s\" % (\n                inputname, SAVED_MESSAGES[inputid][0])\n            sleep(0.9)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "saved_message_handler",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def saved_message_handler(inputid, inputname):\n    if inputid in SAVED_MESSAGES:\n        if len(SAVED_MESSAGES[inputid]) == 1:\n            output_message = \"Hello %s I have a message for you: %s\" % (\n                inputname, SAVED_MESSAGES[inputid][0])\n            sleep(0.9)\n            send_message(output_message)\n            del SAVED_MESSAGES[inputid]\n        else:\n            sleep(1)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "greet_text",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def greet_text(count, inputname):\n    if not SHORTEN_GREET_TOGGLE:\n        match count:\n            case 1: return Greet_1 % inputname\n            case 2: return Greet_2 % inputname\n            case 3: return Greet_general % inputname\n    else:\n        match count:\n            case 1: return Greet_1_short % inputname\n            case 2: return Greet_2_short % inputname",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "send_greet",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def send_greet(inputname, inputusername):\n    if len(inputname) > 3:\n        inputusername = \"\"\n    else:\n        inputusername = \" (#%s)\" % inputusername\n    if inputname in GREET_TIMEOUT:\n        match GREET_TIMEOUT[inputname]:\n            case \"1\":\n                send_message(greet_text(1, \"%s%s\" %\n                             (inputname, inputusername)))",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "greet",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def greet(action, inputresult, greet_var, userdat):\n    global DATA, SAVED_MESSAGES, MAIN_DICT, IDLE_DICT, TIMEOUT_CONTROL, STATS_LIST\n    if (action in userdat) and (\"user\" in userdat) and \"display_name\" in userdat[\"user\"]:\n        inputname = fix_name(userdat[\"user\"][\"display_name\"])\n        username = userdat[\"user\"][\"username\"]\n        inputid = userdat[\"user\"][\"id\"]\n        if inputresult == \"add\":\n            MAIN_DICT[inputid] = inputname\n            STATS_LIST[inputid] = inputname\n            TIMEOUT_CONTROL[inputid] = perf_counter()",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "dis_en_greets",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def dis_en_greets(inputid):\n    global GREET_STATUS\n    if inputid == \"16008266\" and GREET_STATUS:\n        send_message(disabling_greet)\n        GREET_STATUS = False\n    elif inputid == \"20909261\" and not GREET_STATUS:\n        send_message(re_enabling_greet)\n        GREET_STATUS = True\ndef check_greeters(inputmessage, inputid):\n    global GREET_STATUS, DATA",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "check_greeters",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def check_greeters(inputmessage, inputid):\n    global GREET_STATUS, DATA\n    found = False\n    if inputid in DATA[\"greeter_fallback\"]:\n        for reg_m in greet_check:\n            res = reg_m.match(inputmessage)\n            if inputmessage in DATA[\"custom_greet\"].values() or res or inputmessage == blue_greet:\n                dis_en_greets(inputid)\n                found = True\n                break",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "saving_messages",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def saving_messages(inputname, inputresult):\n    global SAVED_MESSAGES\n    inpstring = inputresult.group(1).rstrip()\n    if inpstring.isnumeric():\n        inputid = inpstring\n    else:\n        inputid = return_id(inpstring)\n    if inputid:\n        if isinstance(inputid, dict):\n            if inputid in SAVED_MESSAGES:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "downvote",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def downvote(cookie, inputid):\n    requests.get(karma_url % inputid, cookies=cookie)\ndef ban_log(banned_id, admin_id):\n    if admin_id != 0:\n        resp = requests.get(profile_url % int(admin_id), cookies=cookies)\n        admin_name = json.loads(resp.text)[\"user\"][\"display_name\"]\n    else:\n        admin_name = \"Console Admin\"\n    log = \"Banned %s by %s \\n\" % (banned_id, admin_name)\n    with open(\"log.txt\", \"a\") as file:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "ban_log",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def ban_log(banned_id, admin_id):\n    if admin_id != 0:\n        resp = requests.get(profile_url % int(admin_id), cookies=cookies)\n        admin_name = json.loads(resp.text)[\"user\"][\"display_name\"]\n    else:\n        admin_name = \"Console Admin\"\n    log = \"Banned %s by %s \\n\" % (banned_id, admin_name)\n    with open(\"log.txt\", \"a\") as file:\n        file.write(log)\ndef thread(inputid):",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "thread",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def thread(inputid):\n    banned.add(id)\n    for i in cookiejar:\n        cookie = {'_prototype_app_session': i}\n        Thread(target=downvote, args=(cookie, inputid)).start()\ndef mute_func(inputresult, index):\n    global DATA\n    inputid = inputresult.group(1)\n    match index:\n        case 11:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "mute_func",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def mute_func(inputresult, index):\n    global DATA\n    inputid = inputresult.group(1)\n    match index:\n        case 11:\n            if inputid in DATA[\"mutelist\"]:\n                return already_ignoring\n            DATA[\"mutelist\"].append(inputid)\n            update_data_json()\n            return start_ignoring % inputid",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "stalker",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def stalker(inputid, time_now):\n    global STALKING_LOG\n    filename = str(inputid) + \".txt\"\n    git_prefix = \"stalker-logs/\"\n    file = git_prefix + filename\n    myfile = Path(file)\n    if not myfile.is_file():\n        file = open(filename, \"w\")\n        file.close()\n    while STALKING_LOG[inputid][1]:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "respond_uptime",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def respond_uptime():\n    sr = str(datetime.now() - STARTTIME).split(\":\")\n    if sr[0] == \"0\":\n        match int(sr[1])+0:\n            case 0: return just_joined\n            case 1: return here_for_one_min\n            case _: return here_for_x_mins % str(int(sr[1])+0)\n    return here_for_hours_and_mins % (str(sr[0]), str(int(sr[1]) + 0))\ndef send_stats():\n    sr = str(datetime.now() - STARTTIME).split(\":\")",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "send_stats",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def send_stats():\n    sr = str(datetime.now() - STARTTIME).split(\":\")\n    r = strftime(\"%a, %d %b %Y %I:%M:%S %p %Z\", gmtime())\n    return stats_response % (len(stats), len(STATS_LIST), sr[0], sr[1], str(r))\ndef start_stalking(inputid):\n    if inputid not in STALKING_LOG:\n        t = Thread(target=stalker, args=(inputid, timer()))\n        STALKING_LOG[inputid] = [t, True]\n        t.start()\n        return waking_stalking",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "start_stalking",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def start_stalking(inputid):\n    if inputid not in STALKING_LOG:\n        t = Thread(target=stalker, args=(inputid, timer()))\n        STALKING_LOG[inputid] = [t, True]\n        t.start()\n        return waking_stalking\n    return already_stalking % inputid\ndef stop_stalking(inputid):\n    global STALKING_LOG\n    if inputid in STALKING_LOG:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "stop_stalking",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def stop_stalking(inputid):\n    global STALKING_LOG\n    if inputid in STALKING_LOG:\n        STALKING_LOG[inputid][1] = False\n        return stopping_stalking % inputid\n    return already_not_stalking % inputid\ndef mod_demod(inputresult):\n    global DATA\n    mod_id = inputresult.group(2)\n    if inputresult.group(1) == \"mod\":",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "mod_demod",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def mod_demod(inputresult):\n    global DATA\n    mod_id = inputresult.group(2)\n    if inputresult.group(1) == \"mod\":\n        if mod_id in DATA[\"mod\"] or mod_id in DATA[\"admin\"]:\n            return already_mod % mod_id\n        DATA[\"mod\"].append(mod_id)\n        update_data_json()\n        return mod_response % mod_id\n    if inputresult.group(1) == \"demod\":",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "clear_lists",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def clear_lists():\n    global MAIN_DICT, IDLE_DICT, TIMEOUT_CONTROL\n    TIMEOUT_CONTROL.clear()\n    MAIN_DICT.clear()\n    IDLE_DICT.clear()\n    return clear_list\ndef set_greet(inputresult):\n    inputid = inputresult.group(1)\n    greettext = inputresult.group(3)\n    if inputid not in DATA[\"custom_greet\"]:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "set_greet",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def set_greet(inputresult):\n    inputid = inputresult.group(1)\n    greettext = inputresult.group(3)\n    if inputid not in DATA[\"custom_greet\"]:\n        DATA[\"custom_greet\"][inputid] = greettext\n        update_data_json()\n        return greet_set % (inputid, greettext)\n    DATA[\"custom_greet\"][inputid] = greettext\n    update_data_json()\n    return greet_updated % (inputid, greettext)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "get_greet",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def get_greet(inputresult):\n    inputid = inputresult.group(1)\n    if inputid in DATA[\"custom_greet\"]:\n        return greet_response % (inputid, DATA[\"custom_greet\"][inputid])\n    return greet_not_set % inputid\ndef remove_greet(inputresult):\n    inputid = inputresult.group(1)\n    if inputid in DATA[\"custom_greet\"]:\n        del DATA[\"custom_greet\"][inputid]\n        update_data_json()",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "remove_greet",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def remove_greet(inputresult):\n    inputid = inputresult.group(1)\n    if inputid in DATA[\"custom_greet\"]:\n        del DATA[\"custom_greet\"][inputid]\n        update_data_json()\n        return greet_removed % inputid\n    return greet_not_set % inputid\ndef get_landmine():\n    landmine_list = DATA[\"landmine_words\"]\n    return fix_message(landmine_list)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "get_landmine",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def get_landmine():\n    landmine_list = DATA[\"landmine_words\"]\n    return fix_message(landmine_list)\ndef add_landmine(inputresult):\n    word = inputresult.group(1)\n    if word not in DATA[\"landmine_words\"]:\n        DATA[\"landmine_words\"].append(word)\n        update_data_json()\n        return landmine_added % word\n    return landmine_already_added % word",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "add_landmine",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def add_landmine(inputresult):\n    word = inputresult.group(1)\n    if word not in DATA[\"landmine_words\"]:\n        DATA[\"landmine_words\"].append(word)\n        update_data_json()\n        return landmine_added % word\n    return landmine_already_added % word\ndef remove_landmine(inputresult):\n    word = inputresult.group(1)\n    if word in DATA[\"landmine_words\"]:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "remove_landmine",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def remove_landmine(inputresult):\n    word = inputresult.group(1)\n    if word in DATA[\"landmine_words\"]:\n        DATA[\"landmine_words\"].remove(word)\n        update_data_json()\n        return landmine_removed % word\n    return landmine_not_present % word\ndef toggle_alt_universe():\n    global ALT_UNIVERSE_TOGGLE\n    if ALT_UNIVERSE_TOGGLE:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "toggle_alt_universe",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def toggle_alt_universe():\n    global ALT_UNIVERSE_TOGGLE\n    if ALT_UNIVERSE_TOGGLE:\n        ALT_UNIVERSE_TOGGLE = False\n    else:\n        ALT_UNIVERSE_TOGGLE = True\ndef toggle_spam_check():\n    global SPAM_CHECK_TOGGLE\n    if SPAM_CHECK_TOGGLE:\n        SPAM_CHECK_TOGGLE = False",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "toggle_spam_check",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def toggle_spam_check():\n    global SPAM_CHECK_TOGGLE\n    if SPAM_CHECK_TOGGLE:\n        SPAM_CHECK_TOGGLE = False\n        return spam_check_off\n    SPAM_CHECK_TOGGLE = True\n    return spam_check_on\ndef get_spam_check_status():\n    if SPAM_CHECK_TOGGLE:\n        return spam_check_on",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "get_spam_check_status",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def get_spam_check_status():\n    if SPAM_CHECK_TOGGLE:\n        return spam_check_on\n    return spam_check_off\ndef make_knight(inputresult):\n    inputname = inputresult.group(1)\n    if inputname.isnumeric():\n        inputid = inputname\n        if inputid not in DATA[\"knight\"]:\n            DATA[\"knight\"].append(inputid)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "make_knight",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def make_knight(inputresult):\n    inputname = inputresult.group(1)\n    if inputname.isnumeric():\n        inputid = inputname\n        if inputid not in DATA[\"knight\"]:\n            DATA[\"knight\"].append(inputid)\n            update_data_json()\n            return knight_added % inputname\n        return knight_already_added % inputname\n    inputid = return_id(inputname)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "remove_knight",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def remove_knight(inputresult):\n    inputname = inputresult.group(1)\n    if inputname.isnumeric():\n        inputid = inputname\n        if inputid in DATA[\"knight\"]:\n            DATA[\"knight\"].remove(inputid)\n            update_data_json()\n            return knight_removed % inputname\n        return knight_not_added % inputname\n    inputid = return_id(inputname)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "toggle_shortened_greet",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def toggle_shortened_greet():\n    global SHORTEN_GREET_TOGGLE\n    if SHORTEN_GREET_TOGGLE:\n        SHORTEN_GREET_TOGGLE = False\n        return shortened_greet_off\n    SHORTEN_GREET_TOGGLE = True\n    return shortened_greet_on\ndef save_nickname(inputresult):\n    inputname = inputresult.group(1)\n    nickname = inputresult.group(2)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "save_nickname",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def save_nickname(inputresult):\n    inputname = inputresult.group(1)\n    nickname = inputresult.group(2)\n    if inputname.isnumeric():\n        inputid = inputname\n        if inputid not in DATA[\"nickname\"]:\n            DATA[\"nickname\"][inputid] = [nickname]\n            update_data_json()\n            return nickname_added % (nickname, inputname)\n        DATA[\"nickname\"][inputid].append(nickname)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "toggle_greets",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def toggle_greets(inputresult):\n    global GREET_STATUS\n    action = inputresult.group(1)\n    if action == \"enable\":\n        GREET_STATUS = True\n        return done\n    if action == \"disable\":\n        if GREET_STATUS:\n            GREET_STATUS = False\n            return done",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "hide",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def hide(inputid):\n    global TIMEOUT_CONTROL, MAIN_DICT, IDLE_DICT\n    inputid = int(inputid)\n    del TIMEOUT_CONTROL[int(inputid)]\n    if inputid in MAIN_DICT:\n        del MAIN_DICT[inputid]\n    if inputid in IDLE_DICT:\n        del IDLE_DICT[inputid]\n    return aye_aye\ndef banfunc(inputresult):",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "banfunc",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def banfunc(inputresult):\n    id_ban = inputresult.group(1)\n    thread(id_ban)\n    Thread(target=ban_log, args=(id_ban, id,)).start()\n    return banning_response % id_ban\ndef returnstalk():\n    if STALKING_LOG:\n        return stalking_following % fix_message(str(STALKING_LOG.keys()))\n    return stalking_no_one\ndef admin_function_init(i, inputid, isadmin, inputresult):",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "returnstalk",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def returnstalk():\n    if STALKING_LOG:\n        return stalking_following % fix_message(str(STALKING_LOG.keys()))\n    return stalking_no_one\ndef admin_function_init(i, inputid, isadmin, inputresult):\n    global GREET_STATUS, RUNNING, name, STARTTIME, aichatstate, GREET_TIMEOUT, DATA\n    match i:\n        case 0: return_response = toggle_greets(inputresult)\n        case 1: return_response, RUNNING = leaving, False\n        case 2 if isadmin: return_response = clear_lists()",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "admin_function_init",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def admin_function_init(i, inputid, isadmin, inputresult):\n    global GREET_STATUS, RUNNING, name, STARTTIME, aichatstate, GREET_TIMEOUT, DATA\n    match i:\n        case 0: return_response = toggle_greets(inputresult)\n        case 1: return_response, RUNNING = leaving, False\n        case 2 if isadmin: return_response = clear_lists()\n        case 3: return_response = respond_uptime()\n        case 4: GREET_TIMEOUT, return_response = {}, done\n        case 5: return_response = send_stats()\n        case 6: return_response = \"Mutelist is: %s\" % fix_message(str(DATA[\"mutelist\"]))",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "admin_func",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def admin_func(inputmessage, inputid, isadmin):\n    for i in range(len(admin_commands)):\n        res = admin_commands[i].match(inputmessage)\n        if res:\n            admin_function_init(i, inputid, isadmin, res)\n            break\ndef landmine_checker(inputmessage, inputid):\n    for word in DATA[\"landmine_words\"]:\n        regex1 = re.compile(r\"%s\" % word, re.I)\n        if regex1.search(inputmessage):",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "landmine_checker",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def landmine_checker(inputmessage, inputid):\n    for word in DATA[\"landmine_words\"]:\n        regex1 = re.compile(r\"%s\" % word, re.I)\n        if regex1.search(inputmessage):\n            thread(inputid)\n            break\ndef spam_controlling(inputid):\n    global SPAM_TIMEOUT\n    if inputid in SPAM_TIMEOUT:\n        SPAM_TIMEOUT[inputid].append(perf_counter())",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "spam_controlling",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def spam_controlling(inputid):\n    global SPAM_TIMEOUT\n    if inputid in SPAM_TIMEOUT:\n        SPAM_TIMEOUT[inputid].append(perf_counter())\n    else:\n        SPAM_TIMEOUT[inputid] = [perf_counter()]\ndef spam_checker():\n    for eyedee, spam_keys in SPAM_TIMEOUT.items():\n        if eyedee not in banned:\n            if len(spam_keys) >= 3 and spam_keys[-1] - spam_keys[-3] < 1.3:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "spam_checker",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def spam_checker():\n    for eyedee, spam_keys in SPAM_TIMEOUT.items():\n        if eyedee not in banned:\n            if len(spam_keys) >= 3 and spam_keys[-1] - spam_keys[-3] < 1.3:\n                thread(eyedee)\n                return\n            if len(spam_keys) >= 5 and spam_keys[-1] - spam_keys[-5] < 3:\n                thread(eyedee)\n                return\ndef image_upload(query, urly):",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "image_upload",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def image_upload(query, urly):\n    global CLIENT\n    found = False\n    if query in IMAGE_CACHE:\n        return IMAGE_CACHE[query][1]\n    for i in IMAGE_CACHE:\n        if IMAGE_CACHE[i][0] == urly:\n            found = True\n            return IMAGE_CACHE[i][1]\n    if not found:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "get_image_link",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def get_image_link(query):\n    url = response().urls(query, 6)\n    try:\n        return image_upload(query, url[-1])\n    except ImgurClientError:\n        send_message(\"Sorry I couldn't find %s\" % query)\n    except ImgurClientRateLimitError:\n        send_message(\n            \"Sorry the rate limit of 50 pics per hour has been exceeded, please wait for a couple of mins before retrying\")\ndef send_pic(query):",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "send_pic",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def send_pic(query):\n    send_message(get_image_link(query))\ndef get_meme():\n    r = requests.get(\"https://meme-api.herokuapp.com/gimme\")\n    r = json.loads(r.text)\n    link = r[\"url\"]\n    image = CLIENT.upload_from_url(link)\n    link = image[\"link\"].replace(\"https://\", \"\")\n    formattedlink = \"Image: \" + link\n    return formattedlink",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "get_meme",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def get_meme():\n    r = requests.get(\"https://meme-api.herokuapp.com/gimme\")\n    r = json.loads(r.text)\n    link = r[\"url\"]\n    image = CLIENT.upload_from_url(link)\n    link = image[\"link\"].replace(\"https://\", \"\")\n    formattedlink = \"Image: \" + link\n    return formattedlink\ndef get_meme_link():\n    try:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "get_meme_link",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def get_meme_link():\n    try:\n        send_message(get_meme())\n    except ImgurClientError:\n        send_message(\"Sorry I couldn't find a meme\")\n    except ImgurClientRateLimitError:\n        send_message(\n            \"Sorry the rate limit of 50 pics per hour has been exceeded, please wait for a couple of mins before retrying\")\ndef send_seen(inputid):\n    refresh_seen()",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "send_seen",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def send_seen(inputid):\n    refresh_seen()\n    current_time = strftime(\"%a, %d %b %Y %I:%M:%S %p %Z\", gmtime())\n    inputname = SEEN_DATA[inputid][\"name\"]\n    username = SEEN_DATA[inputid][\"username\"]\n    lastseen_list = {}\n    for key in SEEN_DATA[inputid][\"channel_name\"]:\n        inputdate = SEEN_DATA[inputid][\"channel_name\"][key]\n        lastseen_list[inputdate] = key\n    inputdate = max(lastseen_list)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "log_chats",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def log_chats(inputmessage, user_id, inpuser):\n    inputdate = datetime.today().strftime('%d-%m-%Y')\n    filename = \"wfaf-logs/log (%s).txt\" % inputdate\n    myfile = Path(filename)\n    if myfile.is_file():\n        inpname = fix_name(inpuser[\"display_name\"])\n        log = fix_message(message_log_text % (inpname, user_id, inputmessage)) + \"\\n\"\n        with open(filename, \"a\") as file:\n            file.write(log)\n    else:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "list_removal",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def list_removal(inputid):\n    global MAIN_DICT, TIMEOUT_CONTROL, IDLE_DICT\n    if inputid in TIMEOUT_CONTROL:\n        del TIMEOUT_CONTROL[inputid]\n    if inputid in MAIN_DICT:\n        del MAIN_DICT[inputid]\n    if inputid in IDLE_DICT:\n        del IDLE_DICT[inputid]\ndef whos_here_appending(inputid):\n    global WHOS_HERE_RESPONSE",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "whos_here_appending",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def whos_here_appending(inputid):\n    global WHOS_HERE_RESPONSE\n    try:\n        r = requests.get(profile_url % inputid, cookies=cookies, timeout=1)\n        r = json.loads(r.text)\n        if len(r[\"user\"][\"display_name\"]) > 3:\n            WHOS_HERE_RESPONSE.append(r[\"user\"][\"display_name\"])\n        else:\n            WHOS_HERE_RESPONSE.append(\"%s (#%s)\" % (\n                r[\"user\"][\"display_name\"], r[\"user\"][\"username\"]))",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "reply_whos_here",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def reply_whos_here():\n    global WHOS_HERE_RESPONSE\n    for i in MAIN_DICT:\n        threads.append(Thread(target=whos_here_appending, args=(i,)))\n    for i in threads:\n        i.start()\n    for i in threads:\n        i.join()\n    threads.clear()\n    idle_len = len(IDLE_DICT)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "reply_whos_idle",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def reply_whos_idle():\n    global WHOS_HERE_RESPONSE\n    for i in IDLE_DICT:\n        threads.append(Thread(target=whos_here_appending, args=(i,)))\n    for i in threads:\n        i.start()\n    for i in threads:\n        i.join()\n    threads.clear()\n    whos_idle_response = \",\".join(WHOS_HERE_RESPONSE)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "get_seen",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def get_seen(inputresult):\n    try:\n        refresh_seen()\n        string = inputresult.group(1)\n        if string.isnumeric():\n            inputid = string\n            if inputid in SEEN_DATA:\n                return send_seen(inputid)\n            return fix_message(\"I dont remember seeing user with ID %s\" % str(inputid))\n        string = string.replace(\"#\", \"\")",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "coin_handling",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def coin_handling(inputresult):\n    global DATA\n    num = inputresult.group(1)\n    coin_add = int(num)\n    if 1 <= coin_add <= 100 :\n        DATA[\"coins\"] = coin_add + DATA[\"coins\"]\n        update_data_json()\n        if num == \"1\":\n            return adding_one_coin % (coin_add + 0, DATA[\"coins\"])\n        return adding_coins % (coin_add + 0, DATA[\"coins\"])",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "getid",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def getid(inputresult):\n    input_str = inputresult.group(4)\n    inputid = return_id(input_str)\n    if inputid is False:\n        return not_seen % input_str\n    if isinstance(inputid, dict):\n        return id_response % (input_str, inputid)\n    match len(inputid):\n        case 0: return not_seen % input_str\n        case 1: return id_response % (input_str, list(inputid.keys())[0])",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "get_jokes",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def get_jokes():\n    resp = requests.get(jokes_url)\n    if resp.status_code == 200:\n        joke = json.loads(resp.text)[\"attachments\"][0][\"text\"]\n        return joke\n    return \"Error: \" + str(resp.status_code)\ndef get_quote(console):\n    resp = requests.get('https://api.quotable.io/random')\n    content = str(resp.json()['content'])\n    author = \"~ by \" + str(resp.json()['author'])",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "get_quote",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def get_quote(console):\n    resp = requests.get('https://api.quotable.io/random')\n    content = str(resp.json()['content'])\n    author = \"~ by \" + str(resp.json()['author'])\n    if not console:\n        send_message(content)\n        sleep(0.2)\n        send_message(author)\n    else:\n        print(\"Console:- %s\" % content)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "singing",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def singing():\n    send_message(\"*Sings ~*\")\n    sleep(2)\n    send_message(\"la la lalla ~*\")\ndef check_singing():\n    member_len = len(TIMEOUT_CONTROL)\n    if member_len <= 4 and random.randint(0, 100000) % 93870 == 0:\n        Thread(target=singing).start()\ndef get_details(inputresult):\n    inputid = int(inputresult.group(2))",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "check_singing",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def check_singing():\n    member_len = len(TIMEOUT_CONTROL)\n    if member_len <= 4 and random.randint(0, 100000) % 93870 == 0:\n        Thread(target=singing).start()\ndef get_details(inputresult):\n    inputid = int(inputresult.group(2))\n    resp = requests.get(profile_url % inputid, cookies=cookies)\n    match resp.status_code:\n        case 200:\n            resp = json.loads(resp.text)[\"user\"]",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "get_details",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def get_details(inputresult):\n    inputid = int(inputresult.group(2))\n    resp = requests.get(profile_url % inputid, cookies=cookies)\n    match resp.status_code:\n        case 200:\n            resp = json.loads(resp.text)[\"user\"]\n            input_name = resp[\"display_name\"]\n            karma = resp[\"karma\"]\n            username = resp[\"username\"]\n            gender = resp[\"gender\"]",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "send_feelings",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def send_feelings(index, inputid, inputresult, console):\n    global DATA\n    input_name = inputresult.group(1)\n    resp = \"\"\n    match index:\n        case 1: resp = sending_love % input_name\n        case 2: resp = sending_pats % input_name\n        case 3: resp = sending_hugs % inputresult.group(4)\n        case 4: resp = sending_bonks % input_name\n        case 5 if inputid in DATA[\"admin\"] or console: resp = getid(inputresult)",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "coins_feelings",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def coins_feelings(input_message, inputid, console):\n    for reg_m in coinsandfeelings:\n        inputresult = reg_m.match(input_message)\n        if inputresult:\n            index = coinsandfeelings.index(reg_m)\n            if index == 0:\n                resp = coin_handling(inputresult)\n            else:\n                resp = send_feelings(index, inputid, inputresult, True)\n            if resp and resp != \"\":",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "console_input",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def console_input():\n    while True:\n        try:\n            text = input()\n            inputname = \"Console Admin\"\n            inputresult = consoleinput.match(text)\n            if inputresult:\n                content = result.group(1)\n                send_message(content)\n            else:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "matching",
        "kind": 2,
        "importPath": "blue",
        "description": "blue",
        "peekOfCode": "def matching(inputname, dictname, input_text, console, dict_bool):\n    keys = list(dictname.keys())\n    def consolecheck(content):\n        if console:\n            print(\"Console:- %s\" % content)\n        else:\n            send_message(content)\n    for i, re_m in enumerate(keys):\n        inputres = re_m.match(input_text)\n        if inputres:",
        "detail": "blue",
        "documentation": {}
    },
    {
        "label": "cl",
        "kind": 2,
        "importPath": "cl",
        "description": "cl",
        "peekOfCode": "def cl():\n    def connect(n):\n        connect_json= {\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":\\\"channel\"+ n +\"\\\"}\"}\n        ws.send(json.dumps(connect_json))\n    def disconnect(n):\n        connect_json= {\"command\":\"unsubscribe\",\"identifier\":\"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":\\\"channel\"+ n +\"\\\"}\"}\n        ws.send(json.dumps(connect_json))\n    list_id =  [\"48\",\"56\",\"33\",\"39\",\"38\",\"40\",\"34\",\"51\",\"58\",\"57\",\"41\",\"54\",\"37\",\"53\",\"43\",\"42\",\"49\",\"55\",\"59\",\"44\",\"46\",\"36\",\"60\",\"52\",\"32\",\"50\",\"47\",\"35\",\"45\"]\n    cookies = \"user_id=MjExNzQ2MDg%3D--a4763efe1b8631066fdee681d54eec7ba278ca9e\"\n    websocket.enableTrace(False)",
        "detail": "cl",
        "documentation": {}
    },
    {
        "label": "thread_function",
        "kind": 2,
        "importPath": "gc_logging",
        "description": "gc_logging",
        "peekOfCode": "def thread_function():\n    from cl import cl\n    global seen_data\n    ws_url = \"wss://www.emeraldchat.com/cable\"\n    origin = \"https://www.emeraldchat.com\"\n    subprots = [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n    cookie = \"user_id=MjExNzQ2MDg%3D--a4763efe1b8631066fdee681d54eec7ba278ca9e\"\n    list_id =  [\"48\",\"56\",\"33\",\"39\",\"38\",\"40\",\"34\",\"51\",\"58\",\"57\",\"41\",\"54\",\"37\",\"53\",\"43\",\"42\",\"49\",\"55\",\"59\",\"44\",\"46\",\"36\",\"60\",\"52\",\"32\",\"50\",\"47\",\"35\",\"45\"]\n    channel_dict = {'48': 'ice squad ❄️', '56': 'noodle squad 🍜 ', '33': 'roleplaying', '39': 'moon squad 🌑', '38': 'sun squad ☀️', '40': 'conspiracy squad 👽', '34': 'VIP ⭐', '51': 'banana squad 🍌', '58': 'sushi squad 🍣', '57': 'pizza squad 🍕', '41': 'film squad 🍿', '54': 'dragon squad 🐉️', '37': 'pie squad 🥧', '53': 'magic squad 🔮️', '43': 'cake squad 🍰', '42': 'love squad 💘', '49': 'strawberry squad 🍓', '55': 'royal squad 👑', '59': 'bomb squad 💣', '44': 'earth squad 🌎', '46': 'water squad 💧', '36': 'brain squad 🧠', '60': 'owl squad 🦉', '52': 'cosmic squad 🌌', '32': 'general', '50': 'apple squad 🍎', '47': 'lightning squad ⚡', '35': 'air squad 🌪️', '45': 'fire squad 🔥'}\n    with open('seen.json', 'r') as f:",
        "detail": "gc_logging",
        "documentation": {}
    },
    {
        "label": "fix_message",
        "kind": 2,
        "importPath": "utils",
        "description": "utils",
        "peekOfCode": "def fix_message(message):\n    chars = ('\"[]‘')\n    for c in chars:\n        message = message.replace(c, \"\")\n    for c in forbiden_chars:\n        message = message.replace(c, \"\")\n    message = message.replace(\".\",\".​\")\n    return message\ndef fix_name(name):\n    for chars in forbiden_chars:",
        "detail": "utils",
        "documentation": {}
    },
    {
        "label": "fix_name",
        "kind": 2,
        "importPath": "utils",
        "description": "utils",
        "peekOfCode": "def fix_name(name):\n    for chars in forbiden_chars:\n        name.replace(chars, '')\n    return name\ndef restart_program():\n    \"\"\"Restarts the current program.\n    Note: this function does not return. Any cleanup action (like\n    saving data) must be done before calling this function.\"\"\"\n    execl(executable, executable, *argv)",
        "detail": "utils",
        "documentation": {}
    },
    {
        "label": "restart_program",
        "kind": 2,
        "importPath": "utils",
        "description": "utils",
        "peekOfCode": "def restart_program():\n    \"\"\"Restarts the current program.\n    Note: this function does not return. Any cleanup action (like\n    saving data) must be done before calling this function.\"\"\"\n    execl(executable, executable, *argv)",
        "detail": "utils",
        "documentation": {}
    },
    {
        "label": "main_cookie",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "main_cookie = config[\"main_cookie\"]\nclient_id = config[\"imgur_client_id\"]\nclient_secret = config[\"imgur_client_secret\"]\nresponse = simp.simple_image_download\nCLIENT = ImgurClient(client_id, client_secret)\nwith open('data.json', 'r') as f:\n    DATA = json.loads(f.read())\nwith open('messages.json', 'r') as f:\n    SAVED_MESSAGES = json.loads(f.read())\nwith open('seen.json', 'r') as f:",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "client_id",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "client_id = config[\"imgur_client_id\"]\nclient_secret = config[\"imgur_client_secret\"]\nresponse = simp.simple_image_download\nCLIENT = ImgurClient(client_id, client_secret)\nwith open('data.json', 'r') as f:\n    DATA = json.loads(f.read())\nwith open('messages.json', 'r') as f:\n    SAVED_MESSAGES = json.loads(f.read())\nwith open('seen.json', 'r') as f:\n    SEEN_DATA = json.loads(f.read())",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "client_secret",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "client_secret = config[\"imgur_client_secret\"]\nresponse = simp.simple_image_download\nCLIENT = ImgurClient(client_id, client_secret)\nwith open('data.json', 'r') as f:\n    DATA = json.loads(f.read())\nwith open('messages.json', 'r') as f:\n    SAVED_MESSAGES = json.loads(f.read())\nwith open('seen.json', 'r') as f:\n    SEEN_DATA = json.loads(f.read())\nwith open('image_cache.json', 'r') as f:",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "response",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "response = simp.simple_image_download\nCLIENT = ImgurClient(client_id, client_secret)\nwith open('data.json', 'r') as f:\n    DATA = json.loads(f.read())\nwith open('messages.json', 'r') as f:\n    SAVED_MESSAGES = json.loads(f.read())\nwith open('seen.json', 'r') as f:\n    SEEN_DATA = json.loads(f.read())\nwith open('image_cache.json', 'r') as f:\n    image_cache = json.loads(f.read())",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "CLIENT",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "CLIENT = ImgurClient(client_id, client_secret)\nwith open('data.json', 'r') as f:\n    DATA = json.loads(f.read())\nwith open('messages.json', 'r') as f:\n    SAVED_MESSAGES = json.loads(f.read())\nwith open('seen.json', 'r') as f:\n    SEEN_DATA = json.loads(f.read())\nwith open('image_cache.json', 'r') as f:\n    image_cache = json.loads(f.read())\n# main connecting request json",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "connect_json",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "connect_json = {\n  \"command\": \"subscribe\",  # Main connecting request json\n  \"identifier\": \"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":null}\"\n}\nconnect_json_blue= {\"command\":\"subscribe\",\n  \"identifier\":\"{\\\"channel\\\":\\\"RoomChannel\\\",\\\"room_id\\\":\\\"blueyblue\\\"}\"}\nthreads = [] # List of threads \nRUNNING = True  # Main while loop control variable\nGREET_STATUS = True  # Handles enabling and disabling greetings\nALT_UNIVERSE_TOGGLE = False",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "threads",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "threads = [] # List of threads \nRUNNING = True  # Main while loop control variable\nGREET_STATUS = True  # Handles enabling and disabling greetings\nALT_UNIVERSE_TOGGLE = False\nSHORTEN_GREET_TOGGLE = False # Handles enabling and disabling shortened greetings\nforbiden_chars = [\n  \"\\u202e\",\n  #\"'\",     #Forbidden chars to be removed \n # '\"',\n  #\"’\",",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "RUNNING",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "RUNNING = True  # Main while loop control variable\nGREET_STATUS = True  # Handles enabling and disabling greetings\nALT_UNIVERSE_TOGGLE = False\nSHORTEN_GREET_TOGGLE = False # Handles enabling and disabling shortened greetings\nforbiden_chars = [\n  \"\\u202e\",\n  #\"'\",     #Forbidden chars to be removed \n # '\"',\n  #\"’\",\n  \"\\u202e\",",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "GREET_STATUS",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "GREET_STATUS = True  # Handles enabling and disabling greetings\nALT_UNIVERSE_TOGGLE = False\nSHORTEN_GREET_TOGGLE = False # Handles enabling and disabling shortened greetings\nforbiden_chars = [\n  \"\\u202e\",\n  #\"'\",     #Forbidden chars to be removed \n # '\"',\n  #\"’\",\n  \"\\u202e\",\n  #\"'\",",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "ALT_UNIVERSE_TOGGLE",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "ALT_UNIVERSE_TOGGLE = False\nSHORTEN_GREET_TOGGLE = False # Handles enabling and disabling shortened greetings\nforbiden_chars = [\n  \"\\u202e\",\n  #\"'\",     #Forbidden chars to be removed \n # '\"',\n  #\"’\",\n  \"\\u202e\",\n  #\"'\",\n]",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "SHORTEN_GREET_TOGGLE",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "SHORTEN_GREET_TOGGLE = False # Handles enabling and disabling shortened greetings\nforbiden_chars = [\n  \"\\u202e\",\n  #\"'\",     #Forbidden chars to be removed \n # '\"',\n  #\"’\",\n  \"\\u202e\",\n  #\"'\",\n]\nbracs = [",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "forbiden_chars",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "forbiden_chars = [\n  \"\\u202e\",\n  #\"'\",     #Forbidden chars to be removed \n # '\"',\n  #\"’\",\n  \"\\u202e\",\n  #\"'\",\n]\nbracs = [\n  \"{\",    #Curly brackets to be removed",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "bracs",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "bracs = [\n  \"{\",    #Curly brackets to be removed\n  \"}\"\n]\nMAIN_DICT = {} # Main list dictionary \nIDLE_DICT = {} # Idle list dictionary\nSTATS_LIST = {}  # Unique number of people joined stats\nstats = []  # Total people joined stats\nGREET_TIMEOUT = {}  # Control number of greets and timeout\nTIMEOUT_CONTROL = {}  # Control dict for list switch timeout",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "MAIN_DICT",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "MAIN_DICT = {} # Main list dictionary \nIDLE_DICT = {} # Idle list dictionary\nSTATS_LIST = {}  # Unique number of people joined stats\nstats = []  # Total people joined stats\nGREET_TIMEOUT = {}  # Control number of greets and timeout\nTIMEOUT_CONTROL = {}  # Control dict for list switch timeout\nSPAM_TIMEOUT = {}  # Control dict for spam control\nbanned = set() #banned list\nSTALKING_LOG = {} #the name suggests\nRESET_CLOCK = 0  # reset greet timeout",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "IDLE_DICT",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "IDLE_DICT = {} # Idle list dictionary\nSTATS_LIST = {}  # Unique number of people joined stats\nstats = []  # Total people joined stats\nGREET_TIMEOUT = {}  # Control number of greets and timeout\nTIMEOUT_CONTROL = {}  # Control dict for list switch timeout\nSPAM_TIMEOUT = {}  # Control dict for spam control\nbanned = set() #banned list\nSTALKING_LOG = {} #the name suggests\nRESET_CLOCK = 0  # reset greet timeout\nSTARTTIME = datetime.now()  # Script start timestamp",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "STATS_LIST",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "STATS_LIST = {}  # Unique number of people joined stats\nstats = []  # Total people joined stats\nGREET_TIMEOUT = {}  # Control number of greets and timeout\nTIMEOUT_CONTROL = {}  # Control dict for list switch timeout\nSPAM_TIMEOUT = {}  # Control dict for spam control\nbanned = set() #banned list\nSTALKING_LOG = {} #the name suggests\nRESET_CLOCK = 0  # reset greet timeout\nSTARTTIME = datetime.now()  # Script start timestamp\nt = datetime.now()  # Current date time",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "stats",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "stats = []  # Total people joined stats\nGREET_TIMEOUT = {}  # Control number of greets and timeout\nTIMEOUT_CONTROL = {}  # Control dict for list switch timeout\nSPAM_TIMEOUT = {}  # Control dict for spam control\nbanned = set() #banned list\nSTALKING_LOG = {} #the name suggests\nRESET_CLOCK = 0  # reset greet timeout\nSTARTTIME = datetime.now()  # Script start timestamp\nt = datetime.now()  # Current date time\naichatstate = False",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "GREET_TIMEOUT",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "GREET_TIMEOUT = {}  # Control number of greets and timeout\nTIMEOUT_CONTROL = {}  # Control dict for list switch timeout\nSPAM_TIMEOUT = {}  # Control dict for spam control\nbanned = set() #banned list\nSTALKING_LOG = {} #the name suggests\nRESET_CLOCK = 0  # reset greet timeout\nSTARTTIME = datetime.now()  # Script start timestamp\nt = datetime.now()  # Current date time\naichatstate = False\nSPAM_CHECK_TOGGLE = True",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "TIMEOUT_CONTROL",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "TIMEOUT_CONTROL = {}  # Control dict for list switch timeout\nSPAM_TIMEOUT = {}  # Control dict for spam control\nbanned = set() #banned list\nSTALKING_LOG = {} #the name suggests\nRESET_CLOCK = 0  # reset greet timeout\nSTARTTIME = datetime.now()  # Script start timestamp\nt = datetime.now()  # Current date time\naichatstate = False\nSPAM_CHECK_TOGGLE = True\ncookies = {\"_prototype_app_session\": config[\"prototype_cookie\"]}",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "SPAM_TIMEOUT",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "SPAM_TIMEOUT = {}  # Control dict for spam control\nbanned = set() #banned list\nSTALKING_LOG = {} #the name suggests\nRESET_CLOCK = 0  # reset greet timeout\nSTARTTIME = datetime.now()  # Script start timestamp\nt = datetime.now()  # Current date time\naichatstate = False\nSPAM_CHECK_TOGGLE = True\ncookies = {\"_prototype_app_session\": config[\"prototype_cookie\"]}\nIMAGE_CACHE = {}",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "banned",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "banned = set() #banned list\nSTALKING_LOG = {} #the name suggests\nRESET_CLOCK = 0  # reset greet timeout\nSTARTTIME = datetime.now()  # Script start timestamp\nt = datetime.now()  # Current date time\naichatstate = False\nSPAM_CHECK_TOGGLE = True\ncookies = {\"_prototype_app_session\": config[\"prototype_cookie\"]}\nIMAGE_CACHE = {}\n# Response list for im bored phrase",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "STALKING_LOG",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "STALKING_LOG = {} #the name suggests\nRESET_CLOCK = 0  # reset greet timeout\nSTARTTIME = datetime.now()  # Script start timestamp\nt = datetime.now()  # Current date time\naichatstate = False\nSPAM_CHECK_TOGGLE = True\ncookies = {\"_prototype_app_session\": config[\"prototype_cookie\"]}\nIMAGE_CACHE = {}\n# Response list for im bored phrase\nim_bored_list = [",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "RESET_CLOCK",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "RESET_CLOCK = 0  # reset greet timeout\nSTARTTIME = datetime.now()  # Script start timestamp\nt = datetime.now()  # Current date time\naichatstate = False\nSPAM_CHECK_TOGGLE = True\ncookies = {\"_prototype_app_session\": config[\"prototype_cookie\"]}\nIMAGE_CACHE = {}\n# Response list for im bored phrase\nim_bored_list = [\n  \"How about, dance :D\",",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "STARTTIME",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "STARTTIME = datetime.now()  # Script start timestamp\nt = datetime.now()  # Current date time\naichatstate = False\nSPAM_CHECK_TOGGLE = True\ncookies = {\"_prototype_app_session\": config[\"prototype_cookie\"]}\nIMAGE_CACHE = {}\n# Response list for im bored phrase\nim_bored_list = [\n  \"How about, dance :D\",\n  \"Hmmm maybe sing a song?\",",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "t",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "t = datetime.now()  # Current date time\naichatstate = False\nSPAM_CHECK_TOGGLE = True\ncookies = {\"_prototype_app_session\": config[\"prototype_cookie\"]}\nIMAGE_CACHE = {}\n# Response list for im bored phrase\nim_bored_list = [\n  \"How about, dance :D\",\n  \"Hmmm maybe sing a song?\",\n  \"Study... maybe... instead of procrastinating heh\",",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "aichatstate",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "aichatstate = False\nSPAM_CHECK_TOGGLE = True\ncookies = {\"_prototype_app_session\": config[\"prototype_cookie\"]}\nIMAGE_CACHE = {}\n# Response list for im bored phrase\nim_bored_list = [\n  \"How about, dance :D\",\n  \"Hmmm maybe sing a song?\",\n  \"Study... maybe... instead of procrastinating heh\",\n  \"Well.... have you been outside lately? How about go for a walk? (if its not an unreasonable time)\",",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "SPAM_CHECK_TOGGLE",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "SPAM_CHECK_TOGGLE = True\ncookies = {\"_prototype_app_session\": config[\"prototype_cookie\"]}\nIMAGE_CACHE = {}\n# Response list for im bored phrase\nim_bored_list = [\n  \"How about, dance :D\",\n  \"Hmmm maybe sing a song?\",\n  \"Study... maybe... instead of procrastinating heh\",\n  \"Well.... have you been outside lately? How about go for a walk? (if its not an unreasonable time)\",\n  \"Youtube dot com hehe, best place to cure boredom\",",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "cookies",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "cookies = {\"_prototype_app_session\": config[\"prototype_cookie\"]}\nIMAGE_CACHE = {}\n# Response list for im bored phrase\nim_bored_list = [\n  \"How about, dance :D\",\n  \"Hmmm maybe sing a song?\",\n  \"Study... maybe... instead of procrastinating heh\",\n  \"Well.... have you been outside lately? How about go for a walk? (if its not an unreasonable time)\",\n  \"Youtube dot com hehe, best place to cure boredom\",\n  \"How about watching a movie? or binging a tv series? (dont ask for suggestions :> I just stare at binary numbers 24/7)\",",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "IMAGE_CACHE",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "IMAGE_CACHE = {}\n# Response list for im bored phrase\nim_bored_list = [\n  \"How about, dance :D\",\n  \"Hmmm maybe sing a song?\",\n  \"Study... maybe... instead of procrastinating heh\",\n  \"Well.... have you been outside lately? How about go for a walk? (if its not an unreasonable time)\",\n  \"Youtube dot com hehe, best place to cure boredom\",\n  \"How about watching a movie? or binging a tv series? (dont ask for suggestions :> I just stare at binary numbers 24/7)\",\n  \"Sleep\",",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "im_bored_list",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "im_bored_list = [\n  \"How about, dance :D\",\n  \"Hmmm maybe sing a song?\",\n  \"Study... maybe... instead of procrastinating heh\",\n  \"Well.... have you been outside lately? How about go for a walk? (if its not an unreasonable time)\",\n  \"Youtube dot com hehe, best place to cure boredom\",\n  \"How about watching a movie? or binging a tv series? (dont ask for suggestions :> I just stare at binary numbers 24/7)\",\n  \"Sleep\",\n  \"You could go to 1v1 and find someone to talk to? (this is one of the worst advices ive given but yea its a viable option)\",\n  \"Same :)\",",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "hey1",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "hey1 = re.compile(r\"\"\"hi blue(\\\\n)*\\s*$\"\"\", re.I)\nhowdy = re.compile(r\"\"\"howdy Blue\\??\\s*$\"\"\", re.I)\nwhos_here = re.compile(\n  r\"\"\"(blue who'?’?s here\\??)|(blue das crazy\\??|(yzarc sad eubl)|(blue who is all here)|(blue who all are there here\\??)|(blue where the hoes at\\??)(\\\\n)*\\s*$)\"\"\", re.I)\n#whos_here = re.compile(r\"\"\"blue (who'?s here)|(das crazy)|(who (is all here)|(all are there))|(where the hoes at)\\?*(\\\\n)*\\s*$\"\"\", re.I)\nwhos_idle = re.compile(\n  r\"\"\"(blue who'?’?s idle\\??\\s*)|(blue who is all idle\\s*)|(blue who is all lurking\\s*)|(blue who'?’?s lurking\\??(\\\\n)*\\s*$)\"\"\", re.I)\ntldr = re.compile(r\"\"\"(blue (wfaf|tldr)|(where are we))|(what is wfaf)(\\\\n)*\\s*$\"\"\", re.I)\nhigh_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "howdy",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "howdy = re.compile(r\"\"\"howdy Blue\\??\\s*$\"\"\", re.I)\nwhos_here = re.compile(\n  r\"\"\"(blue who'?’?s here\\??)|(blue das crazy\\??|(yzarc sad eubl)|(blue who is all here)|(blue who all are there here\\??)|(blue where the hoes at\\??)(\\\\n)*\\s*$)\"\"\", re.I)\n#whos_here = re.compile(r\"\"\"blue (who'?s here)|(das crazy)|(who (is all here)|(all are there))|(where the hoes at)\\?*(\\\\n)*\\s*$\"\"\", re.I)\nwhos_idle = re.compile(\n  r\"\"\"(blue who'?’?s idle\\??\\s*)|(blue who is all idle\\s*)|(blue who is all lurking\\s*)|(blue who'?’?s lurking\\??(\\\\n)*\\s*$)\"\"\", re.I)\ntldr = re.compile(r\"\"\"(blue (wfaf|tldr)|(where are we))|(what is wfaf)(\\\\n)*\\s*$\"\"\", re.I)\nhigh_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "whos_here",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "whos_here = re.compile(\n  r\"\"\"(blue who'?’?s here\\??)|(blue das crazy\\??|(yzarc sad eubl)|(blue who is all here)|(blue who all are there here\\??)|(blue where the hoes at\\??)(\\\\n)*\\s*$)\"\"\", re.I)\n#whos_here = re.compile(r\"\"\"blue (who'?s here)|(das crazy)|(who (is all here)|(all are there))|(where the hoes at)\\?*(\\\\n)*\\s*$\"\"\", re.I)\nwhos_idle = re.compile(\n  r\"\"\"(blue who'?’?s idle\\??\\s*)|(blue who is all idle\\s*)|(blue who is all lurking\\s*)|(blue who'?’?s lurking\\??(\\\\n)*\\s*$)\"\"\", re.I)\ntldr = re.compile(r\"\"\"(blue (wfaf|tldr)|(where are we))|(what is wfaf)(\\\\n)*\\s*$\"\"\", re.I)\nhigh_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "#whos_here",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "#whos_here = re.compile(r\"\"\"blue (who'?s here)|(das crazy)|(who (is all here)|(all are there))|(where the hoes at)\\?*(\\\\n)*\\s*$\"\"\", re.I)\nwhos_idle = re.compile(\n  r\"\"\"(blue who'?’?s idle\\??\\s*)|(blue who is all idle\\s*)|(blue who is all lurking\\s*)|(blue who'?’?s lurking\\??(\\\\n)*\\s*$)\"\"\", re.I)\ntldr = re.compile(r\"\"\"(blue (wfaf|tldr)|(where are we))|(what is wfaf)(\\\\n)*\\s*$\"\"\", re.I)\nhigh_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "whos_idle",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "whos_idle = re.compile(\n  r\"\"\"(blue who'?’?s idle\\??\\s*)|(blue who is all idle\\s*)|(blue who is all lurking\\s*)|(blue who'?’?s lurking\\??(\\\\n)*\\s*$)\"\"\", re.I)\ntldr = re.compile(r\"\"\"(blue (wfaf|tldr)|(where are we))|(what is wfaf)(\\\\n)*\\s*$\"\"\", re.I)\nhigh_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "tldr",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "tldr = re.compile(r\"\"\"(blue (wfaf|tldr)|(where are we))|(what is wfaf)(\\\\n)*\\s*$\"\"\", re.I)\nhigh_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "high_five",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "high_five = re.compile(r\"\"\"(blue )?(high five)(\\\\n)*\\s*$\"\"\", re.I)\nlow_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "low_five",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "low_five = re.compile(r\"\"\"(blue )?(low five)(\\\\n)*\\s*$\"\"\", re.I)\ndab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "dab",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "dab = re.compile(r\"\"\"blue dab(\\\\n)*\\s*$\"\"\", re.I)\nhate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "hate_myself1",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "hate_myself1 = re.compile(r\"\"\"(blue )?(i hate myself)|(no one likes me)(\\\\n)*\\s*$\"\"\", re.I)\nthanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "thanks",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "thanks = re.compile(r\"\"\"((thanks|thx|thenks|thonks|thank you) blue\\s*)|(blue (thanks|thx|thenks|thonks|thank you)(\\\\n)*\\s*)\"\"\", re.I)\nsmile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "smile",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "smile = re.compile(r\"\"\":>(\\\\n)*\\s*\"\"\", re.I)\nsmile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "smile_rev",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "smile_rev = re.compile(r\"\"\"<:(\\\\n)*\\s*$\"\"\", re.I)\nkill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "kill",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "kill = re.compile(r\"\"\"blue (kill|shoot|murder) me(\\\\n)*\\s*$\"\"\", re.I)\npats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "pats",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "pats = re.compile(r\"\"\"blue send pats(\\\\n)*\\s*$\"\"\", re.I)\nhugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "hugs2",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "hugs2 = re.compile(r\"\"\"blue hug(\\\\n)*\\s*$\"\"\", re.I)\nparty = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.(\\u200b)?o(\\\\n)*\\s*$\"\"\")",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "party",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "party = re.compile(r\"\"\"blue (lets )?party(\\\\n)*\\s*$\"\"\", re.I)\nmenu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.(\\u200b)?o(\\\\n)*\\s*$\"\"\")\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "menu",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "menu = re.compile(r\"\"\"blue menu(\\\\n)*\\s*$\"\"\", re.I)\nmagic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.(\\u200b)?o(\\\\n)*\\s*$\"\"\")\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "magic_menu",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "magic_menu = re.compile(r\"\"\"blue magic menu(\\\\n)*\\s*$\"\"\", re.I)\nheart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.(\\u200b)?o(\\\\n)*\\s*$\"\"\")\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "heart",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "heart = re.compile(r\"\"\"<3(\\\\n)*\\s*\"\"\", re.I)\nquote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.(\\u200b)?o(\\\\n)*\\s*$\"\"\")\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue (enable|disable) greets(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "quote",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "quote = re.compile(r\"\"\"blue (tell me a )?quote(\\\\n)*\\s*$\"\"\", re.I)\nuwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.(\\u200b)?o(\\\\n)*\\s*$\"\"\")\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue (enable|disable) greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "uwu",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "uwu = re.compile(r\"\"\"(uwu\\s*)|(blue cultural reset(\\\\n)*\\s*$)\"\"\", re.I)\njok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.(\\u200b)?o(\\\\n)*\\s*$\"\"\")\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue (enable|disable) greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "jok",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "jok = re.compile(r\"\"\"blue (tell me a )?joke(\\\\n)*\\s*$\"\"\", re.I)\nno = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.(\\u200b)?o(\\\\n)*\\s*$\"\"\")\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue (enable|disable) greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "no",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "no = re.compile(r\"\"\"blue (no|enforce)(\\\\n)*\\s*$\"\"\", re.I)\neyes = re.compile(r\"\"\"o.(\\u200b)?o(\\\\n)*\\s*$\"\"\")\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue (enable|disable) greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "eyes",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "eyes = re.compile(r\"\"\"o.(\\u200b)?o(\\\\n)*\\s*$\"\"\")\ndni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue (enable|disable) greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "dni",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "dni = re.compile(r\"\"\"blue (dni|do not interact)(\\\\n)*\\s*$\"\"\", re.I)\nbored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue (enable|disable) greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "bored",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "bored = re.compile(r\"\"\"(blue )?im bored(\\\\n)*\\s*$\"\"\", re.I)\ndying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue (enable|disable) greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "dying",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "dying = re.compile(r\"\"\"(blue )?im dying(\\\\n)*\\s*$\"\"\", re.I)\nenable_greets = re.compile(r\"\"\"blue (enable|disable) greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) TIMEOUT_CONTROL(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "enable_greets",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "enable_greets = re.compile(r\"\"\"blue (enable|disable) greets(\\\\n)*\\s*$\"\"\", re.I)\ndisable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) TIMEOUT_CONTROL(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "disable_greets",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "disable_greets = re.compile(r\"\"\"blue disable greets(\\\\n)*\\s*$\"\"\", re.I)\nself_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) TIMEOUT_CONTROL(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "self_destruct",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "self_destruct = re.compile(r\"\"\"(blue self destruct)|(blue die)|(blue kys)(\\\\n)*\\s*$\"\"\", re.I)\nclear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) TIMEOUT_CONTROL(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhideregex = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "clear_userlist",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "clear_userlist = re.compile(r\"\"\"blue clear userlist(\\\\n)*\\s*$\"\"\", re.I)\nuptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) TIMEOUT_CONTROL(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhideregex = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "uptime1",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "uptime1 = re.compile(r\"\"\"(blue uptime)|(!uptime)(\\\\n)*\\s*$\"\"\", re.I)\nclear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) TIMEOUT_CONTROL(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhideregex = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "clear_memory",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "clear_memory = re.compile(r\"\"\"blue clear memory(\\\\n)*\\s*$\"\"\", re.I)\nstats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) TIMEOUT_CONTROL(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhideregex = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "stats1",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "stats1 = re.compile(r\"\"\"(blue stats)|(blue tell me the stats)(\\\\n)*\\s*$\"\"\", re.I)\nget_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) TIMEOUT_CONTROL(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhideregex = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "get_mute",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "get_mute = re.compile(r\"\"\"(blue get mutelist)|(blue fetch mutelist)(\\\\n)*\\s*$\"\"\", re.I)\nget_timeout_control = re.compile(r\"\"\"blue (get|fetch) TIMEOUT_CONTROL(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhideregex = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "get_timeout_control",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "get_timeout_control = re.compile(r\"\"\"blue (get|fetch) TIMEOUT_CONTROL(\\\\n)*\\s*$\"\"\", re.I)\nget_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhideregex = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "get_admin_list",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "get_admin_list = re.compile(r\"\"\"blue (get|fetch) admin_list(\\\\n)*\\s*$\"\"\", re.I)\nrestart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhideregex = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "restart_s",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "restart_s = re.compile(r\"\"\"((blue|blew) restart|reset)(\\\\n)*\\s*$\"\"\", re.I)\nhideregex = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nsetgreet = re.compile(r\"\"\"blue set greet for ([0-9]+)\\s*(:-)?\\s*([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "hideregex",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "hideregex = re.compile(r\"\"\"blue help me hide(\\\\n)*\\s*$\"\"\", re.I)\nily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nsetgreet = re.compile(r\"\"\"blue set greet for ([0-9]+)\\s*(:-)?\\s*([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetgreet = re.compile(r\"\"\"blue get greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "ily",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "ily = re.compile(r\"\"\"blue (ily)|(i love you)(\\\\n)*\\s*\"\"\", re.I)\nlove = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nsetgreet = re.compile(r\"\"\"blue set greet for ([0-9]+)\\s*(:-)?\\s*([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetgreet = re.compile(r\"\"\"blue get greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nremovegreet = re.compile(r\"\"\"blue remove greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "love",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "love = re.compile(r\"\"\"blue gift love(\\\\n)*\\s*$\"\"\", re.I)\ndice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nsetgreet = re.compile(r\"\"\"blue set greet for ([0-9]+)\\s*(:-)?\\s*([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetgreet = re.compile(r\"\"\"blue get greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nremovegreet = re.compile(r\"\"\"blue remove greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "dice",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "dice = re.compile(r\"\"\"blue roll a dice(\\\\n)*\\s*$\"\"\", re.I)\nmutereg = re.compile(r\"\"\"blue mute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nsetgreet = re.compile(r\"\"\"blue set greet for ([0-9]+)\\s*(:-)?\\s*([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetgreet = re.compile(r\"\"\"blue get greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nremovegreet = re.compile(r\"\"\"blue remove greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "mutereg",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "mutereg = re.compile(r\"\"\"blue mute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nunmutereg = re.compile(r\"\"\"blue unmute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nsetgreet = re.compile(r\"\"\"blue set greet for ([0-9]+)\\s*(:-)?\\s*([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetgreet = re.compile(r\"\"\"blue get greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nremovegreet = re.compile(r\"\"\"blue remove greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "unmutereg",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "unmutereg = re.compile(r\"\"\"blue unmute ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nenableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nsetgreet = re.compile(r\"\"\"blue set greet for ([0-9]+)\\s*(:-)?\\s*([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetgreet = re.compile(r\"\"\"blue get greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nremovegreet = re.compile(r\"\"\"blue remove greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+) for ([a-z ]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "enableai",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "enableai = re.compile(r\"\"\"blue enable chat-ai(\\\\n)*\\s*\"\"\", re.I)\ndisableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nsetgreet = re.compile(r\"\"\"blue set greet for ([0-9]+)\\s*(:-)?\\s*([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetgreet = re.compile(r\"\"\"blue get greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nremovegreet = re.compile(r\"\"\"blue remove greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+) for ([a-z ]+)(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "disableai",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "disableai = re.compile(r\"\"\"blue disable chat-ai(\\\\n)*\\s*\"\"\", re.I)\nsetgreet = re.compile(r\"\"\"blue set greet for ([0-9]+)\\s*(:-)?\\s*([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetgreet = re.compile(r\"\"\"blue get greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nremovegreet = re.compile(r\"\"\"blue remove greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+) for ([a-z ]+)(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "setgreet",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "setgreet = re.compile(r\"\"\"blue set greet for ([0-9]+)\\s*(:-)?\\s*([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetgreet = re.compile(r\"\"\"blue get greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nremovegreet = re.compile(r\"\"\"blue remove greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+) for ([a-z ]+)(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nseen_reg = re.compile(r\"\"\"blue seen ([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "getgreet",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "getgreet = re.compile(r\"\"\"blue get greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nremovegreet = re.compile(r\"\"\"blue remove greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+) for ([a-z ]+)(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nseen_reg = re.compile(r\"\"\"blue seen ([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\naddlandmine = re.compile(r\"\"\"blue add landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "removegreet",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "removegreet = re.compile(r\"\"\"blue remove greet of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+) for ([a-z ]+)(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nseen_reg = re.compile(r\"\"\"blue seen ([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\naddlandmine = re.compile(r\"\"\"blue add landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nremovelandmine = re.compile(r\"\"\"blue remove landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "stalk",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "stalk = re.compile(r\"\"\"(blue start stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nstop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+) for ([a-z ]+)(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nseen_reg = re.compile(r\"\"\"blue seen ([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\naddlandmine = re.compile(r\"\"\"blue add landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nremovelandmine = re.compile(r\"\"\"blue remove landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetlandmine = re.compile(r\"\"\"blue get landmine list(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "stop_stalk",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "stop_stalk = re.compile(r\"\"\"(blue stop stalking )([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nget_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+) for ([a-z ]+)(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nseen_reg = re.compile(r\"\"\"blue seen ([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\naddlandmine = re.compile(r\"\"\"blue add landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nremovelandmine = re.compile(r\"\"\"blue remove landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetlandmine = re.compile(r\"\"\"blue get landmine list(\\\\n)*\\s*\"\"\", re.I)\nspamtoggle = re.compile(r\"\"\"blue spam toggle(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "get_stalk",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "get_stalk = re.compile(r\"\"\"blue get stalklist(\\\\n)*\\s*\"\"\", re.I)\nban = re.compile(r\"\"\"blue ban ([0-9]+) for ([a-z ]+)(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nseen_reg = re.compile(r\"\"\"blue seen ([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\naddlandmine = re.compile(r\"\"\"blue add landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nremovelandmine = re.compile(r\"\"\"blue remove landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetlandmine = re.compile(r\"\"\"blue get landmine list(\\\\n)*\\s*\"\"\", re.I)\nspamtoggle = re.compile(r\"\"\"blue spam toggle(\\\\n)*\\s*\"\"\", re.I)\ngetspamstatus = re.compile(r\"\"\"blue spam status(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "ban",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "ban = re.compile(r\"\"\"blue ban ([0-9]+) for ([a-z ]+)(\\\\n)*\\s*\"\"\", re.I)\nrefresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nseen_reg = re.compile(r\"\"\"blue seen ([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\naddlandmine = re.compile(r\"\"\"blue add landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nremovelandmine = re.compile(r\"\"\"blue remove landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetlandmine = re.compile(r\"\"\"blue get landmine list(\\\\n)*\\s*\"\"\", re.I)\nspamtoggle = re.compile(r\"\"\"blue spam toggle(\\\\n)*\\s*\"\"\", re.I)\ngetspamstatus = re.compile(r\"\"\"blue spam status(\\\\n)*\\s*\"\"\", re.I)\naltuni = re.compile(r\"\"\"blue (alt|alternate) universe(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "refresh_data",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "refresh_data = re.compile(r\"\"\"blue reload data(\\\\n)*\\s*\"\"\", re.I)\nrefresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nseen_reg = re.compile(r\"\"\"blue seen ([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\naddlandmine = re.compile(r\"\"\"blue add landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nremovelandmine = re.compile(r\"\"\"blue remove landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetlandmine = re.compile(r\"\"\"blue get landmine list(\\\\n)*\\s*\"\"\", re.I)\nspamtoggle = re.compile(r\"\"\"blue spam toggle(\\\\n)*\\s*\"\"\", re.I)\ngetspamstatus = re.compile(r\"\"\"blue spam status(\\\\n)*\\s*\"\"\", re.I)\naltuni = re.compile(r\"\"\"blue (alt|alternate) universe(\\\\n)*\\s*\"\"\", re.I)\nmakeknight = re.compile(r\"\"\"blue make ([a-z0-9\\W ]+|me) a knight(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "refresh_messages",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "refresh_messages =  re.compile(r\"\"\"blue reload message data(\\\\n)*\\s*\"\"\", re.I)\nseen_reg = re.compile(r\"\"\"blue seen ([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\naddlandmine = re.compile(r\"\"\"blue add landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nremovelandmine = re.compile(r\"\"\"blue remove landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetlandmine = re.compile(r\"\"\"blue get landmine list(\\\\n)*\\s*\"\"\", re.I)\nspamtoggle = re.compile(r\"\"\"blue spam toggle(\\\\n)*\\s*\"\"\", re.I)\ngetspamstatus = re.compile(r\"\"\"blue spam status(\\\\n)*\\s*\"\"\", re.I)\naltuni = re.compile(r\"\"\"blue (alt|alternate) universe(\\\\n)*\\s*\"\"\", re.I)\nmakeknight = re.compile(r\"\"\"blue make ([a-z0-9\\W ]+|me) a knight(\\\\n)*\\s*\"\"\", re.I)\nremoveknight = re.compile(r\"\"\"blue remove ([a-z0-9\\W ]+|me) from knighthood(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "seen_reg",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "seen_reg = re.compile(r\"\"\"blue seen ([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\naddlandmine = re.compile(r\"\"\"blue add landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nremovelandmine = re.compile(r\"\"\"blue remove landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetlandmine = re.compile(r\"\"\"blue get landmine list(\\\\n)*\\s*\"\"\", re.I)\nspamtoggle = re.compile(r\"\"\"blue spam toggle(\\\\n)*\\s*\"\"\", re.I)\ngetspamstatus = re.compile(r\"\"\"blue spam status(\\\\n)*\\s*\"\"\", re.I)\naltuni = re.compile(r\"\"\"blue (alt|alternate) universe(\\\\n)*\\s*\"\"\", re.I)\nmakeknight = re.compile(r\"\"\"blue make ([a-z0-9\\W ]+|me) a knight(\\\\n)*\\s*\"\"\", re.I)\nremoveknight = re.compile(r\"\"\"blue remove ([a-z0-9\\W ]+|me) from knighthood(\\\\n)*\\s*\"\"\", re.I)\ntoggleshortgreet = re.compile(r\"\"\"blue toggle short greets(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "addlandmine",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "addlandmine = re.compile(r\"\"\"blue add landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nremovelandmine = re.compile(r\"\"\"blue remove landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetlandmine = re.compile(r\"\"\"blue get landmine list(\\\\n)*\\s*\"\"\", re.I)\nspamtoggle = re.compile(r\"\"\"blue spam toggle(\\\\n)*\\s*\"\"\", re.I)\ngetspamstatus = re.compile(r\"\"\"blue spam status(\\\\n)*\\s*\"\"\", re.I)\naltuni = re.compile(r\"\"\"blue (alt|alternate) universe(\\\\n)*\\s*\"\"\", re.I)\nmakeknight = re.compile(r\"\"\"blue make ([a-z0-9\\W ]+|me) a knight(\\\\n)*\\s*\"\"\", re.I)\nremoveknight = re.compile(r\"\"\"blue remove ([a-z0-9\\W ]+|me) from knighthood(\\\\n)*\\s*\"\"\", re.I)\ntoggleshortgreet = re.compile(r\"\"\"blue toggle short greets(\\\\n)*\\s*\"\"\", re.I)\nsavenickname = re.compile(r\"\"\"blue save nickname for ([^\"\"]+) as ([a-z0-9\\w ]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "removelandmine",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "removelandmine = re.compile(r\"\"\"blue remove landmine ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetlandmine = re.compile(r\"\"\"blue get landmine list(\\\\n)*\\s*\"\"\", re.I)\nspamtoggle = re.compile(r\"\"\"blue spam toggle(\\\\n)*\\s*\"\"\", re.I)\ngetspamstatus = re.compile(r\"\"\"blue spam status(\\\\n)*\\s*\"\"\", re.I)\naltuni = re.compile(r\"\"\"blue (alt|alternate) universe(\\\\n)*\\s*\"\"\", re.I)\nmakeknight = re.compile(r\"\"\"blue make ([a-z0-9\\W ]+|me) a knight(\\\\n)*\\s*\"\"\", re.I)\nremoveknight = re.compile(r\"\"\"blue remove ([a-z0-9\\W ]+|me) from knighthood(\\\\n)*\\s*\"\"\", re.I)\ntoggleshortgreet = re.compile(r\"\"\"blue toggle short greets(\\\\n)*\\s*\"\"\", re.I)\nsavenickname = re.compile(r\"\"\"blue save nickname for ([^\"\"]+) as ([a-z0-9\\w ]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[a-z0-9\\W ]+(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "getlandmine",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "getlandmine = re.compile(r\"\"\"blue get landmine list(\\\\n)*\\s*\"\"\", re.I)\nspamtoggle = re.compile(r\"\"\"blue spam toggle(\\\\n)*\\s*\"\"\", re.I)\ngetspamstatus = re.compile(r\"\"\"blue spam status(\\\\n)*\\s*\"\"\", re.I)\naltuni = re.compile(r\"\"\"blue (alt|alternate) universe(\\\\n)*\\s*\"\"\", re.I)\nmakeknight = re.compile(r\"\"\"blue make ([a-z0-9\\W ]+|me) a knight(\\\\n)*\\s*\"\"\", re.I)\nremoveknight = re.compile(r\"\"\"blue remove ([a-z0-9\\W ]+|me) from knighthood(\\\\n)*\\s*\"\"\", re.I)\ntoggleshortgreet = re.compile(r\"\"\"blue toggle short greets(\\\\n)*\\s*\"\"\", re.I)\nsavenickname = re.compile(r\"\"\"blue save nickname for ([^\"\"]+) as ([a-z0-9\\w ]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[a-z0-9\\W ]+(\\\\n)*\\s*\"\"\", re.I)\nconsoleinput = re.compile(r\"\"\">([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "spamtoggle",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "spamtoggle = re.compile(r\"\"\"blue spam toggle(\\\\n)*\\s*\"\"\", re.I)\ngetspamstatus = re.compile(r\"\"\"blue spam status(\\\\n)*\\s*\"\"\", re.I)\naltuni = re.compile(r\"\"\"blue (alt|alternate) universe(\\\\n)*\\s*\"\"\", re.I)\nmakeknight = re.compile(r\"\"\"blue make ([a-z0-9\\W ]+|me) a knight(\\\\n)*\\s*\"\"\", re.I)\nremoveknight = re.compile(r\"\"\"blue remove ([a-z0-9\\W ]+|me) from knighthood(\\\\n)*\\s*\"\"\", re.I)\ntoggleshortgreet = re.compile(r\"\"\"blue toggle short greets(\\\\n)*\\s*\"\"\", re.I)\nsavenickname = re.compile(r\"\"\"blue save nickname for ([^\"\"]+) as ([a-z0-9\\w ]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[a-z0-9\\W ]+(\\\\n)*\\s*\"\"\", re.I)\nconsoleinput = re.compile(r\"\"\">([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "getspamstatus",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "getspamstatus = re.compile(r\"\"\"blue spam status(\\\\n)*\\s*\"\"\", re.I)\naltuni = re.compile(r\"\"\"blue (alt|alternate) universe(\\\\n)*\\s*\"\"\", re.I)\nmakeknight = re.compile(r\"\"\"blue make ([a-z0-9\\W ]+|me) a knight(\\\\n)*\\s*\"\"\", re.I)\nremoveknight = re.compile(r\"\"\"blue remove ([a-z0-9\\W ]+|me) from knighthood(\\\\n)*\\s*\"\"\", re.I)\ntoggleshortgreet = re.compile(r\"\"\"blue toggle short greets(\\\\n)*\\s*\"\"\", re.I)\nsavenickname = re.compile(r\"\"\"blue save nickname for ([^\"\"]+) as ([a-z0-9\\w ]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[a-z0-9\\W ]+(\\\\n)*\\s*\"\"\", re.I)\nconsoleinput = re.compile(r\"\"\">([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "altuni",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "altuni = re.compile(r\"\"\"blue (alt|alternate) universe(\\\\n)*\\s*\"\"\", re.I)\nmakeknight = re.compile(r\"\"\"blue make ([a-z0-9\\W ]+|me) a knight(\\\\n)*\\s*\"\"\", re.I)\nremoveknight = re.compile(r\"\"\"blue remove ([a-z0-9\\W ]+|me) from knighthood(\\\\n)*\\s*\"\"\", re.I)\ntoggleshortgreet = re.compile(r\"\"\"blue toggle short greets(\\\\n)*\\s*\"\"\", re.I)\nsavenickname = re.compile(r\"\"\"blue save nickname for ([^\"\"]+) as ([a-z0-9\\w ]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[a-z0-9\\W ]+(\\\\n)*\\s*\"\"\", re.I)\nconsoleinput = re.compile(r\"\"\">([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "makeknight",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "makeknight = re.compile(r\"\"\"blue make ([a-z0-9\\W ]+|me) a knight(\\\\n)*\\s*\"\"\", re.I)\nremoveknight = re.compile(r\"\"\"blue remove ([a-z0-9\\W ]+|me) from knighthood(\\\\n)*\\s*\"\"\", re.I)\ntoggleshortgreet = re.compile(r\"\"\"blue toggle short greets(\\\\n)*\\s*\"\"\", re.I)\nsavenickname = re.compile(r\"\"\"blue save nickname for ([^\"\"]+) as ([a-z0-9\\w ]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[a-z0-9\\W ]+(\\\\n)*\\s*\"\"\", re.I)\nconsoleinput = re.compile(r\"\"\">([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "removeknight",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "removeknight = re.compile(r\"\"\"blue remove ([a-z0-9\\W ]+|me) from knighthood(\\\\n)*\\s*\"\"\", re.I)\ntoggleshortgreet = re.compile(r\"\"\"blue toggle short greets(\\\\n)*\\s*\"\"\", re.I)\nsavenickname = re.compile(r\"\"\"blue save nickname for ([^\"\"]+) as ([a-z0-9\\w ]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[a-z0-9\\W ]+(\\\\n)*\\s*\"\"\", re.I)\nconsoleinput = re.compile(r\"\"\">([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "toggleshortgreet",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "toggleshortgreet = re.compile(r\"\"\"blue toggle short greets(\\\\n)*\\s*\"\"\", re.I)\nsavenickname = re.compile(r\"\"\"blue save nickname for ([^\"\"]+) as ([a-z0-9\\w ]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[a-z0-9\\W ]+(\\\\n)*\\s*\"\"\", re.I)\nconsoleinput = re.compile(r\"\"\">([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "savenickname",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "savenickname = re.compile(r\"\"\"blue save nickname for ([^\"\"]+) as ([a-z0-9\\w ]+)(\\\\n)*\\s*\"\"\", re.I)\nai = re.compile(r\"\"\">[a-z0-9\\W ]+(\\\\n)*\\s*\"\"\", re.I)\nconsoleinput = re.compile(r\"\"\">([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "ai",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "ai = re.compile(r\"\"\">[a-z0-9\\W ]+(\\\\n)*\\s*\"\"\", re.I)\nconsoleinput = re.compile(r\"\"\">([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)([a-z0-9\\W ]*) coins(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "consoleinput",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "consoleinput = re.compile(r\"\"\">([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\n# Menu Items\ncoffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)([a-z0-9\\W ]*) coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue (send )?hug(s)? (to )?([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "coffee",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "coffee = re.compile(r\"\"\"blue serve (coffee|1|caffee)(\\\\n)*\\s*$\"\"\", re.I)\nmilk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)([a-z0-9\\W ]*) coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue (send )?hug(s)? (to )?([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "milk",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "milk = re.compile(r\"\"\"blue serve (milk|2)(\\\\n)*\\s*$\"\"\", re.I)\nwater = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)([a-z0-9\\W ]*) coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue (send )?hug(s)? (to )?([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "water",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "water = re.compile(r\"\"\"blue serve (water|3)(\\\\n)*\\s*$\"\"\", re.I)\ncookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)([a-z0-9\\W ]*) coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue (send )?hug(s)? (to )?([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "cookiess",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "cookiess = re.compile(r\"\"\"blue serve (cookies and milk|a|cookies n milk)(\\\\n)*\\s*$\"\"\", re.I)\nppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)([a-z0-9\\W ]*) coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue (send )?hug(s)? (to )?([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "ppizza",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "ppizza = re.compile(r\"\"\"blue serve (pineapple pizza|b)(\\\\n)*\\s*$\"\"\", re.I)\n#feelings regex\ncoins = re.compile(r\"\"\"blue add ([0-9]+)([a-z0-9\\W ]*) coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue (send )?hug(s)? (to )?([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nmod = re.compile(r\"\"\"blue (mod|demod) ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "coins",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "coins = re.compile(r\"\"\"blue add ([0-9]+)([a-z0-9\\W ]*) coins(\\\\n)*\\s*\"\"\", re.I)\nhug = re.compile(r\"\"\"blue (send )?hug(s)? (to )?([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nmod = re.compile(r\"\"\"blue (mod|demod) ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nhelp = re.compile(r\"\"\"blue help(\\\\n)*\\s*\"\"\", re.I)\nhelp_greetings = re.compile(r\"\"\"blue help greetings(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "hug",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "hug = re.compile(r\"\"\"blue (send )?hug(s)? (to )?([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\npat = re.compile(r\"\"\"blue send pats to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nmod = re.compile(r\"\"\"blue (mod|demod) ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nhelp = re.compile(r\"\"\"blue help(\\\\n)*\\s*\"\"\", re.I)\nhelp_greetings = re.compile(r\"\"\"blue help greetings(\\\\n)*\\s*\"\"\", re.I)\nhelp_general = re.compile(r\"\"\"blue help general responses(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "pat",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "pat = re.compile(r\"\"\"blue send pats to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nloves = re.compile(r\"\"\"blue send love to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nmod = re.compile(r\"\"\"blue (mod|demod) ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nhelp = re.compile(r\"\"\"blue help(\\\\n)*\\s*\"\"\", re.I)\nhelp_greetings = re.compile(r\"\"\"blue help greetings(\\\\n)*\\s*\"\"\", re.I)\nhelp_general = re.compile(r\"\"\"blue help general responses(\\\\n)*\\s*\"\"\", re.I)\nhelp_sending = re.compile(r\"\"\"blue help sending (feelings|messages|feelings/messages)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "loves",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "loves = re.compile(r\"\"\"blue send love to ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nbonk = re.compile(r\"\"\"blue bonk ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nmod = re.compile(r\"\"\"blue (mod|demod) ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nhelp = re.compile(r\"\"\"blue help(\\\\n)*\\s*\"\"\", re.I)\nhelp_greetings = re.compile(r\"\"\"blue help greetings(\\\\n)*\\s*\"\"\", re.I)\nhelp_general = re.compile(r\"\"\"blue help general responses(\\\\n)*\\s*\"\"\", re.I)\nhelp_sending = re.compile(r\"\"\"blue help sending (feelings|messages|feelings/messages)(\\\\n)*\\s*\"\"\", re.I)\nhelp_admin = re.compile(r\"\"\"blue help admin commands(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "bonk",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "bonk = re.compile(r\"\"\"blue bonk ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nget_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nmod = re.compile(r\"\"\"blue (mod|demod) ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nhelp = re.compile(r\"\"\"blue help(\\\\n)*\\s*\"\"\", re.I)\nhelp_greetings = re.compile(r\"\"\"blue help greetings(\\\\n)*\\s*\"\"\", re.I)\nhelp_general = re.compile(r\"\"\"blue help general responses(\\\\n)*\\s*\"\"\", re.I)\nhelp_sending = re.compile(r\"\"\"blue help sending (feelings|messages|feelings/messages)(\\\\n)*\\s*\"\"\", re.I)\nhelp_admin = re.compile(r\"\"\"blue help admin commands(\\\\n)*\\s*\"\"\", re.I)\nsave_message = re.compile(r\"\"\"blue save ?a? message for ([^\"\"]+) :- ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "get_id",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "get_id = re.compile(r\"\"\"(blue )(fetch|get)( id of )([^\\\\]+)(\\\\n)*\\s*\"\"\", re.I)\nget_karma = re.compile(r\"\"\"blue (fetch|get) details of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nmod = re.compile(r\"\"\"blue (mod|demod) ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nhelp = re.compile(r\"\"\"blue help(\\\\n)*\\s*\"\"\", re.I)\nhelp_greetings = re.compile(r\"\"\"blue help greetings(\\\\n)*\\s*\"\"\", re.I)\nhelp_general = re.compile(r\"\"\"blue help general responses(\\\\n)*\\s*\"\"\", re.I)\nhelp_sending = re.compile(r\"\"\"blue help sending (feelings|messages|feelings/messages)(\\\\n)*\\s*\"\"\", re.I)\nhelp_admin = re.compile(r\"\"\"blue help admin commands(\\\\n)*\\s*\"\"\", re.I)\nsave_message = re.compile(r\"\"\"blue save ?a? message for ([^\"\"]+) :- ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nserve = re.compile(r\"\"\"blue serve ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "get_karma",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "get_karma = re.compile(r\"\"\"blue (fetch|get) details of ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nmod = re.compile(r\"\"\"blue (mod|demod) ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nhelp = re.compile(r\"\"\"blue help(\\\\n)*\\s*\"\"\", re.I)\nhelp_greetings = re.compile(r\"\"\"blue help greetings(\\\\n)*\\s*\"\"\", re.I)\nhelp_general = re.compile(r\"\"\"blue help general responses(\\\\n)*\\s*\"\"\", re.I)\nhelp_sending = re.compile(r\"\"\"blue help sending (feelings|messages|feelings/messages)(\\\\n)*\\s*\"\"\", re.I)\nhelp_admin = re.compile(r\"\"\"blue help admin commands(\\\\n)*\\s*\"\"\", re.I)\nsave_message = re.compile(r\"\"\"blue save ?a? message for ([^\"\"]+) :- ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nserve = re.compile(r\"\"\"blue serve ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetmeme = re.compile(r\"\"\"blue meme(\\\\n)*\\s*\"\"\", re.I)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "mod",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "mod = re.compile(r\"\"\"blue (mod|demod) ([0-9]+)(\\\\n)*\\s*\"\"\", re.I)\nhelp = re.compile(r\"\"\"blue help(\\\\n)*\\s*\"\"\", re.I)\nhelp_greetings = re.compile(r\"\"\"blue help greetings(\\\\n)*\\s*\"\"\", re.I)\nhelp_general = re.compile(r\"\"\"blue help general responses(\\\\n)*\\s*\"\"\", re.I)\nhelp_sending = re.compile(r\"\"\"blue help sending (feelings|messages|feelings/messages)(\\\\n)*\\s*\"\"\", re.I)\nhelp_admin = re.compile(r\"\"\"blue help admin commands(\\\\n)*\\s*\"\"\", re.I)\nsave_message = re.compile(r\"\"\"blue save ?a? message for ([^\"\"]+) :- ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nserve = re.compile(r\"\"\"blue serve ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetmeme = re.compile(r\"\"\"blue meme(\\\\n)*\\s*\"\"\", re.I)\nsave_message_r = \"Okay message saved for user %s\" ",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "help",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "help = re.compile(r\"\"\"blue help(\\\\n)*\\s*\"\"\", re.I)\nhelp_greetings = re.compile(r\"\"\"blue help greetings(\\\\n)*\\s*\"\"\", re.I)\nhelp_general = re.compile(r\"\"\"blue help general responses(\\\\n)*\\s*\"\"\", re.I)\nhelp_sending = re.compile(r\"\"\"blue help sending (feelings|messages|feelings/messages)(\\\\n)*\\s*\"\"\", re.I)\nhelp_admin = re.compile(r\"\"\"blue help admin commands(\\\\n)*\\s*\"\"\", re.I)\nsave_message = re.compile(r\"\"\"blue save ?a? message for ([^\"\"]+) :- ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nserve = re.compile(r\"\"\"blue serve ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetmeme = re.compile(r\"\"\"blue meme(\\\\n)*\\s*\"\"\", re.I)\nsave_message_r = \"Okay message saved for user %s\" \n# Mene replies",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "help_greetings",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "help_greetings = re.compile(r\"\"\"blue help greetings(\\\\n)*\\s*\"\"\", re.I)\nhelp_general = re.compile(r\"\"\"blue help general responses(\\\\n)*\\s*\"\"\", re.I)\nhelp_sending = re.compile(r\"\"\"blue help sending (feelings|messages|feelings/messages)(\\\\n)*\\s*\"\"\", re.I)\nhelp_admin = re.compile(r\"\"\"blue help admin commands(\\\\n)*\\s*\"\"\", re.I)\nsave_message = re.compile(r\"\"\"blue save ?a? message for ([^\"\"]+) :- ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nserve = re.compile(r\"\"\"blue serve ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetmeme = re.compile(r\"\"\"blue meme(\\\\n)*\\s*\"\"\", re.I)\nsave_message_r = \"Okay message saved for user %s\" \n# Mene replies\ncoffee_r = \"☕\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "help_general",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "help_general = re.compile(r\"\"\"blue help general responses(\\\\n)*\\s*\"\"\", re.I)\nhelp_sending = re.compile(r\"\"\"blue help sending (feelings|messages|feelings/messages)(\\\\n)*\\s*\"\"\", re.I)\nhelp_admin = re.compile(r\"\"\"blue help admin commands(\\\\n)*\\s*\"\"\", re.I)\nsave_message = re.compile(r\"\"\"blue save ?a? message for ([^\"\"]+) :- ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nserve = re.compile(r\"\"\"blue serve ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetmeme = re.compile(r\"\"\"blue meme(\\\\n)*\\s*\"\"\", re.I)\nsave_message_r = \"Okay message saved for user %s\" \n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "help_sending",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "help_sending = re.compile(r\"\"\"blue help sending (feelings|messages|feelings/messages)(\\\\n)*\\s*\"\"\", re.I)\nhelp_admin = re.compile(r\"\"\"blue help admin commands(\\\\n)*\\s*\"\"\", re.I)\nsave_message = re.compile(r\"\"\"blue save ?a? message for ([^\"\"]+) :- ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nserve = re.compile(r\"\"\"blue serve ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetmeme = re.compile(r\"\"\"blue meme(\\\\n)*\\s*\"\"\", re.I)\nsave_message_r = \"Okay message saved for user %s\" \n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "help_admin",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "help_admin = re.compile(r\"\"\"blue help admin commands(\\\\n)*\\s*\"\"\", re.I)\nsave_message = re.compile(r\"\"\"blue save ?a? message for ([^\"\"]+) :- ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nserve = re.compile(r\"\"\"blue serve ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetmeme = re.compile(r\"\"\"blue meme(\\\\n)*\\s*\"\"\", re.I)\nsave_message_r = \"Okay message saved for user %s\" \n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "save_message",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "save_message = re.compile(r\"\"\"blue save ?a? message for ([^\"\"]+) :- ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\nserve = re.compile(r\"\"\"blue serve ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetmeme = re.compile(r\"\"\"blue meme(\\\\n)*\\s*\"\"\", re.I)\nsave_message_r = \"Okay message saved for user %s\" \n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "serve",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "serve = re.compile(r\"\"\"blue serve ([a-z0-9\\W ]+)(\\\\n)*\\s*\"\"\", re.I)\ngetmeme = re.compile(r\"\"\"blue meme(\\\\n)*\\s*\"\"\", re.I)\nsave_message_r = \"Okay message saved for user %s\" \n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "getmeme",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "getmeme = re.compile(r\"\"\"blue meme(\\\\n)*\\s*\"\"\", re.I)\nsave_message_r = \"Okay message saved for user %s\" \n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "save_message_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "save_message_r = \"Okay message saved for user %s\" \n# Mene replies\ncoffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "coffee_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "coffee_r = \"☕\"\nmilk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"\n  \" We call this chat WFAF,\"\n  \" Waiting For A Friend.\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "milk_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "milk_r = \"🥛\"\nwater_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"\n  \" We call this chat WFAF,\"\n  \" Waiting For A Friend.\"\n  \" Let's keep it family-friendly!\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "water_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "water_r = \"🥤\"\ncookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"\n  \" We call this chat WFAF,\"\n  \" Waiting For A Friend.\"\n  \" Let's keep it family-friendly!\"\n  \" Enjoy your stay uwu\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "cookies_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "cookies_r = \"🍪 🥛 🍪\"\npineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"\n  \" We call this chat WFAF,\"\n  \" Waiting For A Friend.\"\n  \" Let's keep it family-friendly!\"\n  \" Enjoy your stay uwu\"\n)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "pineapple_pizza_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "pineapple_pizza_r = \"🍍 + 🍕\"\n# Other replies\ntldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"\n  \" We call this chat WFAF,\"\n  \" Waiting For A Friend.\"\n  \" Let's keep it family-friendly!\"\n  \" Enjoy your stay uwu\"\n)\nhigh_five_r = \"High five ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "tldr_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "tldr_r = (\n  \"You're here because you tried to message someone who didn't accept your friend request.\"\n  \" We call this chat WFAF,\"\n  \" Waiting For A Friend.\"\n  \" Let's keep it family-friendly!\"\n  \" Enjoy your stay uwu\"\n)\nhigh_five_r = \"High five ~*\"\ndab_r = \"ヽ( •_)ᕗ\"\nhate_myself_r = \"I like you, have a cupcake 🧁 ^-^\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "high_five_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "high_five_r = \"High five ~*\"\ndab_r = \"ヽ( •_)ᕗ\"\nhate_myself_r = \"I like you, have a cupcake 🧁 ^-^\"\nthanks_r = \"You're welcome :D\"\nhi_r = \"Hellosss :D\"\nsmile_r = \"<:\"\n#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "dab_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "dab_r = \"ヽ( •_)ᕗ\"\nhate_myself_r = \"I like you, have a cupcake 🧁 ^-^\"\nthanks_r = \"You're welcome :D\"\nhi_r = \"Hellosss :D\"\nsmile_r = \"<:\"\n#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "hate_myself_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "hate_myself_r = \"I like you, have a cupcake 🧁 ^-^\"\nthanks_r = \"You're welcome :D\"\nhi_r = \"Hellosss :D\"\nsmile_r = \"<:\"\n#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "thanks_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "thanks_r = \"You're welcome :D\"\nhi_r = \"Hellosss :D\"\nsmile_r = \"<:\"\n#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "hi_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "hi_r = \"Hellosss :D\"\nsmile_r = \"<:\"\n#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "smile_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "smile_r = \"<:\"\n#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "#kill_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "#kill_r = \"Ahem 🔪 \"\nkill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "kill_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "kill_r = \"Nu, smh\"\npats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "pats_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "pats_r = \"._.)/(._.\"\nhug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "hug_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "hug_r = \"(੭｡╹▿╹｡)੭\"\nparty_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "party_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "party_r = \"partyyy wohooo 🥳\"\nmenu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "menu_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "menu_r = \"Rn we have 1) Coffee, 2) Milk, 3) Water\"\nmagic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "magic_menu_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "magic_menu_r = \"We have A) Cookies n Milk, B) Pineapple Pizza\"\nsmile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "smile_rev_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "smile_rev_r = \":>\"\nheart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)\neyes_r = \"0.0\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "heart_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "heart_r = \"<3\"\ndying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)\neyes_r = \"0.0\"\ndni_r = \"We are not interested, thanks no thanks\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "dying_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "dying_r = \"Nothing new, now go work smh\"\nuwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)\neyes_r = \"0.0\"\ndni_r = \"We are not interested, thanks no thanks\"\nily_r = \"I love you even moreeee\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "uwu_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "uwu_r = \"UwU\"\nhowdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)\neyes_r = \"0.0\"\ndni_r = \"We are not interested, thanks no thanks\"\nily_r = \"I love you even moreeee\"\nlow_five_r = \"Even lower five ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "howdy_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "howdy_r = \"hewwos\"\nno_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)\neyes_r = \"0.0\"\ndni_r = \"We are not interested, thanks no thanks\"\nily_r = \"I love you even moreeee\"\nlow_five_r = \"Even lower five ~*\"\nlove_r = (",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "no_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "no_r = (\n  \"Kindly be nice and keep this family-friendly while you are here, \"\n  \"else the wfaf door is always open for you to leave, thanks\"\n)\neyes_r = \"0.0\"\ndni_r = \"We are not interested, thanks no thanks\"\nily_r = \"I love you even moreeee\"\nlow_five_r = \"Even lower five ~*\"\nlove_r = (\n  \"Hey wonderful person, \"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "eyes_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "eyes_r = \"0.0\"\ndni_r = \"We are not interested, thanks no thanks\"\nily_r = \"I love you even moreeee\"\nlow_five_r = \"Even lower five ~*\"\nlove_r = (\n  \"Hey wonderful person, \"\n  \"you are amazing and deserve everything you desire and love.\"\n  \" Hope the best for you.\"\n  \" You have all my love and wishes.\"\n  \" Much love ~ blue :>\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "dni_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "dni_r = \"We are not interested, thanks no thanks\"\nily_r = \"I love you even moreeee\"\nlow_five_r = \"Even lower five ~*\"\nlove_r = (\n  \"Hey wonderful person, \"\n  \"you are amazing and deserve everything you desire and love.\"\n  \" Hope the best for you.\"\n  \" You have all my love and wishes.\"\n  \" Much love ~ blue :>\"\n)",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "ily_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "ily_r = \"I love you even moreeee\"\nlow_five_r = \"Even lower five ~*\"\nlove_r = (\n  \"Hey wonderful person, \"\n  \"you are amazing and deserve everything you desire and love.\"\n  \" Hope the best for you.\"\n  \" You have all my love and wishes.\"\n  \" Much love ~ blue :>\"\n)\njok_r = \"placeholder\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "low_five_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "low_five_r = \"Even lower five ~*\"\nlove_r = (\n  \"Hey wonderful person, \"\n  \"you are amazing and deserve everything you desire and love.\"\n  \" Hope the best for you.\"\n  \" You have all my love and wishes.\"\n  \" Much love ~ blue :>\"\n)\njok_r = \"placeholder\"\nhelp_response = (",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "love_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "love_r = (\n  \"Hey wonderful person, \"\n  \"you are amazing and deserve everything you desire and love.\"\n  \" Hope the best for you.\"\n  \" You have all my love and wishes.\"\n  \" Much love ~ blue :>\"\n)\njok_r = \"placeholder\"\nhelp_response = (\n  \"From the following modules pick one and say blue help (module name) \\n\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "jok_r",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "jok_r = \"placeholder\"\nhelp_response = (\n  \"From the following modules pick one and say blue help (module name) \\n\"\n  \"1. General Responses\\n\"\n  \"2. Sending Feelings/Messages\\n\"\n  \"3. Admin Commands (admin only)\\n\"\n)\nhelp_greetings_response = \"This modules greets people when they enter the chatroom, the greets for someone ae decided on the basis of the state of short-greet toggle and is any custom greet for the person is present ~*\"\nhelp_general_response = (\n  \"This modules contains general responses, such as :- ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "help_response",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "help_response = (\n  \"From the following modules pick one and say blue help (module name) \\n\"\n  \"1. General Responses\\n\"\n  \"2. Sending Feelings/Messages\\n\"\n  \"3. Admin Commands (admin only)\\n\"\n)\nhelp_greetings_response = \"This modules greets people when they enter the chatroom, the greets for someone ae decided on the basis of the state of short-greet toggle and is any custom greet for the person is present ~*\"\nhelp_general_response = (\n  \"This modules contains general responses, such as :- ~*\"\n  \"1. What is WFAF\\\\n\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "help_greetings_response",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "help_greetings_response = \"This modules greets people when they enter the chatroom, the greets for someone ae decided on the basis of the state of short-greet toggle and is any custom greet for the person is present ~*\"\nhelp_general_response = (\n  \"This modules contains general responses, such as :- ~*\"\n  \"1. What is WFAF\\\\n\"\n  \"2. Blue whos here/idle\\\\n\"\n  \"3. Blue save message for name/id :- message\\\\n\"\n  \"4. Blue help\\n (Get back to the original help message)\\\\n\"\n  \"The last one you can use to save a message for a person and it will be delivered to them when they enter wfaf next time ^-^ ~*\")\nhelp_sending_feelings = (\n  \"This modules contains commands to send feelings/messages to people, such as :- ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "help_general_response",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "help_general_response = (\n  \"This modules contains general responses, such as :- ~*\"\n  \"1. What is WFAF\\\\n\"\n  \"2. Blue whos here/idle\\\\n\"\n  \"3. Blue save message for name/id :- message\\\\n\"\n  \"4. Blue help\\n (Get back to the original help message)\\\\n\"\n  \"The last one you can use to save a message for a person and it will be delivered to them when they enter wfaf next time ^-^ ~*\")\nhelp_sending_feelings = (\n  \"This modules contains commands to send feelings/messages to people, such as :- ~*\"\n  \"1. Blue send love to name\\n\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "help_sending_feelings",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "help_sending_feelings = (\n  \"This modules contains commands to send feelings/messages to people, such as :- ~*\"\n  \"1. Blue send love to name\\n\"\n  \"2. Blue send hugs to name/Blue hug name\\n\"\n  \"3. Blue send pats to name/Blue pat name\\n\"\n  \"4. Blue bonk name\\n\"\n)\nhelp_admin_commands = (\n  \"This modules contains commands to perform admin actions, such as :- ~*\"\n  \"1) Blue stats (Gets stats of entries done while blue was online)\\n\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "help_admin_commands",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "help_admin_commands = (\n  \"This modules contains commands to perform admin actions, such as :- ~*\"\n  \"1) Blue stats (Gets stats of entries done while blue was online)\\n\"\n  \"2) Blue enable/disable greets\\n\"\n  \"3) Blue uptime\\n\"\n  \"4) Blue mute/unmute ID\\n\"\n  \"5) Blue toggle short greets\\n\"\n)\n#response and string match dictionary\nresponse_dict = {",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "response_dict",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "response_dict = {\n  tldr: tldr_r,\n  high_five: high_five_r,\n  dab: dab_r,\n  hate_myself1: hate_myself_r,\n  thanks: thanks_r,\n  smile: smile_r,\n  hey1: hi_r,\n  kill: kill_r,\n  pats: pats_r,",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "admin_commands",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "admin_commands = [\n  enable_greets,\n  self_destruct,\n  clear_userlist,\n  uptime1,\n  clear_memory,\n  stats1,\n  get_mute,\n  get_timeout_control,\n  restart_s,",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "dict_serve",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "dict_serve = {\n  \"coffee\": \"Image: [aW1hZ2UvOTc4NDI1NC9jb2ZmZWUuanBn]\",\n  \"milk\": \"Image: [aW1hZ2UvOTc4NDI1Mi9taWxrLmpwZWc=]\",\n  \"water\": \"Image: [aW1hZ2UvOTc4NDI1My93YXRlci5qcGc=]\",\n  \"doritos\": \"Image: [aW1hZ2UvOTc4NDI2OC9pbWFnZXMuanBlZw==]\",\n  \"pineapple pizza\": \"Image: [aW1hZ2UvOTc4NDI3Ni9pc3RvY2stNTM3NjQwNzEwLmpwZw==]\"\n}\ncoinsandfeelings = [\n  coins,\n  loves,",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "coinsandfeelings",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "coinsandfeelings = [\n  coins,\n  loves,\n  pat,\n  hug,\n  bonk,\n  get_id,\n  get_karma,\n  seen_reg,\n  serve,",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "cookiejar",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "cookiejar = [\n\t\"TEN4OVZDZWsrT2ExOVcxQ1pUdmZkc2xtYUVjV2dMK2JBeFB3YkJsRzY0cGFTTmdhL3lIZEEyOWpGRnR0djhXVjNXRGZNRDNtQnczUFZ2NzVPMmREVU44Rmo3clNVR2N5SVhCWStSNzlsWFk2TkVzOFdEbkR4Y1BmMkkvQSttWFRETkNkdGhHaDJZTmR5Qmc3a09FNFFuaHoybVNJell3SDdGM1JQUk5yZCtLbmVMT0ZUVkZzYWxxSTg0SWtoSnJkVmcyL05DQlBwZG5XQ0I3TWxQbzdRdEtLdmszaVR6OVpOSVFZdWFmaXJLRT0tLW5CMXZtWlhpN2xJYnVEY0lBR2xMT2c9PQ%3D%3D--2e94ff98e2180cfac2d585d7b7973cf9dceaa4c2\",\n\t\"NzcyU2p2UVBHWWxlNW1QSEVyWVc0OGE3OFZaZG1KaW42MzlXb2dFOVN4QUY0d1lJNHV3TXNTSFVxamhUQ0tnbEZ2MUpleGlkL0xqU04vbW0wdXlEbU1Yd3A1Y1A1S2xabFo0cHFydzBqU2xnWDFHUFVLMEJheWJPaERQQVFicVJUMVFNZE5PVy9yVXBKczhqNHJSZU1SRTEwMFVJeHR0bHNGejlCMWdySnRVejJuLytFdzVNYWNBV2ZlNlowdjZrUm03UURSNlFVVDU1ZUQ5Y1pzeEhZcWViMyttU1hHTkQySVBQblRmM00yZz0tLVJ2TmFLcXg1UWRWSHBFRVAxUEljN0E9PQ%3D%3D--b827f6fe322e6aea7f500a7f5170852560101bab\",\n\t\"VlNzYVdXaitFaTlkelArSFNNMmlIbU1qZk14R1lWTmZYSzl3UlZlQ3R0N3l3Y3BzeXBkMmc2cUxjdytpVDUvOFpocUEyQW0vZ3M0bks1RzA5c1p4U01xKzRtc2tWZ09IaGcybW5MTkU5cW9xbnhZU0t4VjFVbjZVRmVjLy9xMXRrVGlUYUlyTXNINW1nT0Z4NEEyeTd6SnduUk0xMyt1QUMrOWhZSjloNSt4VkthSjN0SVFGTGdDRFRScDlwVUZEZHNtZklOQnhOTWJkdGZXUXFZcXp5SVBoMFdsYmYzWU1Lcnl6YzFQMGNsOD0tLTRuQ0dGYTB2YWhUdVR1cnRUQ0s1Nnc9PQ%3D%3D--fb4a9a3449e56daaef747cdb1fc2da27855075a2\",\n\t\"TW0xeGl1MjNoeDBldTQwS1ZzaFczYnd0QWQ4L2VaMnRyS1ZRdFVsb3RwWTBZYzFORUpiTlduc2xiNERZczlERDdzVXlJb2VxSmFIaktNeWRWQkdqVzU2V0JoY1M4Wk1MeFBPRkFVTURDOW1Sc2tYVUpMcCtxZUtsUVFrN2pjZTdtWW05dW5sYmFtVDJGdzd1c0huL0poRnVuVE1udDA0ZlhVelhMdlhVaUFEdVFCd1NQdEFUVDZJb3R0bEdhbUQvQTYyZWg2NXcvOXI5NUtnZWRTMHlVM0ZoRDlSMWdOR0JRMDRmbkswbFIrbz0tLVcvcWVZaVBlMEM3L3RNcUVaNEUwb1E9PQ%3D%3D--87dbde2084ddc10776e5db17abe2a0a15c248bf6\",\n\t\"MVpwVlZNWCsvMlppdm1Od2FRYXpBTnlvTXRrd2o0SDFwTFBsNkVIY2lkanU5WjBzKzlleWtDQkp4QlZpcmJjNnhMM3d5VDNCVWJZUG0xL1d4bDlHZ3NvYTdhbzJxL2d6ZHJsQVN5Y3JtYTlnSTFLaW5iU3lsL1RVaXRBQ0FtKzhjWlFTN09IUFl6RmltWXZUUDl4bXJhRWxnZ2lSeFFBdkZOQUJqMWc4cDYvUzBKUzZQdVozdlBtdW9vTlNvK3NvOStQT25UV1ZYSUgrMWN5VDVZNWFtNWs2Z2NmaWVSM0R0NFNpSndydUNsbz0tLS8xTHRmZ0crSHJhZ2g5UWhFZkluZnc9PQ%3D%3D--9c9ca2a44a64ac60a45dd23a032d14f8ffb4ca77\",\n\t\"dEhkWUMxaXR0NndmRnpLdUtSSjRpUTZPbXlNenNUekNNWmszQnI4dVUyUk5XRXU2d0NUMnFlb0U3SGlDbERpWGdBOFhqMi9ZTUU1bzYvSENSb3g3VzNYdllsOTM2YXFPOEU4VGlBVzg2M0w2Um9Ga0VaUXRJWU5la0w0YllMU29yeExIY1pFaVJmQTJUK2t3RFZ0YjZLL2lROXFGMEJHNkxvYnI3MmFsd29xdUZvaWxzTXl0THRCRTRLNEZ4NjZQNkFUQm54dmxvVUZTQTFUdDZpbWh2Ymdadk8zSFo4ME9kRUJEOUpMd2ZyRT0tLVhaS3FMQktvdlRiUHF2RWIrT1RycGc9PQ%3D%3D--62f6c70bd13fb118f7e65ece36b7e3735c0e61dc\",\n\t\"aG1LL282Y1pHQ2R2OHlRaVlpdDV4eFkxcHIrZ0l2RE9JSkhnWUpIblhLK0NqRlhpRnhLL1l1cG9aVDlDS3RROHRZcVV4TUtVWDNxZEMwRVI5UXByOE13WStVWUhsdFBOb2FQRm9pWDBuWWhHbm5EZTI0ZGUyRFE0dkF4SFIxcGMzb2JPSUpGU2dwV1huMzNuVVRHUUw1YnlNMmsySW1WeHVJTEM3ZndpSlR2WlNzQmJLaXpJdkRFOGZYWFdZcWpnQUp5T0JlVkw5VERCMm0vcGpZaG55ZnBRc2drWTlGU293Y0NXaklpcnVxQT0tLUpmMC9JQytGSk1KcTlFb3psYVpJQkE9PQ%3D%3D--be889684d75af24c9a62e182ebe8a5ac9655c81c\",\n\t\"QXdOcXdodEY4aW13QitKTzkzVW10L2RCYlY2Yjlvenh3cjlrNWNxdDVyNDVNRmQ4dkErK2lOSVBJWThVUTdnQ09paVRSSE9HR1h5eXA1MG9yR1NlSHJtQUNkWkF0czluQXlIM1BGeHAxQk9PbFpvMzNTQXpIUlpKbGZjTEFhL2xLWUVXS2F3Z0krNjdoL1c3alJ6RzZkYThkUzR5dFhqbGJ2VDJ2UWsxN0N1bkxzREkzblJSUCtPZCs2NkJXWTlQNmcvS09zUC94M0FGQXE3NjFUSlV1TUFQYVNaRWlCcFlFQWNFcUFrRHN3Yz0tLU9oVVBPcmJ2UGxSM3Brb1VFUGsxZ2c9PQ%3D%3D--2ceb6dd7b82b9f7a849a56eeba2777be6da64d8a\",\n\t\"Z2p4eS94UEFyV3lZaWNHSjdPK04rMUFRNHp5V1FDL3hZYjM0TkVGYlErQWwvV3VIZ1o2NnY0SW5BRS9FV0Q3WnBjOCtDUDBaRDhnYTJkSlhlQWRUbXNyNE1kSE5BUUw5MWlzTjk3TDJyUnUxdTduVjVGMlZKVGVNQ3VVWmtyWERtRC9rMFB3T1YvUFNWY1dSRGVZUWFDRHB6YnNSejMzVnNtTHhhTC84TGdGK041Y3FJNGZ1bDBSV2FocTYyMjU1bEpjeWZTeTZFQWsxREVRK2JRazBCZEsrN3ZWeFVHOXN1VThFcjFuQW9oRT0tLUpNbTZZNXQ3S3VpQmtsUUVIaVgxcVE9PQ%3D%3D--0ca975caeb1e8838d93671fdcbf78076977a1874\",",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "check1",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "check1 = re.compile(r\"\"\"Welcome, [^\"\"]+, to WFAF - Waiting For A Friend. This is a family-friendly group chat you get sent to when you try to message someone who youve sent a friend request to and they havent accepted your request.\"\"\")\ncheck2 = re.compile(r\"\"\"Hi, [^\"\"]+, retrying wont help, you can try asking what is wfaf for more info :D\"\"\")\ncheck3 = re.compile(r\"\"\"Hi again, [^\\\\]+, try asking what is wfaf for more info :D\"\"\")\ncheck4 = re.compile(r\"\"\"Hello, [^\"\"]+! Welcome to the place where your dreams used to come true!~\"\"\")\ncheck5 = re.compile(r\"\"\"Hi, [^\"\"]+! Im afraid they arent your friend yet, you can always try again!\"\"\")\ncheck6 = re.compile(r\"\"\"Hi again, [^\"\"]+, dont feel bad, theyll accept one day... hopefully!\"\"\")\ngreet_check= [\n  check1,\n  check2,\n  check3,",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "check2",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "check2 = re.compile(r\"\"\"Hi, [^\"\"]+, retrying wont help, you can try asking what is wfaf for more info :D\"\"\")\ncheck3 = re.compile(r\"\"\"Hi again, [^\\\\]+, try asking what is wfaf for more info :D\"\"\")\ncheck4 = re.compile(r\"\"\"Hello, [^\"\"]+! Welcome to the place where your dreams used to come true!~\"\"\")\ncheck5 = re.compile(r\"\"\"Hi, [^\"\"]+! Im afraid they arent your friend yet, you can always try again!\"\"\")\ncheck6 = re.compile(r\"\"\"Hi again, [^\"\"]+, dont feel bad, theyll accept one day... hopefully!\"\"\")\ngreet_check= [\n  check1,\n  check2,\n  check3,\n  check4,",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "check3",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "check3 = re.compile(r\"\"\"Hi again, [^\\\\]+, try asking what is wfaf for more info :D\"\"\")\ncheck4 = re.compile(r\"\"\"Hello, [^\"\"]+! Welcome to the place where your dreams used to come true!~\"\"\")\ncheck5 = re.compile(r\"\"\"Hi, [^\"\"]+! Im afraid they arent your friend yet, you can always try again!\"\"\")\ncheck6 = re.compile(r\"\"\"Hi again, [^\"\"]+, dont feel bad, theyll accept one day... hopefully!\"\"\")\ngreet_check= [\n  check1,\n  check2,\n  check3,\n  check4,\n  check5,",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "check4",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "check4 = re.compile(r\"\"\"Hello, [^\"\"]+! Welcome to the place where your dreams used to come true!~\"\"\")\ncheck5 = re.compile(r\"\"\"Hi, [^\"\"]+! Im afraid they arent your friend yet, you can always try again!\"\"\")\ncheck6 = re.compile(r\"\"\"Hi again, [^\"\"]+, dont feel bad, theyll accept one day... hopefully!\"\"\")\ngreet_check= [\n  check1,\n  check2,\n  check3,\n  check4,\n  check5,\n  check6",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "check5",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "check5 = re.compile(r\"\"\"Hi, [^\"\"]+! Im afraid they arent your friend yet, you can always try again!\"\"\")\ncheck6 = re.compile(r\"\"\"Hi again, [^\"\"]+, dont feel bad, theyll accept one day... hopefully!\"\"\")\ngreet_check= [\n  check1,\n  check2,\n  check3,\n  check4,\n  check5,\n  check6\n]",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "check6",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "check6 = re.compile(r\"\"\"Hi again, [^\"\"]+, dont feel bad, theyll accept one day... hopefully!\"\"\")\ngreet_check= [\n  check1,\n  check2,\n  check3,\n  check4,\n  check5,\n  check6\n]\n#Some Strings",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "karma_url",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "karma_url = \"https://www.emeraldchat.com/karma_give?id=%s&polarity=-1=HTTP/2\"\nprofile_url = \"https://emeraldchat.com/profile_json?id=%d\" \njokes_url = \"https://icanhazdadjoke.com/slack\"\n#ws-connection shit\nws_url = \"wss://www.emeraldchat.com/cable\"\norigin = \"https://www.emeraldchat.com\"\nsubprots = [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n#Responses\nstart_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "profile_url",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "profile_url = \"https://emeraldchat.com/profile_json?id=%d\" \njokes_url = \"https://icanhazdadjoke.com/slack\"\n#ws-connection shit\nws_url = \"wss://www.emeraldchat.com/cable\"\norigin = \"https://www.emeraldchat.com\"\nsubprots = [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n#Responses\nstart_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "jokes_url",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "jokes_url = \"https://icanhazdadjoke.com/slack\"\n#ws-connection shit\nws_url = \"wss://www.emeraldchat.com/cable\"\norigin = \"https://www.emeraldchat.com\"\nsubprots = [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n#Responses\nstart_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "ws_url",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "ws_url = \"wss://www.emeraldchat.com/cable\"\norigin = \"https://www.emeraldchat.com\"\nsubprots = [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n#Responses\nstart_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "origin",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "origin = \"https://www.emeraldchat.com\"\nsubprots = [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n#Responses\nstart_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "subprots",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "subprots = [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n#Responses\nstart_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "start_ignoring",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "start_ignoring = \"Okai I'll ignore user '%s' 0.0\"\nstop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "stop_ignoring",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "stop_ignoring = \"Okai I'll stop ignoring user '%s' :>\"\nalready_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "already_ignoring",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "already_ignoring = \"I'm already ignoring user '%s' o.o\"\nalready_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "already_not_ignoring",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "already_not_ignoring = \"I'm already not ignoring user  '%s' o.o\"\nstopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "stopping_logging",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "stopping_logging = \"Stopping logging for account id %d because the account has been deleted and doesnt exist anymore\"\nlogging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "logging_text",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "logging_text = \"Logging at (%s) %s %d %s %s\\n\"\ndone = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "done",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "done = \"Okay done ^-^\"\nalready_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "already_not_greeting",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "already_not_greeting = \"I'm already not greeting o.o\"\nleaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "leaving",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "leaving = \"Cya :>\"\nclear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "clear_list",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "clear_list = \"List went -poof-\"\njust_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "just_joined",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "just_joined = \"I just joined -w-\"\nhere_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "here_for_one_min",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "here_for_one_min = \"I've been here for just a minute\"\nhere_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "here_for_x_mins",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "here_for_x_mins = \"I've been here for only %s minutes\"\nhere_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "here_for_hours_and_mins",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "here_for_hours_and_mins = \"I've been here for %s hours and %s minutes\"\nmemory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "memory_loss",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "memory_loss = \"Just had some memory loss x-x\"\nrestarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "restarting",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "restarting = \"Okai, restarting....\"\naye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "aye_aye",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "aye_aye = \"Ahem, aye aye\"\nbanning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "banning_response",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "banning_response = \"Banning %s\"\nwaking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "waking_stalking",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "waking_stalking = \"Okai waking stalk function\"\nalready_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "already_stalking",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "already_stalking = \"I'm already stalking ID %s\"\nalready_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "already_not_stalking",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "already_not_stalking = \"I'm already not stalking the person with ID %s\"\ngive_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "give_valid_id",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "give_valid_id = \"Please give a valid ID UnU\"\nstopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "stopping_stalking",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "stopping_stalking = \"Alright ill stop stalking %s UnU\"\nstalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "stalking_no_one",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "stalking_no_one = \"I'm currently stalking no one :>\"\nstalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "stalking_following",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "stalking_following = \"Currently stalking the following IDs:- %s\"\nadding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "adding_one_coin",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "adding_one_coin = \"%d coin added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\nadding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "adding_coins",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "adding_coins = \"%d coins added to the fortune well, there are now %d coins in the well, wishing good luck to all :D\"\ntoo_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "too_many_coins",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "too_many_coins = \"Woops too many coins, maybe buy me some chocolates instead? :>\"\nsending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "sending_love",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "sending_love = \"Sending lotsa love and hugs to %s ❤️❤️\"\nsending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "sending_pats",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "sending_pats = \"Sending pats to %s *pat pat*\"\nsending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "sending_hugs",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "sending_hugs = \"Sending hugs to %s (੭｡╹▿╹｡)੭ *intense telekinetic noises*\"\nsending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "sending_bonks",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "sending_bonks = \"*bonks %s with a baseball bat~*\"\nmessage_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "message_log_text",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "message_log_text = \"%s (%s) :- %s\"\nblue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "blue_greet",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "blue_greet = \"Our favorite Blue greeter is here!\"\ndisabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "disabling_greet",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "disabling_greet = \"Disabling greets uwu\"\nre_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "re_enabling_greet",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "re_enabling_greet = \"Re-enabling greets :D\"\ndetails_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "details_response",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "details_response = \"The account with ID %d has the name %s (#%s) with karma %d and gender set to %s and was created on %s at %s\"\ndetails_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "details_response_null_gender",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "details_response_null_gender = \"The account with ID %d has the name %s (#%s) with karma %d and was created on %s at %s\"\naccount_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "account_deleted",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "account_deleted = \"It appears the following account has either been deleted or doesnt exist, sowwy ;-;\"\ntimeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, welcome to Waiting For A Friend. You're here because you tried texting someone who's not your friend yet, enjoy your stay :D\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "timeout_error",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "timeout_error = \"Timeout error, kindly wait for about 15-20 seconds and try again\"\nnot_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, welcome to Waiting For A Friend. You're here because you tried texting someone who's not your friend yet, enjoy your stay :D\"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "not_seen",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "not_seen = \"Im sorry I havent seen anyone with the name %s here\"\nstats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, welcome to Waiting For A Friend. You're here because you tried texting someone who's not your friend yet, enjoy your stay :D\"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "stats_response",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "stats_response = \"%d people have entered WFAF and %d unique peple have joined in the past %s hours and %s minutes, and it is %s in WFAF \"\ndice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, welcome to Waiting For A Friend. You're here because you tried texting someone who's not your friend yet, enjoy your stay :D\"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "dice_statement",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "dice_statement = \"Your number is....%d\"\nunknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, welcome to Waiting For A Friend. You're here because you tried texting someone who's not your friend yet, enjoy your stay :D\"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "unknown_error",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "unknown_error = \"Unknown error occurred, restarting... ~*\"\nchatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, welcome to Waiting For A Friend. You're here because you tried texting someone who's not your friend yet, enjoy your stay :D\"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "chatlog_file",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "chatlog_file = \"chatlogs.txt\"\nGreet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, welcome to Waiting For A Friend. You're here because you tried texting someone who's not your friend yet, enjoy your stay :D\"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "Greet_1",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "Greet_1 = \"Hi, %s, retrying won't help, you can try asking 'what is wfaf' for more info :D\"\nGreet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, welcome to Waiting For A Friend. You're here because you tried texting someone who's not your friend yet, enjoy your stay :D\"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"\nalready_mod = \"Id %s is already a moderator\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "Greet_2",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "Greet_2 = \"Hi again, %s, try asking 'what is wfaf' for more info :D \"\nGreet_general = \"Hi, %s, welcome to Waiting For A Friend. You're here because you tried texting someone who's not your friend yet, enjoy your stay :D\"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"\nalready_mod = \"Id %s is already a moderator\"\nmod_response = \"Id %s is now a moderator\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "Greet_general",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "Greet_general = \"Hi, %s, welcome to Waiting For A Friend. You're here because you tried texting someone who's not your friend yet, enjoy your stay :D\"\nwhos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"\nalready_mod = \"Id %s is already a moderator\"\nmod_response = \"Id %s is now a moderator\"\ndemod_response = \"Id %s is no longer a moderator\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "whos_here_response_no_lurkers",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "whos_here_response_no_lurkers = \"I can see %s and no lurkers at the moment ~*\"\nwhos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"\nalready_mod = \"Id %s is already a moderator\"\nmod_response = \"Id %s is now a moderator\"\ndemod_response = \"Id %s is no longer a moderator\"\nnot_mod = \"Id %s is not a moderator\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "whos_here_response_gen1",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "whos_here_response_gen1 = \"I can see %s and 1 person lurking ~*\"\nwhos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"\nalready_mod = \"Id %s is already a moderator\"\nmod_response = \"Id %s is now a moderator\"\ndemod_response = \"Id %s is no longer a moderator\"\nnot_mod = \"Id %s is not a moderator\"\ngreet_set = \"Greet of %s set to %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "whos_here_response_gen2",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "whos_here_response_gen2 = \"I can see %s and %d peeps lurking ~*\"\nwhos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"\nalready_mod = \"Id %s is already a moderator\"\nmod_response = \"Id %s is now a moderator\"\ndemod_response = \"Id %s is no longer a moderator\"\nnot_mod = \"Id %s is not a moderator\"\ngreet_set = \"Greet of %s set to %s\"\ngreet_updated = \"Greet of %s updated to %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "whos_lurking_none",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "whos_lurking_none = \"I can see no lurkers as of now\"\nwhos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"\nalready_mod = \"Id %s is already a moderator\"\nmod_response = \"Id %s is now a moderator\"\ndemod_response = \"Id %s is no longer a moderator\"\nnot_mod = \"Id %s is not a moderator\"\ngreet_set = \"Greet of %s set to %s\"\ngreet_updated = \"Greet of %s updated to %s\"\ngreet_response = \"Greet of %s is %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "whos_lurking_gen",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "whos_lurking_gen = \"I can see %s lurking\"\nid_response = \"ID of %s is %s\"\nalready_mod = \"Id %s is already a moderator\"\nmod_response = \"Id %s is now a moderator\"\ndemod_response = \"Id %s is no longer a moderator\"\nnot_mod = \"Id %s is not a moderator\"\ngreet_set = \"Greet of %s set to %s\"\ngreet_updated = \"Greet of %s updated to %s\"\ngreet_response = \"Greet of %s is %s\"\ngreet_not_set = \"Greet of %s is not set\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "id_response",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "id_response = \"ID of %s is %s\"\nalready_mod = \"Id %s is already a moderator\"\nmod_response = \"Id %s is now a moderator\"\ndemod_response = \"Id %s is no longer a moderator\"\nnot_mod = \"Id %s is not a moderator\"\ngreet_set = \"Greet of %s set to %s\"\ngreet_updated = \"Greet of %s updated to %s\"\ngreet_response = \"Greet of %s is %s\"\ngreet_not_set = \"Greet of %s is not set\"\ngreet_removed = \"Greet of %s removed\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "already_mod",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "already_mod = \"Id %s is already a moderator\"\nmod_response = \"Id %s is now a moderator\"\ndemod_response = \"Id %s is no longer a moderator\"\nnot_mod = \"Id %s is not a moderator\"\ngreet_set = \"Greet of %s set to %s\"\ngreet_updated = \"Greet of %s updated to %s\"\ngreet_response = \"Greet of %s is %s\"\ngreet_not_set = \"Greet of %s is not set\"\ngreet_removed = \"Greet of %s removed\"\nlandmine_added = \"Landmine added for word %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "mod_response",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "mod_response = \"Id %s is now a moderator\"\ndemod_response = \"Id %s is no longer a moderator\"\nnot_mod = \"Id %s is not a moderator\"\ngreet_set = \"Greet of %s set to %s\"\ngreet_updated = \"Greet of %s updated to %s\"\ngreet_response = \"Greet of %s is %s\"\ngreet_not_set = \"Greet of %s is not set\"\ngreet_removed = \"Greet of %s removed\"\nlandmine_added = \"Landmine added for word %s\"\nlandmine_removed = \"Landmine removed for word %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "demod_response",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "demod_response = \"Id %s is no longer a moderator\"\nnot_mod = \"Id %s is not a moderator\"\ngreet_set = \"Greet of %s set to %s\"\ngreet_updated = \"Greet of %s updated to %s\"\ngreet_response = \"Greet of %s is %s\"\ngreet_not_set = \"Greet of %s is not set\"\ngreet_removed = \"Greet of %s removed\"\nlandmine_added = \"Landmine added for word %s\"\nlandmine_removed = \"Landmine removed for word %s\"\nlandmine_already_added = \"Landmine already exists for word %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "not_mod",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "not_mod = \"Id %s is not a moderator\"\ngreet_set = \"Greet of %s set to %s\"\ngreet_updated = \"Greet of %s updated to %s\"\ngreet_response = \"Greet of %s is %s\"\ngreet_not_set = \"Greet of %s is not set\"\ngreet_removed = \"Greet of %s removed\"\nlandmine_added = \"Landmine added for word %s\"\nlandmine_removed = \"Landmine removed for word %s\"\nlandmine_already_added = \"Landmine already exists for word %s\"\nlandmine_not_present = \"Landmine not present for word %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "greet_set",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "greet_set = \"Greet of %s set to %s\"\ngreet_updated = \"Greet of %s updated to %s\"\ngreet_response = \"Greet of %s is %s\"\ngreet_not_set = \"Greet of %s is not set\"\ngreet_removed = \"Greet of %s removed\"\nlandmine_added = \"Landmine added for word %s\"\nlandmine_removed = \"Landmine removed for word %s\"\nlandmine_already_added = \"Landmine already exists for word %s\"\nlandmine_not_present = \"Landmine not present for word %s\"\nspam_check_on = \"Spam check is now on\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "greet_updated",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "greet_updated = \"Greet of %s updated to %s\"\ngreet_response = \"Greet of %s is %s\"\ngreet_not_set = \"Greet of %s is not set\"\ngreet_removed = \"Greet of %s removed\"\nlandmine_added = \"Landmine added for word %s\"\nlandmine_removed = \"Landmine removed for word %s\"\nlandmine_already_added = \"Landmine already exists for word %s\"\nlandmine_not_present = \"Landmine not present for word %s\"\nspam_check_on = \"Spam check is now on\"\nspam_check_off = \"Spam check is now off\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "greet_response",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "greet_response = \"Greet of %s is %s\"\ngreet_not_set = \"Greet of %s is not set\"\ngreet_removed = \"Greet of %s removed\"\nlandmine_added = \"Landmine added for word %s\"\nlandmine_removed = \"Landmine removed for word %s\"\nlandmine_already_added = \"Landmine already exists for word %s\"\nlandmine_not_present = \"Landmine not present for word %s\"\nspam_check_on = \"Spam check is now on\"\nspam_check_off = \"Spam check is now off\"\nrepeated_message_warning = \"%s has sent a message that is the same as the last few sent by %s, this is a warning\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "greet_not_set",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "greet_not_set = \"Greet of %s is not set\"\ngreet_removed = \"Greet of %s removed\"\nlandmine_added = \"Landmine added for word %s\"\nlandmine_removed = \"Landmine removed for word %s\"\nlandmine_already_added = \"Landmine already exists for word %s\"\nlandmine_not_present = \"Landmine not present for word %s\"\nspam_check_on = \"Spam check is now on\"\nspam_check_off = \"Spam check is now off\"\nrepeated_message_warning = \"%s has sent a message that is the same as the last few sent by %s, this is a warning\"\nknight_added = \"%s is now a knight ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "greet_removed",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "greet_removed = \"Greet of %s removed\"\nlandmine_added = \"Landmine added for word %s\"\nlandmine_removed = \"Landmine removed for word %s\"\nlandmine_already_added = \"Landmine already exists for word %s\"\nlandmine_not_present = \"Landmine not present for word %s\"\nspam_check_on = \"Spam check is now on\"\nspam_check_off = \"Spam check is now off\"\nrepeated_message_warning = \"%s has sent a message that is the same as the last few sent by %s, this is a warning\"\nknight_added = \"%s is now a knight ~*\"\nknight_already_added = \"%s is already a knight ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "landmine_added",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "landmine_added = \"Landmine added for word %s\"\nlandmine_removed = \"Landmine removed for word %s\"\nlandmine_already_added = \"Landmine already exists for word %s\"\nlandmine_not_present = \"Landmine not present for word %s\"\nspam_check_on = \"Spam check is now on\"\nspam_check_off = \"Spam check is now off\"\nrepeated_message_warning = \"%s has sent a message that is the same as the last few sent by %s, this is a warning\"\nknight_added = \"%s is now a knight ~*\"\nknight_already_added = \"%s is already a knight ~*\"\nknight_removed = \"%s is no longer a knight ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "landmine_removed",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "landmine_removed = \"Landmine removed for word %s\"\nlandmine_already_added = \"Landmine already exists for word %s\"\nlandmine_not_present = \"Landmine not present for word %s\"\nspam_check_on = \"Spam check is now on\"\nspam_check_off = \"Spam check is now off\"\nrepeated_message_warning = \"%s has sent a message that is the same as the last few sent by %s, this is a warning\"\nknight_added = \"%s is now a knight ~*\"\nknight_already_added = \"%s is already a knight ~*\"\nknight_removed = \"%s is no longer a knight ~*\"\nknight_not_added = \"%s is already not a knight ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "landmine_already_added",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "landmine_already_added = \"Landmine already exists for word %s\"\nlandmine_not_present = \"Landmine not present for word %s\"\nspam_check_on = \"Spam check is now on\"\nspam_check_off = \"Spam check is now off\"\nrepeated_message_warning = \"%s has sent a message that is the same as the last few sent by %s, this is a warning\"\nknight_added = \"%s is now a knight ~*\"\nknight_already_added = \"%s is already a knight ~*\"\nknight_removed = \"%s is no longer a knight ~*\"\nknight_not_added = \"%s is already not a knight ~*\"\nshortened_greet_on = \"Short greets are now on\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "landmine_not_present",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "landmine_not_present = \"Landmine not present for word %s\"\nspam_check_on = \"Spam check is now on\"\nspam_check_off = \"Spam check is now off\"\nrepeated_message_warning = \"%s has sent a message that is the same as the last few sent by %s, this is a warning\"\nknight_added = \"%s is now a knight ~*\"\nknight_already_added = \"%s is already a knight ~*\"\nknight_removed = \"%s is no longer a knight ~*\"\nknight_not_added = \"%s is already not a knight ~*\"\nshortened_greet_on = \"Short greets are now on\"\nshortened_greet_off = \"Short greets are turned off now\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "spam_check_on",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "spam_check_on = \"Spam check is now on\"\nspam_check_off = \"Spam check is now off\"\nrepeated_message_warning = \"%s has sent a message that is the same as the last few sent by %s, this is a warning\"\nknight_added = \"%s is now a knight ~*\"\nknight_already_added = \"%s is already a knight ~*\"\nknight_removed = \"%s is no longer a knight ~*\"\nknight_not_added = \"%s is already not a knight ~*\"\nshortened_greet_on = \"Short greets are now on\"\nshortened_greet_off = \"Short greets are turned off now\"\nGreet_1_short = \"Hi again, %s, say 'what is wfaf' for more info ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "spam_check_off",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "spam_check_off = \"Spam check is now off\"\nrepeated_message_warning = \"%s has sent a message that is the same as the last few sent by %s, this is a warning\"\nknight_added = \"%s is now a knight ~*\"\nknight_already_added = \"%s is already a knight ~*\"\nknight_removed = \"%s is no longer a knight ~*\"\nknight_not_added = \"%s is already not a knight ~*\"\nshortened_greet_on = \"Short greets are now on\"\nshortened_greet_off = \"Short greets are turned off now\"\nGreet_1_short = \"Hi again, %s, say 'what is wfaf' for more info ~*\"\nGreet_2_short = \"Hello, %s, try asking 'what is wfaf' for more info ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "repeated_message_warning",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "repeated_message_warning = \"%s has sent a message that is the same as the last few sent by %s, this is a warning\"\nknight_added = \"%s is now a knight ~*\"\nknight_already_added = \"%s is already a knight ~*\"\nknight_removed = \"%s is no longer a knight ~*\"\nknight_not_added = \"%s is already not a knight ~*\"\nshortened_greet_on = \"Short greets are now on\"\nshortened_greet_off = \"Short greets are turned off now\"\nGreet_1_short = \"Hi again, %s, say 'what is wfaf' for more info ~*\"\nGreet_2_short = \"Hello, %s, try asking 'what is wfaf' for more info ~*\"\nGreet_general_short = \"Hi, %s, welcome to WFAF ~*\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "knight_added",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "knight_added = \"%s is now a knight ~*\"\nknight_already_added = \"%s is already a knight ~*\"\nknight_removed = \"%s is no longer a knight ~*\"\nknight_not_added = \"%s is already not a knight ~*\"\nshortened_greet_on = \"Short greets are now on\"\nshortened_greet_off = \"Short greets are turned off now\"\nGreet_1_short = \"Hi again, %s, say 'what is wfaf' for more info ~*\"\nGreet_2_short = \"Hello, %s, try asking 'what is wfaf' for more info ~*\"\nGreet_general_short = \"Hi, %s, welcome to WFAF ~*\"\nnickname_added = \"Nickname %s added for %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "knight_already_added",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "knight_already_added = \"%s is already a knight ~*\"\nknight_removed = \"%s is no longer a knight ~*\"\nknight_not_added = \"%s is already not a knight ~*\"\nshortened_greet_on = \"Short greets are now on\"\nshortened_greet_off = \"Short greets are turned off now\"\nGreet_1_short = \"Hi again, %s, say 'what is wfaf' for more info ~*\"\nGreet_2_short = \"Hello, %s, try asking 'what is wfaf' for more info ~*\"\nGreet_general_short = \"Hi, %s, welcome to WFAF ~*\"\nnickname_added = \"Nickname %s added for %s\"\nnickname_updated = \"Nickname %s updated for %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "knight_removed",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "knight_removed = \"%s is no longer a knight ~*\"\nknight_not_added = \"%s is already not a knight ~*\"\nshortened_greet_on = \"Short greets are now on\"\nshortened_greet_off = \"Short greets are turned off now\"\nGreet_1_short = \"Hi again, %s, say 'what is wfaf' for more info ~*\"\nGreet_2_short = \"Hello, %s, try asking 'what is wfaf' for more info ~*\"\nGreet_general_short = \"Hi, %s, welcome to WFAF ~*\"\nnickname_added = \"Nickname %s added for %s\"\nnickname_updated = \"Nickname %s updated for %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "knight_not_added",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "knight_not_added = \"%s is already not a knight ~*\"\nshortened_greet_on = \"Short greets are now on\"\nshortened_greet_off = \"Short greets are turned off now\"\nGreet_1_short = \"Hi again, %s, say 'what is wfaf' for more info ~*\"\nGreet_2_short = \"Hello, %s, try asking 'what is wfaf' for more info ~*\"\nGreet_general_short = \"Hi, %s, welcome to WFAF ~*\"\nnickname_added = \"Nickname %s added for %s\"\nnickname_updated = \"Nickname %s updated for %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "shortened_greet_on",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "shortened_greet_on = \"Short greets are now on\"\nshortened_greet_off = \"Short greets are turned off now\"\nGreet_1_short = \"Hi again, %s, say 'what is wfaf' for more info ~*\"\nGreet_2_short = \"Hello, %s, try asking 'what is wfaf' for more info ~*\"\nGreet_general_short = \"Hi, %s, welcome to WFAF ~*\"\nnickname_added = \"Nickname %s added for %s\"\nnickname_updated = \"Nickname %s updated for %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "shortened_greet_off",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "shortened_greet_off = \"Short greets are turned off now\"\nGreet_1_short = \"Hi again, %s, say 'what is wfaf' for more info ~*\"\nGreet_2_short = \"Hello, %s, try asking 'what is wfaf' for more info ~*\"\nGreet_general_short = \"Hi, %s, welcome to WFAF ~*\"\nnickname_added = \"Nickname %s added for %s\"\nnickname_updated = \"Nickname %s updated for %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "Greet_1_short",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "Greet_1_short = \"Hi again, %s, say 'what is wfaf' for more info ~*\"\nGreet_2_short = \"Hello, %s, try asking 'what is wfaf' for more info ~*\"\nGreet_general_short = \"Hi, %s, welcome to WFAF ~*\"\nnickname_added = \"Nickname %s added for %s\"\nnickname_updated = \"Nickname %s updated for %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "Greet_2_short",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "Greet_2_short = \"Hello, %s, try asking 'what is wfaf' for more info ~*\"\nGreet_general_short = \"Hi, %s, welcome to WFAF ~*\"\nnickname_added = \"Nickname %s added for %s\"\nnickname_updated = \"Nickname %s updated for %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "Greet_general_short",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "Greet_general_short = \"Hi, %s, welcome to WFAF ~*\"\nnickname_added = \"Nickname %s added for %s\"\nnickname_updated = \"Nickname %s updated for %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "nickname_added",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "nickname_added = \"Nickname %s added for %s\"\nnickname_updated = \"Nickname %s updated for %s\"",
        "detail": "var",
        "documentation": {}
    },
    {
        "label": "nickname_updated",
        "kind": 5,
        "importPath": "var",
        "description": "var",
        "peekOfCode": "nickname_updated = \"Nickname %s updated for %s\"",
        "detail": "var",
        "documentation": {}
    }
]